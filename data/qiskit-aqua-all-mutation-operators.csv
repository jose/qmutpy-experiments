target,test,number_of_tests,time_to_run_tests_on_non_mutated_code,time_to_create_targets_ast,time_to_create_mutated_modules,time_to_run_tests_on_mutated_modules,time_to_generate_mutated_asts,time_to_mutate_module,total_time,mutation_id,line_number,operator,status,killer,exception_traceback,number_of_tests_executed,time_to_run_tests_on_mutated_module
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,180.42991638183594,0.05089282989501953,NA,NA,NA,0.24475908279418945,183.7374885082245,NA,NA,AOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,175.43386507034302,0.06202864646911621,0.15906095504760742,5033.717342376709,18.53624987602234,5052.474681854248,5230.423239707947,1,242,AOR,survived,,,593,191.51937198638916
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,175.43386507034302,0.06202864646911621,0.15906095504760742,5033.717342376709,18.53624987602234,5052.474681854248,5230.423239707947,2,242,AOR,survived,,,593,128.48999762535095
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,175.43386507034302,0.06202864646911621,0.15906095504760742,5033.717342376709,18.53624987602234,5052.474681854248,5230.423239707947,3,242,AOR,timeout,,,,877.284708738327
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,175.43386507034302,0.06202864646911621,0.15906095504760742,5033.717342376709,18.53624987602234,5052.474681854248,5230.423239707947,4,256,AOR,timeout,,,,877.2899870872498
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,175.43386507034302,0.06202864646911621,0.15906095504760742,5033.717342376709,18.53624987602234,5052.474681854248,5230.423239707947,5,256,AOR,timeout,,,,877.2871584892273
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,175.43386507034302,0.06202864646911621,0.15906095504760742,5033.717342376709,18.53624987602234,5052.474681854248,5230.423239707947,6,256,AOR,timeout,,,,877.2305686473846
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,175.43386507034302,0.06202864646911621,0.15906095504760742,5033.717342376709,18.53624987602234,5052.474681854248,5230.423239707947,7,298,AOR,survived,,,593,148.93915915489197
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,175.43386507034302,0.06202864646911621,0.15906095504760742,5033.717342376709,18.53624987602234,5052.474681854248,5230.423239707947,8,298,AOR,survived,,,593,151.4512209892273
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,175.43386507034302,0.06202864646911621,0.15906095504760742,5033.717342376709,18.53624987602234,5052.474681854248,5230.423239707947,9,298,AOR,survived,,,593,152.25507140159607
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,175.43386507034302,0.06202864646911621,0.15906095504760742,5033.717342376709,18.53624987602234,5052.474681854248,5230.423239707947,10,298,AOR,survived,,,593,171.958842754364
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,175.43386507034302,0.06202864646911621,0.15906095504760742,5033.717342376709,18.53624987602234,5052.474681854248,5230.423239707947,11,298,AOR,survived,,,593,166.63046407699585
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,175.43386507034302,0.06202864646911621,0.15906095504760742,5033.717342376709,18.53624987602234,5052.474681854248,5230.423239707947,12,298,AOR,survived,,,593,143.63243126869202
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,175.43386507034302,0.06202864646911621,0.15906095504760742,5033.717342376709,18.53624987602234,5052.474681854248,5230.423239707947,13,298,AOR,survived,,,593,129.19760990142822
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,175.43386507034302,0.06202864646911621,0.15906095504760742,5033.717342376709,18.53624987602234,5052.474681854248,5230.423239707947,14,298,AOR,survived,,,593,140.0970892906189
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,191.88298273086548,0.06281709671020508,0.007381439208984375,959.4647946357727,1.8561010360717773,961.3910942077637,1158.498899936676,1,267,ASR,timeout,,,,959.4537844657898
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,180.31628227233887,0.06364870071411133,0.029723644256591797,635.0667238235474,3.2985851764678955,638.458681344986,823.8253936767578,1,269,BCR,survived,,,593,632.4436795711517
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,180.31628227233887,0.06364870071411133,0.029723644256591797,635.0667238235474,3.2985851764678955,638.458681344986,823.8253936767578,2,405,BCR,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['101', '000', '011'] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n'101'\n\n- ['101', '000', '011']\n+ []\n",1,2.5857491493225098
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,158.20917129516602,0.05885958671569824,0.05310940742492676,3164.888878583908,7.4890899658203125,3172.489937543869,3335.199580192566,1,260,COD,timeout,,,,791.1839597225189
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,158.20917129516602,0.05885958671569824,0.05310940742492676,3164.888878583908,7.4890899658203125,3172.489937543869,3335.199580192566,2,462,COD,timeout,,,,791.136670589447
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,158.20917129516602,0.05885958671569824,0.05310940742492676,3164.888878583908,7.4890899658203125,3172.489937543869,3335.199580192566,3,470,COD,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 240, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 473, in _construct_grover_operator\nqiskit.aqua.aqua_error.AquaError: 'Missing the evaluate_classically() method                     from the provided oracle instance.'\n",1,0.1263115406036377
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,158.20917129516602,0.05885958671569824,0.05310940742492676,3164.888878583908,7.4890899658203125,3172.489937543869,3335.199580192566,4,477,COD,timeout,,,,791.1775438785553
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,158.20917129516602,0.05885958671569824,0.05310940742492676,3164.888878583908,7.4890899658203125,3172.489937543869,3335.199580192566,5,545,COD,timeout,,,,791.1969487667084
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,1,218,COI,killed,test_state_preparation_quantumcircuit (test.aqua.test_grover.TestGroverConstructor),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 141, in test_state_preparation_quantumcircuit\n    self.assertTrue(Operator(grover_op).equiv(Operator(expected_grover_op)))\nAssertionError: False is not true\n",583,168.38497734069824
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,2,221,COI,timeout,,,,842.6643483638763
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,3,227,COI,timeout,,,,842.6757304668427
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,4,234,COI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 242, in __init__\nAttributeError: 'NoneType' object has no attribute 'reflection_qubits'\n",1,0.13571643829345703
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,5,243,COI,killed,test_iterations (test.aqua.test_grover.TestGroverFunctionality),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 289, in test_iterations\n    self.assertTrue(Operator(ret['circuit']).equiv(Operator(self._expected)))\nAssertionError: False is not true\n",588,95.7620780467987
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,6,244,COI,timeout,,,,842.7407321929932
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,7,248,COI,survived,,,593,142.3782181739807
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,8,254,COI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 408, in _run\nUnboundLocalError: local variable 'assignment' referenced before assignment\n",1,0.1748032569885254
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,9,258,COI,timeout,,,,842.6447422504425
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,10,260,COI,timeout,,,,842.7407495975494
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,11,268,COI,killed,test_grover_00010 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['101', '000', '011'] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n'101'\n\n- ['101', '000', '011']\n+ []\n",10,2.828537940979004
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,12,281,COI,survived,,,593,116.6834237575531
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,13,302,COI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['101', '000', '011'] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n'101'\n\n- ['101', '000', '011']\n+ []\n",1,2.1551334857940674
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,14,308,COI,killed,test_iterations (test.aqua.test_grover.TestGroverFunctionality),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 288, in test_iterations\n    ret = grover.run(self._sv)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 403, in _run\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 309, in _run_experiment\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 58, in partial_trace\n    arr = state._data.reshape(state._op_shape.tensor_shape)\nValueError: cannot reshape array of size 8 into shape (2,2,2,2,2,2)\n",588,130.53974890708923
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,15,336,COI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 403, in _run\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 325, in _run_experiment\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 345, in is_good_state\nAttributeError: 'function' object has no attribute 'probabilities_dict'\n",1,0.402498722076416
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,16,338,COI,killed,test_run_circuit_oracle (test.aqua.test_grover.TestGroverExecution),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 311, in test_run_circuit_oracle\n    ret = grover.run(self._qasm)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 403, in _run\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 325, in _run_experiment\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 345, in is_good_state\nAttributeError: 'list' object has no attribute 'probabilities_dict'\n",585,117.61202955245972
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,17,339,COI,timeout,,,,842.7472903728485
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,18,340,COI,killed,test_iterations (test.aqua.test_grover.TestGroverFunctionality),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 293, in test_iterations\n    self.assertTrue(ret.oracle_evaluation)\nAssertionError: False is not true\n",588,132.18835616111755
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,19,345,COI,killed,test_is_good_state (test.aqua.test_grover.TestGroverPublicMethods),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 199, in test_is_good_state\n    self.assertTrue(grover.is_good_state(""11""))\nAssertionError: False is not true\n",592,128.08411169052124
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,20,359,COI,timeout,,,,842.6637680530548
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,21,362,COI,killed,test_run_circuit_oracle (test.aqua.test_grover.TestGroverExecution),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 311, in test_run_circuit_oracle\n    ret = grover.run(self._qasm)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 403, in _run\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 325, in _run_experiment\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 365, in post_processing\nAttributeError: 'QuantumCircuit' object has no attribute 'evaluate_classically'\n",585,150.52603578567505
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,22,381,COI,killed,test_grover_00066 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['01'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'01'\n\n- ['01']\n+ []\n",66,21.039390563964844
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,23,386,COI,killed,test_grover_00013 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['101', '000', '011'] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n'101'\n\n- ['101', '000', '011']\n+ []\n",13,1.3457810878753662
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,24,389,COI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 403, in _run\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 309, in _run_experiment\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 46, in partial_trace\n    traced_shape = state._op_shape.remove(qargs=qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/operators/op_shape.py"", line 337, in remove\n    raise QiskitError(""Max qargs_l is larger than number of left qargs"")\nqiskit.exceptions.QiskitError: 'Max qargs_l is larger than number of left qargs'\n",1,0.4732184410095215
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,25,401,COI,killed,test_grover_00002 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 402, in _run\n  File ""_generator.pyx"", line 540, in numpy.random._generator.Generator.integers\n  File ""_bounded_integers.pyx"", line 1254, in numpy.random._bounded_integers._rand_int64\nValueError: low >= high\n",2,0.2988929748535156
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,26,404,COI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['101', '000', '011'] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n'101'\n\n- ['101', '000', '011']\n+ []\n",1,2.5274174213409424
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,27,412,COI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 413, in _run\nKeyError: 'measurement'\n",1,0.4761958122253418
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,28,412,COI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 413, in _run\nKeyError: 'measurement'\n",1,0.43970227241516113
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,29,414,COI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 88, in test_grover\n    self.assertIn(ret.top_measurement, groundtruth)\nAssertionError: None not found in ['101', '000', '011']\n",1,0.45084261894226074
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,30,414,COI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 88, in test_grover\n    self.assertIn(ret.top_measurement, groundtruth)\nAssertionError: None not found in ['101', '000', '011']\n",1,0.6460921764373779
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,31,416,COI,killed,test_iterations (test.aqua.test_grover.TestGroverFunctionality),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 289, in test_iterations\n    self.assertTrue(Operator(ret['circuit']).equiv(Operator(self._expected)))\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 612, in __getitem__\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'circuit'\n",588,143.1593267917633
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,32,416,COI,killed,test_iterations (test.aqua.test_grover.TestGroverFunctionality),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 289, in test_iterations\n    self.assertTrue(Operator(ret['circuit']).equiv(Operator(self._expected)))\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 612, in __getitem__\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'circuit'\n",588,136.38244676589966
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,33,433,COI,killed,test_grover_00013 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['101', '000', '011'] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n'101'\n\n- ['101', '000', '011']\n+ []\n",13,7.836326599121094
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,34,443,COI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 403, in _run\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 325, in _run_experiment\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 365, in post_processing\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/oracles/logical_expression_oracle.py"", line 228, in evaluate_classically\n    assignment_dict[self._lit_to_var[abs(v)]] = bool(v > 0)\nIndexError: list index out of range\n",1,0.9087672233581543
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,35,450,COI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 240, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 456, in _construct_grover_operator\nAttributeError: 'NoneType' object has no attribute 'construct_circuit'\n",1,0.11067843437194824
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,36,455,COI,timeout,,,,842.6538407802582
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,37,462,COI,timeout,,,,842.7429642677307
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,38,469,COI,timeout,,,,842.7476327419281
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,39,470,COI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 240, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 473, in _construct_grover_operator\nqiskit.aqua.aqua_error.AquaError: 'Missing the evaluate_classically() method                     from the provided oracle instance.'\n",1,0.09918379783630371
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,40,477,COI,timeout,,,,842.7410206794739
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,41,491,COI,survived,,,593,118.66867804527283
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,42,498,COI,killed,test_grover_operator (test.aqua.test_grover.TestGroverConstructor),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 181, in test_grover_operator\n    grover_operator=grover_op, good_state=[""11""])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 217, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 500, in _check_deprecated_args\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: mct_mode must be one of '{'basic', 'noancilla', 'advanced', 'basic-dirty-ancilla'}', was 'None'.\n",578,120.86940264701843
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,43,507,COI,survived,,,593,108.45600366592407
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,44,515,COI,survived,,,593,107.43226766586304
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,45,523,COI,timeout,,,,842.739818572998
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,46,536,COI,timeout,,,,842.7444610595703
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,47,538,COI,timeout,,,,842.7099452018738
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,48,539,COI,timeout,,,,842.7411732673645
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,49,542,COI,timeout,,,,842.7397029399872
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,50,545,COI,timeout,,,,842.7428045272827
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,168.5247049331665,0.061551570892333984,0.4671013355255127,16287.082382917404,58.81673789024353,16346.427773714066,16519.23977279663,51,608,COI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 88, in test_grover\n    self.assertIn(ret.top_measurement, groundtruth)\nAssertionError: [1, 2, -3] not found in ['101', '000', '011']\n",1,0.4047403335571289
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,1,135,CRP,killed,test_run_grover_operator_oracle (test.aqua.test_grover.TestGroverExecution),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 329, in test_run_grover_operator_oracle\n    self.assertIn(ret['top_measurement'], ['11'])\nAssertionError: '10' not found in ['11']\n",586,150.07294082641602
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,2,215,CRP,survived,,,593,144.8252568244934
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,3,215,CRP,survived,,,593,140.7859284877777
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,4,216,CRP,survived,,,593,139.85087895393372
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,5,216,CRP,survived,,,593,147.788512468338
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,6,216,CRP,survived,,,593,163.52688646316528
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,7,216,CRP,survived,,,593,171.8197844028473
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,8,222,CRP,killed,test_is_good_state_list (test.aqua.test_grover.TestGroverConstructor),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 164, in test_is_good_state_list\n    grover = Grover(oracle=oracle, good_state=is_good_state)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 240, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 483, in _construct_grover_operator\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/grover_operator.py"", line 199, in __init__\n    self._build()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/grover_operator.py"", line 240, in _build\n    self.zero_reflection.num_ancillas,\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/grover_operator.py"", line 217, in zero_reflection\n    return _zero_reflection(num_state_qubits, self.reflection_qubits, self._mcx_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/grover_operator.py"", line 270, in _zero_reflection\n    num_ancillas = MCXGate.get_num_ancilla_qubits(len(qubits) - 1, mcx_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/standard_gates/x.py"", line 878, in get_num_ancilla_qubits\n    raise AttributeError('Unsupported mode ({}) specified!'.format(mode))\nAttributeError: Unsupported mode (mutpy) specified!\n",579,148.20714616775513
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,9,222,CRP,killed,test_is_good_state_list (test.aqua.test_grover.TestGroverConstructor),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 164, in test_is_good_state_list\n    grover = Grover(oracle=oracle, good_state=is_good_state)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 240, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 483, in _construct_grover_operator\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/grover_operator.py"", line 199, in __init__\n    self._build()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/grover_operator.py"", line 240, in _build\n    self.zero_reflection.num_ancillas,\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/grover_operator.py"", line 217, in zero_reflection\n    return _zero_reflection(num_state_qubits, self.reflection_qubits, self._mcx_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/grover_operator.py"", line 270, in _zero_reflection\n    num_ancillas = MCXGate.get_num_ancilla_qubits(len(qubits) - 1, mcx_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/standard_gates/x.py"", line 878, in get_num_ancilla_qubits\n    raise AttributeError('Unsupported mode ({}) specified!'.format(mode))\nAttributeError: Unsupported mode () specified!\n",579,159.71109247207642
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,10,229,CRP,killed,test_grover_00010 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 88, in test_grover\n    self.assertIn(ret.top_measurement, groundtruth)\nAssertionError: '100' not found in ['101', '000', '011']\n",10,3.584157705307007
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,11,242,CRP,survived,,,593,166.36270451545715
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,12,242,CRP,survived,,,593,126.33125901222229
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,13,249,CRP,survived,,,593,133.02333760261536
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,14,253,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['101', '000', '011'] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n'101'\n\n- ['101', '000', '011']\n+ []\n",1,1.378751277923584
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,15,281,CRP,survived,,,593,160.12982559204102
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,16,283,CRP,survived,,,593,139.92153143882751
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,17,283,CRP,survived,,,593,117.24209761619568
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,18,121,CRP,timeout,,,,742.0388429164886
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,19,121,CRP,timeout,,,,741.9639945030212
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,20,122,CRP,survived,,,593,126.19245052337646
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,21,122,CRP,survived,,,593,132.4595000743866
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,22,122,CRP,timeout,,,,742.0339922904968
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,23,122,CRP,timeout,,,,742.0305273532867
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,24,123,CRP,survived,,,593,129.98960638046265
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,25,123,CRP,survived,,,593,149.43659591674805
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,26,123,CRP,timeout,,,,741.9788057804108
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,27,123,CRP,timeout,,,,742.0361335277557
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,28,124,CRP,timeout,,,,742.0358550548553
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,29,124,CRP,timeout,,,,742.0342710018158
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,30,125,CRP,survived,,,593,115.05323314666748
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,31,125,CRP,survived,,,593,110.66817545890808
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,32,125,CRP,timeout,,,,742.0338463783264
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,33,125,CRP,timeout,,,,742.035835981369
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,34,126,CRP,survived,,,593,110.8985607624054
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,35,126,CRP,survived,,,593,118.22093152999878
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,36,126,CRP,timeout,,,,741.9441437721252
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,37,126,CRP,timeout,,,,741.956380367279
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,38,127,CRP,survived,,,593,124.8221025466919
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,39,127,CRP,survived,,,593,129.20597171783447
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,40,127,CRP,timeout,,,,741.9976274967194
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,41,127,CRP,timeout,,,,741.988499879837
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,42,128,CRP,survived,,,593,126.38960528373718
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,43,128,CRP,survived,,,593,125.23660826683044
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,44,128,CRP,timeout,,,,742.0343277454376
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,45,128,CRP,timeout,,,,742.0348446369171
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,46,129,CRP,timeout,,,,742.038581609726
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,47,298,CRP,survived,,,593,114.9340386390686
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,48,298,CRP,survived,,,593,117.75698637962341
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,49,312,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 403, in _run\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 312, in _run_experiment\nIndexError: tuple index out of range\n",1,0.38247227668762207
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,50,312,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 403, in _run\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 312, in _run_experiment\nIndexError: index 1 is out of bounds for axis 0 with size 1\n",1,0.333695650100708
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,51,318,CRP,survived,,,593,126.93751430511475
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,52,318,CRP,survived,,,593,117.0773196220398
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,53,319,CRP,killed,test_grover_00009 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 403, in _run\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 319, in _run_experiment\nIndexError: tuple index out of range\n",9,2.0270397663116455
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,54,319,CRP,timeout,,,,742.0326693058014
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,55,321,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 88, in test_grover\n    self.assertIn(ret.top_measurement, groundtruth)\nAssertionError: None not found in ['101', '000', '011']\n",1,0.4069538116455078
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,56,321,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 88, in test_grover\n    self.assertIn(ret.top_measurement, groundtruth)\nAssertionError: None not found in ['101', '000', '011']\n",1,0.4091188907623291
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,57,342,CRP,killed,test_is_good_state (test.aqua.test_grover.TestGroverPublicMethods),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 203, in test_is_good_state\n    self.assertTrue(grover.is_good_state(""11""))\nAssertionError: False is not true\n",592,115.61332416534424
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,58,342,CRP,killed,test_is_good_state (test.aqua.test_grover.TestGroverPublicMethods),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 203, in test_is_good_state\n    self.assertTrue(grover.is_good_state(""11""))\nAssertionError: False is not true\n",592,119.2473030090332
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,59,365,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 403, in _run\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 325, in _run_experiment\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 365, in post_processing\nIndexError: tuple index out of range\n",1,0.4212067127227783
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,60,382,CRP,survived,,,593,112.51533102989197
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,61,384,CRP,survived,,,593,116.1345067024231
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,62,384,CRP,survived,,,593,129.9079554080963
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,63,386,CRP,killed,test_grover_00009 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['101', '000', '011'] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n'101'\n\n- ['101', '000', '011']\n+ []\n",9,1.57035493850708
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,64,394,CRP,killed,test_iterations (test.aqua.test_grover.TestGroverFunctionality),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 289, in test_iterations\n    self.assertTrue(Operator(ret['circuit']).equiv(Operator(self._expected)))\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 612, in __getitem__\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'circuit'\n",588,136.60095310211182
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,65,394,CRP,killed,test_iterations (test.aqua.test_grover.TestGroverFunctionality),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 289, in test_iterations\n    self.assertTrue(Operator(ret['circuit']).equiv(Operator(self._expected)))\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 612, in __getitem__\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'circuit'\n",588,144.4972369670868
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,66,408,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 418, in _run\nKeyError: 'result'\n",1,0.49164533615112305
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,67,408,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 418, in _run\nKeyError: 'result'\n",1,0.3920328617095947
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,68,409,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 419, in _run\nKeyError: 'oracle_evaluation'\n",1,0.4416215419769287
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,69,409,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 419, in _run\nKeyError: 'oracle_evaluation'\n",1,0.39284825325012207
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,70,412,CRP,survived,,,593,146.0229949951172
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,71,412,CRP,survived,,,593,142.50157499313354
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,72,413,CRP,killed,test_grover_00009 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 413, in _run\nKeyError: 'mutpy'\n",9,3.576056480407715
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,73,413,CRP,killed,test_grover_00009 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 413, in _run\nKeyError: ''\n",9,2.3993330001831055
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,74,414,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 88, in test_grover\n    self.assertIn(ret.top_measurement, groundtruth)\nAssertionError: None not found in ['101', '000', '011']\n",1,0.36977481842041016
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,75,414,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 88, in test_grover\n    self.assertIn(ret.top_measurement, groundtruth)\nAssertionError: None not found in ['101', '000', '011']\n",1,0.42338061332702637
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,76,415,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 415, in _run\nKeyError: 'mutpy'\n",1,0.41449451446533203
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,77,415,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 415, in _run\nKeyError: ''\n",1,0.47681093215942383
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,78,416,CRP,killed,test_iterations (test.aqua.test_grover.TestGroverFunctionality),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 289, in test_iterations\n    self.assertTrue(Operator(ret['circuit']).equiv(Operator(self._expected)))\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 612, in __getitem__\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'circuit'\n",588,134.16038250923157
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,79,416,CRP,killed,test_iterations (test.aqua.test_grover.TestGroverFunctionality),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 289, in test_iterations\n    self.assertTrue(Operator(ret['circuit']).equiv(Operator(self._expected)))\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 612, in __getitem__\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'circuit'\n",588,157.95272731781006
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,80,417,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 417, in _run\nKeyError: 'mutpy'\n",1,0.4215514659881592
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,81,417,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 417, in _run\nKeyError: ''\n",1,0.5003437995910645
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,82,418,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 418, in _run\nKeyError: 'mutpy'\n",1,0.6458582878112793
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,83,418,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 418, in _run\nKeyError: ''\n",1,0.4832770824432373
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,84,419,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 419, in _run\nKeyError: 'mutpy'\n",1,0.6758694648742676
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,85,419,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 419, in _run\nKeyError: ''\n",1,0.4505913257598877
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,86,397,CRP,survived,,,593,140.83415389060974
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,87,397,CRP,survived,,,593,140.54467153549194
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,88,451,CRP,survived,,,593,142.55498123168945
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,89,451,CRP,survived,,,593,152.04894948005676
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,90,454,CRP,survived,,,593,144.55275511741638
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,91,457,CRP,killed,test_old_signature (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 102, in test_old_signature\n    'noancilla', backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 240, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 457, in _construct_grover_operator\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/initial_states/custom.py"", line 163, in construct_circuit\n    raise AquaError('Mode should be either ""vector"" or ""circuit""')\nqiskit.aqua.aqua_error.AquaError: 'Mode should be either ""vector"" or ""circuit""'\n",577,188.33074116706848
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,92,457,CRP,killed,test_old_signature (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 102, in test_old_signature\n    'noancilla', backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 240, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 457, in _construct_grover_operator\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/initial_states/custom.py"", line 163, in construct_circuit\n    raise AquaError('Mode should be either ""vector"" or ""circuit""')\nqiskit.aqua.aqua_error.AquaError: 'Mode should be either ""vector"" or ""circuit""'\n",577,157.77735471725464
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,93,460,CRP,survived,,,593,150.4655909538269
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,94,460,CRP,survived,,,593,131.6549723148346
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,95,463,CRP,survived,,,593,135.70129084587097
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,96,463,CRP,survived,,,593,152.86572098731995
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,97,470,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 240, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 473, in _construct_grover_operator\nqiskit.aqua.aqua_error.AquaError: 'Missing the evaluate_classically() method                     from the provided oracle instance.'\n",1,0.13223624229431152
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,98,470,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 240, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 473, in _construct_grover_operator\nqiskit.aqua.aqua_error.AquaError: 'Missing the evaluate_classically() method                     from the provided oracle instance.'\n",1,0.24087834358215332
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,99,473,CRP,survived,,,593,152.9308660030365
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,100,473,CRP,survived,,,593,179.58175587654114
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,101,478,CRP,survived,,,593,177.2006721496582
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,102,478,CRP,survived,,,593,184.79516673088074
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,103,492,CRP,survived,,,593,182.83509588241577
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,104,492,CRP,survived,,,593,176.50619316101074
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,105,496,CRP,survived,,,593,167.46065664291382
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,106,499,CRP,survived,,,593,164.36019039154053
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,107,499,CRP,survived,,,593,154.73637509346008
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,108,500,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 217, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 500, in _check_deprecated_args\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: mct_mode must be one of '{'basic-dirty-ancilla', 'noancilla', 'mutpy', 'advanced'}', was 'basic'.\n",1,0.17270493507385254
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,109,500,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 217, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 500, in _check_deprecated_args\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: mct_mode must be one of '{'', 'basic-dirty-ancilla', 'noancilla', 'advanced'}', was 'basic'.\n",1,0.18286848068237305
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,110,500,CRP,killed,test_grover_00017 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 217, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 500, in _check_deprecated_args\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: mct_mode must be one of '{'noancilla', 'basic', 'mutpy', 'advanced'}', was 'basic-dirty-ancilla'.\n",17,6.21022629737854
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,111,500,CRP,killed,test_grover_00017 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 217, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 500, in _check_deprecated_args\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: mct_mode must be one of '{'', 'basic', 'noancilla', 'advanced'}', was 'basic-dirty-ancilla'.\n",17,6.247057676315308
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,112,500,CRP,killed,test_grover_00033 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 217, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 500, in _check_deprecated_args\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: mct_mode must be one of '{'basic-dirty-ancilla', 'basic', 'mutpy', 'noancilla'}', was 'advanced'.\n",33,8.806386470794678
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,113,500,CRP,killed,test_grover_00033 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 217, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 500, in _check_deprecated_args\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: mct_mode must be one of '{'basic-dirty-ancilla', '', 'basic', 'noancilla'}', was 'advanced'.\n",33,10.683308124542236
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,114,500,CRP,killed,test_grover_00049 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 217, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 500, in _check_deprecated_args\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: mct_mode must be one of '{'basic-dirty-ancilla', 'basic', 'mutpy', 'advanced'}', was 'noancilla'.\n",49,16.695560216903687
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,115,500,CRP,killed,test_grover_00049 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 217, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 500, in _check_deprecated_args\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: mct_mode must be one of '{'basic-dirty-ancilla', '', 'basic', 'advanced'}', was 'noancilla'.\n",49,14.778771162033081
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,116,501,CRP,survived,,,593,120.20037817955017
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,117,501,CRP,survived,,,593,160.82555985450745
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,118,505,CRP,survived,,,593,160.78177881240845
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,119,508,CRP,survived,,,593,149.43518090248108
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,120,508,CRP,survived,,,593,166.83228993415833
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,121,513,CRP,survived,,,593,156.6549196243286
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,122,516,CRP,survived,,,593,169.69527435302734
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,123,516,CRP,survived,,,593,146.04670763015747
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,124,521,CRP,survived,,,593,150.40136528015137
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,125,524,CRP,survived,,,593,144.13198947906494
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,126,524,CRP,survived,,,593,151.3872573375702
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,127,524,CRP,survived,,,593,143.73788857460022
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,128,525,CRP,survived,,,593,148.668612241745
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,129,525,CRP,survived,,,593,150.72084736824036
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,130,530,CRP,survived,,,593,145.81346201896667
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,131,546,CRP,survived,,,593,138.41249918937683
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,132,546,CRP,survived,,,593,141.68934273719788
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,133,555,CRP,survived,,,593,128.42501711845398
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,134,555,CRP,survived,,,593,121.27123188972473
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,135,560,CRP,survived,,,593,121.85485005378723
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,136,560,CRP,survived,,,593,123.8292350769043
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,137,565,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 88, in test_grover\n    self.assertIn(ret.top_measurement, groundtruth)\nAssertionError: None not found in ['101', '000', '011']\n",1,0.45046162605285645
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,138,565,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 88, in test_grover\n    self.assertIn(ret.top_measurement, groundtruth)\nAssertionError: None not found in ['101', '000', '011']\n",1,0.3655102252960205
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,139,570,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 88, in test_grover\n    self.assertIn(ret.top_measurement, groundtruth)\nAssertionError: None not found in ['101', '000', '011']\n",1,0.6553857326507568
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,140,570,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 88, in test_grover\n    self.assertIn(ret.top_measurement, groundtruth)\nAssertionError: None not found in ['101', '000', '011']\n",1,0.3061492443084717
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,141,575,CRP,survived,,,593,118.28799033164978
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,142,575,CRP,survived,,,593,124.78144717216492
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,143,580,CRP,killed,test_iterations (test.aqua.test_grover.TestGroverFunctionality),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 289, in test_iterations\n    self.assertTrue(Operator(ret['circuit']).equiv(Operator(self._expected)))\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 612, in __getitem__\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'circuit'\n",588,127.48435640335083
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,144,580,CRP,killed,test_iterations (test.aqua.test_grover.TestGroverFunctionality),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 289, in test_iterations\n    self.assertTrue(Operator(ret['circuit']).equiv(Operator(self._expected)))\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 612, in __getitem__\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'circuit'\n",588,126.17203736305237
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,145,585,CRP,survived,,,593,128.33950471878052
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,146,585,CRP,survived,,,593,127.79877138137817
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,147,590,CRP,survived,,,593,131.43103408813477
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,148,590,CRP,survived,,,593,130.28219771385193
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,149,595,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['101', '000', '011'] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n'101'\n\n- ['101', '000', '011']\n+ []\n",1,0.4162473678588867
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,150,595,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['101', '000', '011'] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n'101'\n\n- ['101', '000', '011']\n+ []\n",1,0.43668556213378906
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,151,600,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['101', '000', '011'] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n'101'\n\n- ['101', '000', '011']\n+ []\n",1,0.7838680744171143
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,152,600,CRP,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['101', '000', '011'] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n'101'\n\n- ['101', '000', '011']\n+ []\n",1,0.41807985305786133
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,153,603,CRP,survived,,,593,122.89160418510437
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,154,603,CRP,survived,,,593,140.53490948677063
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,155,608,CRP,survived,,,593,131.18324756622314
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,156,608,CRP,survived,,,593,124.7529923915863
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,157,609,CRP,survived,,,593,132.00287771224976
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,158,609,CRP,survived,,,593,125.31705617904663
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,159,610,CRP,survived,,,593,111.34509420394897
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,148.38337421417236,0.22682929039001465,1.3977868556976318,27333.098821640015,191.35480308532715,27526.07824087143,27677.939618349075,160,610,CRP,survived,,,593,120.62019348144531
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,136.9967646598816,0.04659724235534668,0.14476370811462402,1183.7994685173035,16.029027223587036,1200.0198566913605,1340.5175995826721,1,120,DDL,killed,test_old_signature (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 102, in test_old_signature\n    'noancilla', backend)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 242, in __init__\nAttributeError: 'str' object has no attribute 'reflection_qubits'\n",577,130.23503041267395
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,136.9967646598816,0.04659724235534668,0.14476370811462402,1183.7994685173035,16.029027223587036,1200.0198566913605,1340.5175995826721,2,287,DDL,survived,,,593,128.2424442768097
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,136.9967646598816,0.04659724235534668,0.14476370811462402,1183.7994685173035,16.029027223587036,1200.0198566913605,1340.5175995826721,3,422,DDL,killed,test_grover_operator_getter (test.aqua.test_grover.TestGroverPublicMethods),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 254, in test_grover_operator_getter\n    self.assertTrue(Operator(constructed).equiv(Operator(expected)))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/operators/operator.py"", line 100, in __init__\n    raise QiskitError(""Invalid input data format for Operator"")\nqiskit.exceptions.QiskitError: 'Invalid input data format for Operator'\n",591,126.88203120231628
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,136.9967646598816,0.04659724235534668,0.14476370811462402,1183.7994685173035,16.029027223587036,1200.0198566913605,1340.5175995826721,4,552,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,136.9967646598816,0.04659724235534668,0.14476370811462402,1183.7994685173035,16.029027223587036,1200.0198566913605,1340.5175995826721,5,557,DDL,survived,,,593,131.813570022583
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,136.9967646598816,0.04659724235534668,0.14476370811462402,1183.7994685173035,16.029027223587036,1200.0198566913605,1340.5175995826721,6,562,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,136.9967646598816,0.04659724235534668,0.14476370811462402,1183.7994685173035,16.029027223587036,1200.0198566913605,1340.5175995826721,7,567,DDL,killed,test_run_circuit_oracle (test.aqua.test_grover.TestGroverExecution),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 312, in test_run_circuit_oracle\n    self.assertIn(ret['top_measurement'], list_good_state)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 612, in __getitem__\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'top_measurement'\n",585,136.02194619178772
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,136.9967646598816,0.04659724235534668,0.14476370811462402,1183.7994685173035,16.029027223587036,1200.0198566913605,1340.5175995826721,8,572,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,136.9967646598816,0.04659724235534668,0.14476370811462402,1183.7994685173035,16.029027223587036,1200.0198566913605,1340.5175995826721,9,577,DDL,killed,test_iterations (test.aqua.test_grover.TestGroverFunctionality),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 289, in test_iterations\n    self.assertTrue(Operator(ret['circuit']).equiv(Operator(self._expected)))\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 612, in __getitem__\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'circuit'\n",588,138.00613236427307
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,136.9967646598816,0.04659724235534668,0.14476370811462402,1183.7994685173035,16.029027223587036,1200.0198566913605,1340.5175995826721,10,582,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,136.9967646598816,0.04659724235534668,0.14476370811462402,1183.7994685173035,16.029027223587036,1200.0198566913605,1340.5175995826721,11,587,DDL,survived,,,593,133.30758213996887
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,136.9967646598816,0.04659724235534668,0.14476370811462402,1183.7994685173035,16.029027223587036,1200.0198566913605,1340.5175995826721,12,592,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,136.9967646598816,0.04659724235534668,0.14476370811462402,1183.7994685173035,16.029027223587036,1200.0198566913605,1340.5175995826721,13,597,DDL,survived,,,593,131.9225742816925
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,136.9967646598816,0.04659724235534668,0.14476370811462402,1183.7994685173035,16.029027223587036,1200.0198566913605,1340.5175995826721,14,602,DDL,survived,,,593,126.74691867828369
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,127.9090416431427,0.42453598976135254,NA,NA,NA,0.6238589286804199,131.80499649047852,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,138.87612175941467,0.05493330955505371,NA,NA,NA,0.2430422306060791,142.3416883945465,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,140.3853907585144,0.05690455436706543,NA,NA,NA,0.29561901092529297,143.85745549201965,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,124.9242434501648,0.04656529426574707,0.015254974365234375,1369.4667012691498,2.8417375087738037,1372.3702590465546,1500.1256170272827,1,120,IOD,timeout,,,,624.7412235736847
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,124.9242434501648,0.04656529426574707,0.015254974365234375,1369.4667012691498,2.8417375087738037,1372.3702590465546,1500.1256170272827,2,397,IOD,timeout,,,,624.734379529953
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,124.9242434501648,0.04656529426574707,0.015254974365234375,1369.4667012691498,2.8417375087738037,1372.3702590465546,1500.1256170272827,3,607,IOD,survived,,,593,119.96494507789612
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,110.49201130867004,0.044190406799316406,0.005305051803588867,108.25924038887024,1.3135297298431396,109.62226557731628,222.22111630439758,1,120,IOP,survived,,,593,108.25098443031311
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,110.07211184501648,0.04466438293457031,0.02676558494567871,1336.8304045200348,4.507233381271362,1341.4090678691864,1453.7535107135773,1,281,LCR,survived,,,593,118.41683387756348
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,110.07211184501648,0.04466438293457031,0.02676558494567871,1336.8304045200348,4.507233381271362,1341.4090678691864,1453.7535107135773,2,281,LCR,survived,,,593,117.52456951141357
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,110.07211184501648,0.04466438293457031,0.02676558494567871,1336.8304045200348,4.507233381271362,1341.4090678691864,1453.7535107135773,3,462,LCR,timeout,,,,550.3856890201569
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,110.07211184501648,0.04466438293457031,0.02676558494567871,1336.8304045200348,4.507233381271362,1341.4090678691864,1453.7535107135773,4,539,LCR,timeout,,,,550.4651849269867
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,136.9046835899353,0.054602622985839844,NA,NA,NA,0.24649620056152344,139.84777975082397,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.34194493293762,0.2614421844482422,NA,NA,NA,0.4438211917877197,140.98848509788513,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,151.57592177391052,0.2874906063079834,0.08611655235290527,929.9797749519348,13.06714129447937,943.4205234050751,1099.1784336566925,1,254,ROR,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 408, in _run\nUnboundLocalError: local variable 'assignment' referenced before assignment\n",1,0.24992847442626953
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,151.57592177391052,0.2874906063079834,0.08611655235290527,929.9797749519348,13.06714129447937,943.4205234050751,1099.1784336566925,2,254,ROR,survived,,,593,146.7903754711151
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,151.57592177391052,0.2874906063079834,0.08611655235290527,929.9797749519348,13.06714129447937,943.4205234050751,1099.1784336566925,3,268,ROR,killed,test_grover_00010 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['101', '000', '011'] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n'101'\n\n- ['101', '000', '011']\n+ []\n",10,2.693471670150757
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,151.57592177391052,0.2874906063079834,0.08611655235290527,929.9797749519348,13.06714129447937,943.4205234050751,1099.1784336566925,4,268,ROR,survived,,,593,126.47358417510986
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,151.57592177391052,0.2874906063079834,0.08611655235290527,929.9797749519348,13.06714129447937,943.4205234050751,1099.1784336566925,5,281,ROR,survived,,,593,135.18363332748413
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,151.57592177391052,0.2874906063079834,0.08611655235290527,929.9797749519348,13.06714129447937,943.4205234050751,1099.1784336566925,6,281,ROR,survived,,,593,134.06872248649597
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,151.57592177391052,0.2874906063079834,0.08611655235290527,929.9797749519348,13.06714129447937,943.4205234050751,1099.1784336566925,7,308,ROR,killed,test_iterations (test.aqua.test_grover.TestGroverFunctionality),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 288, in test_iterations\n    ret = grover.run(self._sv)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 403, in _run\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 309, in _run_experiment\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 58, in partial_trace\n    arr = state._data.reshape(state._op_shape.tensor_shape)\nValueError: cannot reshape array of size 8 into shape (2,2,2,2,2,2)\n",588,130.88662028312683
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,151.57592177391052,0.2874906063079834,0.08611655235290527,929.9797749519348,13.06714129447937,943.4205234050751,1099.1784336566925,8,312,ROR,killed,test_grover_00002 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 403, in _run\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 312, in _run_experiment\nIndexError: index 0 is out of bounds for axis 0 with size 0\n",2,0.5197155475616455
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,151.57592177391052,0.2874906063079834,0.08611655235290527,929.9797749519348,13.06714129447937,943.4205234050751,1099.1784336566925,9,342,ROR,killed,test_is_good_state (test.aqua.test_grover.TestGroverPublicMethods),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 203, in test_is_good_state\n    self.assertTrue(grover.is_good_state(""11""))\nAssertionError: False is not true\n",592,122.39641070365906
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,151.57592177391052,0.2874906063079834,0.08611655235290527,929.9797749519348,13.06714129447937,943.4205234050751,1099.1784336566925,10,386,ROR,killed,test_grover_00045 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['101', '000', '011'] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n'101'\n\n- ['101', '000', '011']\n+ []\n",45,4.175994634628296
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,151.57592177391052,0.2874906063079834,0.08611655235290527,929.9797749519348,13.06714129447937,943.4205234050751,1099.1784336566925,11,386,ROR,survived,,,593,126.03215503692627
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,151.57592177391052,0.2874906063079834,0.08611655235290527,929.9797749519348,13.06714129447937,943.4205234050751,1099.1784336566925,12,608,ROR,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 88, in test_grover\n    self.assertIn(ret.top_measurement, groundtruth)\nAssertionError: [1, 2, -3] not found in ['101', '000', '011']\n",1,0.3728189468383789
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,116.40293979644775,0.05221986770629883,0.0048656463623046875,100.92896842956543,1.3299179077148438,102.31597185134888,220.93735194206238,1,120,SCD,killed,test_old_signature (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""./test/aqua/test_grover.py"", line 103, in test_old_signature\n    ret = grover.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 62, in run\n    if quantum_instance is None and self.quantum_instance is None:\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 80, in quantum_instance\n    return self._quantum_instance\nAttributeError: 'Grover' object has no attribute '_quantum_instance'\n",577,100.9219868183136
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,145.40962481498718,0.04778242111206055,0.014638900756835938,145.42160534858704,2.7697973251342773,148.2538239955902,296.7596752643585,1,397,SCI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 83, in test_grover\n    ret = grover.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 400, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 75, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,0.1544485092163086
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,145.40962481498718,0.04778242111206055,0.014638900756835938,145.42160534858704,2.7697973251342773,148.2538239955902,296.7596752643585,2,607,SCI,survived,,,593,145.24511528015137
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,139.74121379852295,0.35836148262023926,NA,NA,NA,0.5529377460479736,143.71771717071533,NA,NA,SIR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,162.91519451141357,0.29808855056762695,0.03165721893310547,473.0959894657135,18.90359616279602,492.32933139801025,658.2823491096497,1,435,QGD,killed,test_grover_00065 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['01'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'01'\n\n- ['01']\n+ []\n",65,42.07844018936157
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,162.91519451141357,0.29808855056762695,0.03165721893310547,473.0959894657135,18.90359616279602,492.32933139801025,658.2823491096497,2,436,QGD,survived,,,593,145.16180801391602
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,162.91519451141357,0.29808855056762695,0.03165721893310547,473.0959894657135,18.90359616279602,492.32933139801025,658.2823491096497,3,439,QGD,survived,,,593,134.3720145225525
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,162.91519451141357,0.29808855056762695,0.03165721893310547,473.0959894657135,18.90359616279602,492.32933139801025,658.2823491096497,4,440,QGD,survived,,,593,151.4339189529419
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,1,435,QGI,killed,test_grover_00065 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['01'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'01'\n\n- ['01']\n+ []\n",65,43.20462465286255
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,2,435,QGI,survived,,,593,163.12495589256287
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,3,435,QGI,survived,,,593,145.9430639743805
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,4,435,QGI,survived,,,593,130.52164912223816
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,5,435,QGI,survived,,,593,137.75073099136353
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,6,435,QGI,survived,,,593,151.53541040420532
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,7,435,QGI,survived,,,593,143.58499121665955
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,8,435,QGI,survived,,,593,144.7102391719818
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,9,435,QGI,survived,,,593,157.5135018825531
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,10,435,QGI,survived,,,593,161.483469247818
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,11,435,QGI,killed,test_grover_00065 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['01'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'01'\n\n- ['01']\n+ []\n",65,40.16975688934326
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,12,436,QGI,killed,test_grover_00065 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['01'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'01'\n\n- ['01']\n+ []\n",65,53.76607894897461
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,13,436,QGI,killed,test_grover_00065 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['01'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'01'\n\n- ['01']\n+ []\n",65,46.25596284866333
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,14,436,QGI,survived,,,593,171.8268392086029
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,15,436,QGI,survived,,,593,168.22504305839539
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,16,436,QGI,survived,,,593,157.4603714942932
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,17,436,QGI,survived,,,593,139.0964937210083
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,18,436,QGI,survived,,,593,153.09026503562927
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,19,436,QGI,survived,,,593,160.35052394866943
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,20,436,QGI,survived,,,593,127.04288005828857
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,21,436,QGI,survived,,,593,152.029643535614
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,22,436,QGI,survived,,,593,145.23379158973694
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,23,439,QGI,survived,,,593,133.77131128311157
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,24,439,QGI,survived,,,593,140.96199369430542
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,25,439,QGI,survived,,,593,123.16545343399048
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,26,439,QGI,survived,,,593,114.45183324813843
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,27,439,QGI,survived,,,593,120.28453803062439
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,28,439,QGI,survived,,,593,137.6008174419403
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,29,439,QGI,survived,,,593,135.64271569252014
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,30,439,QGI,survived,,,593,138.43880939483643
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,31,439,QGI,survived,,,593,132.86053013801575
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,32,439,QGI,survived,,,593,130.09488725662231
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,33,439,QGI,survived,,,593,129.74596333503723
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,34,440,QGI,survived,,,593,141.4217505455017
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,35,440,QGI,survived,,,593,143.13586163520813
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,36,440,QGI,survived,,,593,148.34416556358337
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,37,440,QGI,survived,,,593,149.28558325767517
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,38,440,QGI,survived,,,593,145.17302775382996
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,39,440,QGI,survived,,,593,140.37689900398254
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,40,440,QGI,survived,,,593,129.74358558654785
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,41,440,QGI,survived,,,593,128.4709403514862
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,42,440,QGI,survived,,,593,151.70581674575806
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,43,440,QGI,survived,,,593,145.463294506073
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,172.5340437889099,0.058350563049316406,0.39678478240966797,5891.032102108002,375.3443832397461,6266.831620693207,6443.0866956710815,44,440,QGI,survived,,,593,136.11885786056519
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,1,435,QGR,killed,test_grover_00065 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['01'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'01'\n\n- ['01']\n+ []\n",65,34.989657402038574
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,2,435,QGR,survived,,,593,126.79230976104736
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,3,435,QGR,killed,test_grover_00065 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['01'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'01'\n\n- ['01']\n+ []\n",65,36.97269606590271
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,4,435,QGR,killed,test_grover_00065 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['01'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'01'\n\n- ['01']\n+ []\n",65,36.25022292137146
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,5,435,QGR,killed,test_grover_00065 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['01'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'01'\n\n- ['01']\n+ []\n",65,34.588003635406494
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,6,435,QGR,killed,test_grover_00065 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['01'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'01'\n\n- ['01']\n+ []\n",65,32.69822692871094
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,7,435,QGR,killed,test_grover_00065 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['01'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'01'\n\n- ['01']\n+ []\n",65,33.47342276573181
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,8,435,QGR,survived,,,593,120.97396755218506
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,9,435,QGR,killed,test_grover_00065 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['01'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'01'\n\n- ['01']\n+ []\n",65,31.07023787498474
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,10,435,QGR,survived,,,593,129.82581877708435
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,11,436,QGR,survived,,,593,139.08645844459534
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,12,436,QGR,survived,,,593,144.65953183174133
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,13,436,QGR,survived,,,593,138.54175758361816
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,14,436,QGR,survived,,,593,131.6333522796631
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,15,436,QGR,survived,,,593,145.77394461631775
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,16,436,QGR,survived,,,593,141.00350975990295
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,17,436,QGR,survived,,,593,137.5509467124939
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,18,436,QGR,survived,,,593,145.80463528633118
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,19,436,QGR,survived,,,593,144.73745608329773
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,20,436,QGR,survived,,,593,148.0730321407318
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,21,439,QGR,survived,,,593,142.4935324192047
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,22,439,QGR,survived,,,593,137.97195959091187
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,23,439,QGR,survived,,,593,121.7663106918335
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,24,439,QGR,survived,,,593,132.6074297428131
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,25,439,QGR,survived,,,593,139.19598841667175
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,26,439,QGR,survived,,,593,126.5497522354126
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,27,439,QGR,survived,,,593,126.93158102035522
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,28,439,QGR,survived,,,593,134.05559539794922
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,29,439,QGR,survived,,,593,137.26819229125977
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,30,439,QGR,survived,,,593,154.22066378593445
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,31,440,QGR,survived,,,593,148.9222972393036
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,32,440,QGR,survived,,,593,154.48354506492615
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,33,440,QGR,survived,,,593,142.70644783973694
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,34,440,QGR,survived,,,593,143.46769189834595
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,35,440,QGR,survived,,,593,141.86028695106506
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,36,440,QGR,survived,,,593,146.80650210380554
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,37,440,QGR,survived,,,593,146.90320992469788
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,38,440,QGR,survived,,,593,156.24939703941345
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,39,440,QGR,survived,,,593,137.16671466827393
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,137.7744162082672,0.047348976135253906,0.3277125358581543,4843.3295378685,305.0562553405762,5148.760854721069,5290.610399007797,40,440,QGR,survived,,,593,136.30452489852905
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,133.9086148738861,0.04418778419494629,0.009203195571899414,19.203412294387817,1.3156237602233887,20.57242703437805,157.51074504852295,1,392,QMD,killed,test_grover_00073 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 91, in test_grover\n    self.assertEqual(groundtruth, [])\nAssertionError: Lists differ: ['01'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'01'\n\n- ['01']\n+ []\n",73,19.19377613067627
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,147.4290201663971,0.041756391525268555,0.038494110107421875,0.7214365005493164,32.986812353134155,33.78849935531616,184.84327745437622,1,435,QMI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 240, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 483, in _construct_grover_operator\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/grover_operator.py"", line 199, in __init__\n    self._build()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/grover_operator.py"", line 245, in _build\n    self.compose(self.oracle, list(range(self.oracle.num_qubits)), inplace=True)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 708, in compose\n    raise CircuitError(""Trying to compose with another QuantumCircuit ""\nqiskit.circuit.exceptions.CircuitError: ""Trying to compose with another QuantumCircuit which has more 'in' edges.""\n",1,0.31736278533935547
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,147.4290201663971,0.041756391525268555,0.038494110107421875,0.7214365005493164,32.986812353134155,33.78849935531616,184.84327745437622,2,436,QMI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 240, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 483, in _construct_grover_operator\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/grover_operator.py"", line 199, in __init__\n    self._build()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/grover_operator.py"", line 245, in _build\n    self.compose(self.oracle, list(range(self.oracle.num_qubits)), inplace=True)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 708, in compose\n    raise CircuitError(""Trying to compose with another QuantumCircuit ""\nqiskit.circuit.exceptions.CircuitError: ""Trying to compose with another QuantumCircuit which has more 'in' edges.""\n",1,0.11667227745056152
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,147.4290201663971,0.041756391525268555,0.038494110107421875,0.7214365005493164,32.986812353134155,33.78849935531616,184.84327745437622,3,439,QMI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 240, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 483, in _construct_grover_operator\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/grover_operator.py"", line 199, in __init__\n    self._build()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/grover_operator.py"", line 245, in _build\n    self.compose(self.oracle, list(range(self.oracle.num_qubits)), inplace=True)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 708, in compose\n    raise CircuitError(""Trying to compose with another QuantumCircuit ""\nqiskit.circuit.exceptions.CircuitError: ""Trying to compose with another QuantumCircuit which has more 'in' edges.""\n",1,0.13808012008666992
qiskit.aqua.algorithms.amplitude_amplifiers.grover,test.aqua.test_grover,593,147.4290201663971,0.041756391525268555,0.038494110107421875,0.7214365005493164,32.986812353134155,33.78849935531616,184.84327745437622,4,440,QMI,killed,test_grover_00001 (test.aqua.test_grover.TestGrover),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_grover.py"", line 79, in test_grover\n    rotation_counts=rotation_counts, mct_mode=mct_mode)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/name_unnamed_args.py"", line 69, in wrapper\n    return func(*args[:skip], **kwargs)\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 240, in __init__\n  File ""qiskit.aqua.algorithms.amplitude_amplifiers.grover"", line 483, in _construct_grover_operator\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/grover_operator.py"", line 199, in __init__\n    self._build()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/grover_operator.py"", line 245, in _build\n    self.compose(self.oracle, list(range(self.oracle.num_qubits)), inplace=True)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 708, in compose\n    raise CircuitError(""Trying to compose with another QuantumCircuit ""\nqiskit.circuit.exceptions.CircuitError: ""Trying to compose with another QuantumCircuit which has more 'in' edges.""\n",1,0.10753750801086426
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,28.6537983417511,0.06553792953491211,NA,NA,NA,0.31871914863586426,31.8839111328125,NA,NA,AOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,29.028806686401367,0.14951324462890625,0.051901817321777344,514.6767117977142,10.463197708129883,525.3413245677948,557.5628070831299,1,206,AOR,survived,,,-8,28.246579885482788
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,29.028806686401367,0.14951324462890625,0.051901817321777344,514.6767117977142,10.463197708129883,525.3413245677948,557.5628070831299,2,206,AOR,survived,,,-8,25.257441997528076
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,29.028806686401367,0.14951324462890625,0.051901817321777344,514.6767117977142,10.463197708129883,525.3413245677948,557.5628070831299,3,265,AOR,timeout,,,,145.26181483268738
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,29.028806686401367,0.14951324462890625,0.051901817321777344,514.6767117977142,10.463197708129883,525.3413245677948,557.5628070831299,4,265,AOR,timeout,,,,145.28554248809814
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,29.028806686401367,0.14951324462890625,0.051901817321777344,514.6767117977142,10.463197708129883,525.3413245677948,557.5628070831299,5,265,AOR,timeout,,,,145.22958779335022
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,29.028806686401367,0.14951324462890625,0.051901817321777344,514.6767117977142,10.463197708129883,525.3413245677948,557.5628070831299,6,311,AOR,survived,,,-8,25.245912313461304
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,29.028806686401367,0.14951324462890625,0.051901817321777344,514.6767117977142,10.463197708129883,525.3413245677948,557.5628070831299,7,324,AOR,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 355, in get_kernel_matrix\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 308, in execute\n    qobj = self.assemble(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 280, in assemble\n    return compiler.assemble(circuits, **self._run_config.to_dict())\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/assembler.py"", line 155, in assemble\n    qobj_header=qobj_header, run_config=run_config)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/assembler/assemble_circuits.py"", line 269, in assemble_circuits\n    qobj_config.memory_slots = max(memory_slot_sizes)\nValueError: max() arg is an empty sequence\n",1,0.1327047348022461
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,31.116132736206055,0.09501457214355469,NA,NA,NA,0.3494596481323242,35.95373225212097,NA,NA,ASR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,28.101860761642456,0.10625934600830078,NA,NA,NA,0.37291502952575684,33.265625953674316,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,29.447988271713257,0.06119203567504883,0.06142759323120117,87.81562924385071,11.237544298171997,99.17579317092896,132.85645461082458,1,135,COD,killed,test_binary_2_circuit (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 340, in get_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 177, in _construct_circuit\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 547, in _assign_parameters\nAttributeError: Circuit needs the attribute `ordered_parameters`.\n",0,2.683943510055542
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,29.447988271713257,0.06119203567504883,0.06142759323120117,87.81562924385071,11.237544298171997,99.17579317092896,132.85645461082458,2,180,COD,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 344, in get_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 344, in <listcomp>\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/utils/deprecation.py"", line 56, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2051, in assign_parameters\n    ', '.join(map(str, params_not_in_circuit))))\nqiskit.circuit.exceptions.CircuitError: 'Cannot bind parameters (y[0], y[1]) not present in the circuit.'\n",1,0.19421625137329102
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,29.447988271713257,0.06119203567504883,0.06142759323120117,87.81562924385071,11.237544298171997,99.17579317092896,132.85645461082458,3,264,COD,survived,,,-8,24.72961664199829
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,29.447988271713257,0.06119203567504883,0.06142759323120117,87.81562924385071,11.237544298171997,99.17579317092896,132.85645461082458,4,329,COD,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 355, in get_kernel_matrix\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 308, in execute\n    qobj = self.assemble(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 280, in assemble\n    return compiler.assemble(circuits, **self._run_config.to_dict())\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/assembler.py"", line 155, in assemble\n    qobj_header=qobj_header, run_config=run_config)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/assembler/assemble_circuits.py"", line 269, in assemble_circuits\n    qobj_config.memory_slots = max(memory_slot_sizes)\nValueError: max() arg is an empty sequence\n",1,0.1365649700164795
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,29.447988271713257,0.06119203567504883,0.06142759323120117,87.81562924385071,11.237544298171997,99.17579317092896,132.85645461082458,5,370,COD,survived,,,-8,28.51734709739685
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,29.447988271713257,0.06119203567504883,0.06142759323120117,87.81562924385071,11.237544298171997,99.17579317092896,132.85645461082458,6,540,COD,survived,,,-8,31.428731203079224
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,29.447988271713257,0.06119203567504883,0.06142759323120117,87.81562924385071,11.237544298171997,99.17579317092896,132.85645461082458,7,546,COD,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 340, in get_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 177, in _construct_circuit\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 547, in _assign_parameters\nAttributeError: Circuit needs the attribute `ordered_parameters`.\n",1,0.10551333427429199
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,1,106,COI,killed,test_setup_data (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""./test/aqua/test_qsvm.py"", line 157, in test_setup_data\n    svm = QSVM(data_preparation)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 107, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/dataset_helper.py"", line 31, in get_num_classes\n    return len(list(dataset.keys()))\nAttributeError: 'NoneType' object has no attribute 'keys'\n",-6,22.7799711227417
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,2,108,COI,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 82, in test_binary\n    svm = QSVM(data_preparation, self.training_data, self.testing_data, None, lambda2=0)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 110, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Dataset has more than two classes. A multiclass extension must be provided.'\n",1,0.04278206825256348
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,3,109,COI,killed,test_multiclass_1_one_vs_all (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 216, in test_multiclass\n    multiclass_extension=method[multiclass_extension], lambda2=0)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 110, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Dataset has more than two classes. A multiclass extension must be provided.'\n",-3,7.7683727741241455
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,4,113,COI,survived,,,-8,26.762463331222534
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,5,132,COI,killed,test_binary_2_circuit (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 82, in test_binary\n    svm = QSVM(data_preparation, self.training_data, self.testing_data, None, lambda2=0)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 148, in __init__\nAttributeError: 'QuantumCircuit' object has no attribute 'feature_dimension'\n",0,3.1411356925964355
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,6,135,COI,killed,test_binary_2_circuit (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 340, in get_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 177, in _construct_circuit\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 547, in _assign_parameters\nAttributeError: Circuit needs the attribute `ordered_parameters`.\n",0,2.6929497718811035
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,7,152,COI,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 82, in test_binary\n    svm = QSVM(data_preparation, self.training_data, self.testing_data, None, lambda2=0)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 155, in __init__\nAttributeError: 'NoneType' object has no attribute 'set_estimator'\n",1,0.10403323173522949
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,8,166,COI,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 340, in get_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 167, in _construct_circuit\nValueError: x1 and x2 must be the same dimension.\n",1,0.06374049186706543
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,9,174,COI,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 340, in get_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 175, in _construct_circuit\nAttributeError: 'ZZFeatureMap' object has no attribute 'construct_circuit'\n",1,0.06753325462341309
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,10,180,COI,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 344, in get_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 344, in <listcomp>\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/utils/deprecation.py"", line 56, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2051, in assign_parameters\n    ', '.join(map(str, params_not_in_circuit))))\nqiskit.circuit.exceptions.CircuitError: 'Cannot bind parameters (y[0], y[1]) not present in the circuit.'\n",1,0.143265962600708
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,11,182,COI,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 340, in get_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 183, in _construct_circuit\nAttributeError: 'ZZFeatureMap' object has no attribute 'construct_circuit'\n",1,0.11659908294677734
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,12,189,COI,survived,,,-8,20.806050300598145
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,13,196,COI,timeout,,,,132.61507892608643
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,14,251,COI,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 254, in get_kernel_matrix\nAttributeError: 'ZZFeatureMap' object has no attribute 'support_parameterized_circuit'\n",1,0.0632791519165039
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,15,256,COI,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 266, in get_kernel_matrix\nAttributeError: 'NoneType' object has no attribute 'shape'\n",1,0.08618402481079102
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,16,269,COI,survived,,,-8,35.45840620994568
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,17,276,COI,timeout,,,,132.6085774898529
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,18,277,COI,survived,,,-8,24.161784887313843
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,19,282,COI,timeout,,,,132.60866498947144
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,20,295,COI,survived,,,-8,21.690793752670288
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,21,306,COI,survived,,,-8,25.492314100265503
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,22,318,COI,survived,,,-8,24.806448698043823
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,23,329,COI,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 355, in get_kernel_matrix\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 308, in execute\n    qobj = self.assemble(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 280, in assemble\n    return compiler.assemble(circuits, **self._run_config.to_dict())\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/assembler.py"", line 155, in assemble\n    qobj_header=qobj_header, run_config=run_config)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/assembler/assemble_circuits.py"", line 269, in assemble_circuits\n    qobj_config.memory_slots = max(memory_slot_sizes)\nValueError: max() arg is an empty sequence\n",1,0.17301225662231445
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,24,333,COI,timeout,,,,132.60613203048706
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,25,346,COI,survived,,,-8,27.06522226333618
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,26,357,COI,survived,,,-8,29.809215784072876
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,27,367,COI,survived,,,-8,27.516846895217896
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,28,370,COI,survived,,,-8,24.25947642326355
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,29,407,COI,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 408, in construct_kernel_matrix\nqiskit.aqua.aqua_error.AquaError: 'Either setup quantum instance or provide it in the parameter.'\n",1,0.08932375907897949
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,30,427,COI,survived,,,-8,24.94695210456848
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,31,450,COI,survived,,,-8,24.1762375831604
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,32,471,COI,survived,,,-8,24.071939706802368
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,33,510,COI,timeout,,,,132.58501315116882
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,34,523,COI,killed,test_setup_data (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""./test/aqua/test_qsvm.py"", line 157, in test_setup_data\n    svm = QSVM(data_preparation)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 125, in __init__\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 528, in setup_test_data\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/dataset_helper.py"", line 85, in split_dataset_to_data_and_labels\n    sorted_classes_name = sorted(list(dataset.keys()))\nAttributeError: 'NoneType' object has no attribute 'keys'\n",-6,23.686888217926025
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,35,524,COI,survived,,,-8,23.23726773262024
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,36,539,COI,survived,,,-8,25.070077657699585
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,37,540,COI,survived,,,-8,24.30988049507141
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.49788498878479,0.055352210998535156,0.32717204093933105,1157.851865530014,54.17419910430908,1212.408588886261,1242.523886680603,38,546,COI,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 340, in get_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 177, in _construct_circuit\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 547, in _assign_parameters\nAttributeError: Circuit needs the attribute `ordered_parameters`.\n",1,0.06883764266967773
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,1,77,CRP,survived,,,-8,22.52241349220276
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,2,84,CRP,survived,,,-8,22.089993476867676
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,3,102,CRP,survived,,,-8,23.02078080177307
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,4,102,CRP,survived,,,-8,23.445085763931274
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,5,103,CRP,survived,,,-8,22.6146137714386
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,6,103,CRP,survived,,,-8,21.04593324661255
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,7,104,CRP,survived,,,-8,22.63937497138977
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,8,104,CRP,survived,,,-8,21.454957962036133
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,9,107,CRP,survived,,,-8,21.492374897003174
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,10,110,CRP,survived,,,-8,19.373377323150635
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,11,110,CRP,survived,,,-8,21.368523120880127
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,12,114,CRP,survived,,,-8,20.291056156158447
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,13,114,CRP,survived,,,-8,18.558905124664307
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,14,135,CRP,survived,,,-8,19.535602569580078
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,15,135,CRP,survived,,,-8,21.116674184799194
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,16,138,CRP,survived,,,-8,19.724971055984497
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,17,138,CRP,survived,,,-8,19.34039878845215
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,18,139,CRP,survived,,,-8,19.813175678253174
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,19,139,CRP,survived,,,-8,19.951340913772583
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,20,146,CRP,survived,,,-8,18.550153970718384
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,21,146,CRP,survived,,,-8,18.515610218048096
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,22,147,CRP,survived,,,-8,18.052650213241577
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,23,148,CRP,survived,,,-8,20.98734998703003
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,24,148,CRP,survived,,,-8,21.298387050628662
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,25,149,CRP,survived,,,-8,22.27048420906067
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,26,149,CRP,survived,,,-8,21.8237042427063
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,27,167,CRP,survived,,,-8,21.653947830200195
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,28,167,CRP,survived,,,-8,20.902000904083252
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,29,169,CRP,survived,,,-8,22.3120756149292
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,30,169,CRP,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 340, in get_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 169, in _construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",1,0.07320261001586914
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,31,170,CRP,survived,,,-8,22.037752628326416
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,32,170,CRP,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 340, in get_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 170, in _construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",1,0.07644534111022949
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,33,206,CRP,survived,,,-8,22.62247347831726
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,34,265,CRP,survived,,,-8,20.54791522026062
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,35,265,CRP,survived,,,-8,23.775131940841675
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,36,266,CRP,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 368, in get_kernel_matrix\nIndexError: index 2 is out of bounds for axis 0 with size 2\n",1,2.9893648624420166
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,37,266,CRP,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 366, in get_kernel_matrix\nIndexError: index 2 is out of bounds for axis 1 with size 2\n",1,2.284900665283203
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,38,270,CRP,survived,,,-8,2.888819694519043
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,39,270,CRP,survived,,,-8,21.089192390441895
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,40,272,CRP,survived,,,-8,24.76926016807556
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,41,272,CRP,survived,,,-8,21.964808464050293
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,42,285,CRP,survived,,,-8,26.636516571044922
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,43,285,CRP,survived,,,-8,29.979853630065918
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,44,289,CRP,killed,test_binary_directly_statevector (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""./test/aqua/test_qsvm.py"", line 111, in test_binary_directly_statevector\n    result = svm.run(self.statevector_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 289, in get_kernel_matrix\nIndexError: list index out of range\n",-1,6.3204357624053955
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,45,296,CRP,survived,,,-8,32.659839153289795
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,46,296,CRP,survived,,,-8,21.859705686569214
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,47,307,CRP,survived,,,-8,24.279107809066772
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,48,307,CRP,survived,,,-8,22.124242544174194
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,49,310,CRP,killed,test_binary_directly_statevector (test.aqua.test_qsvm.TestQSVM),"concurrent.futures.process._RemoteTraceback: \n""""""\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 360, in _get_experiment\n    exp = self.results[key]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 232, in _process_worker\n    r = call_item.fn(*call_item.args, **call_item.kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 191, in _process_chunk\n    return [fn(*args) for args in chunk]\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 191, in <listcomp>\n    return [fn(*args) for args in chunk]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 90, in _task_wrapper\n    return task(value, *task_args, **task_kwargs)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 200, in _compute_overlap\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 305, in get_statevector\n    return postprocess.format_statevector(self.data(experiment)['statevector'],\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 181, in data\n    return self._get_experiment(experiment).data.to_dict()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 362, in _get_experiment\n    raise QiskitError(f'Result for experiment ""{key}"" could not be found.') from ex\nqiskit.exceptions.QiskitError: 'Result for experiment ""4"" could not be found.'\n""""""\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""./test/aqua/test_qsvm.py"", line 111, in test_binary_directly_statevector\n    result = svm.run(self.statevector_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 314, in get_kernel_matrix\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 157, in parallel_map\n    raise error\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 147, in parallel_map\n    results = list(future)\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 476, in _chain_from_iterable_of_lists\n    for element in iterable:\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 586, in result_iterator\n    yield fs.pop().result()\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 425, in result\n    return self.__get_result()\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 384, in __get_result\n    raise self._exception\nqiskit.exceptions.QiskitError: 'Result for experiment ""4"" could not be found.'\n",-1,5.625468015670776
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,50,321,CRP,survived,,,-8,21.51945424079895
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,51,336,CRP,survived,,,-8,22.419270277023315
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,52,336,CRP,survived,,,-8,26.146487712860107
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,53,337,CRP,survived,,,-8,21.0340473651886
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,54,337,CRP,survived,,,-8,20.94314956665039
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,55,341,CRP,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 341, in get_kernel_matrix\nIndexError: list index out of range\n",1,0.17975950241088867
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,56,347,CRP,survived,,,-8,23.579635620117188
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,57,347,CRP,survived,,,-8,21.891153573989868
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,58,358,CRP,survived,,,-8,21.723145484924316
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,59,358,CRP,survived,,,-8,22.60161542892456
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,60,376,CRP,survived,,,-8,23.35558581352234
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,61,408,CRP,survived,,,-8,22.51421284675598
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,62,408,CRP,survived,,,-8,23.408778429031372
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,63,428,CRP,survived,,,-8,25.417329788208008
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,64,428,CRP,survived,,,-8,25.19508147239685
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,65,451,CRP,survived,,,-8,25.670469284057617
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,66,451,CRP,survived,,,-8,23.97651982307434
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,67,472,CRP,survived,,,-8,24.28602910041809
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,68,472,CRP,survived,,,-8,22.432467699050903
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,69,525,CRP,survived,,,-8,21.56522226333618
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,70,525,CRP,survived,,,-8,21.681838750839233
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,71,546,CRP,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 340, in get_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 177, in _construct_circuit\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 547, in _assign_parameters\nAttributeError: Circuit needs the attribute `ordered_parameters`.\n",1,0.07451033592224121
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,72,546,CRP,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 340, in get_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 177, in _construct_circuit\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 547, in _assign_parameters\nAttributeError: Circuit needs the attribute `ordered_parameters`.\n",1,0.06080937385559082
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,73,547,CRP,survived,,,-8,24.7275869846344
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,23.545011520385742,0.0810396671295166,0.6268808841705322,1450.527372121811,99.32615518569946,1550.5614478588104,1577.1484789848328,74,547,CRP,survived,,,-8,23.559850692749023
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,19.567320585250854,0.06732940673828125,0.03473472595214844,78.46375226974487,6.729678153991699,85.295494556427,108.12134337425232,1,160,DDL,survived,,,-8,20.271801948547363
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,19.567320585250854,0.06732940673828125,0.03473472595214844,78.46375226974487,6.729678153991699,85.295494556427,108.12134337425232,2,194,DDL,survived,,,-8,19.122557401657104
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,19.567320585250854,0.06732940673828125,0.03473472595214844,78.46375226974487,6.729678153991699,85.295494556427,108.12134337425232,3,224,DDL,survived,,,-8,20.83111596107483
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,19.567320585250854,0.06732940673828125,0.03473472595214844,78.46375226974487,6.729678153991699,85.295494556427,108.12134337425232,4,478,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,19.567320585250854,0.06732940673828125,0.03473472595214844,78.46375226974487,6.729678153991699,85.295494556427,108.12134337425232,5,483,DDL,survived,,,-8,18.22910761833191
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,20.95112419128418,0.04612159729003906,NA,NA,NA,0.21466875076293945,24.45455050468445,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,17.98547673225403,0.05316972732543945,NA,NA,NA,0.24032974243164062,21.2366144657135,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,19.223960161209106,0.04438924789428711,NA,NA,NA,0.21360135078430176,22.42814302444458,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,19.63982129096985,0.06163740158081055,0.022135019302368164,196.61798334121704,2.565519094467163,199.26727485656738,221.61482501029968,1,79,IOD,timeout,,,,98.32192730903625
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,19.63982129096985,0.06163740158081055,0.022135019302368164,196.61798334121704,2.565519094467163,199.26727485656738,221.61482501029968,2,475,IOD,timeout,,,,98.2884931564331
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,17.364932775497437,0.052930593490600586,0.007389068603515625,17.900758504867554,1.4184582233428955,19.379536390304565,39.08324980735779,1,79,IOP,survived,,,-8,17.898925065994263
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,18.342857599258423,0.043976545333862305,0.006608009338378906,17.689370155334473,1.2100591659545898,18.950013875961304,40.221357107162476,1,370,LCR,survived,,,-8,17.68790030479431
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,20.47194766998291,0.057253122329711914,NA,NA,NA,0.2268388271331787,23.159980535507202,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,20.679689168930054,0.04639244079589844,NA,NA,NA,0.2487797737121582,23.909952878952026,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,25.081799745559692,0.07431197166442871,0.03013014793395996,24.626522064208984,6.028454542160034,30.759418725967407,59.92443108558655,1,107,ROR,survived,,,-8,24.30990242958069
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,25.081799745559692,0.07431197166442871,0.03013014793395996,24.626522064208984,6.028454542160034,30.759418725967407,59.92443108558655,2,107,ROR,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 82, in test_binary\n    svm = QSVM(data_preparation, self.training_data, self.testing_data, None, lambda2=0)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 110, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Dataset has more than two classes. A multiclass extension must be provided.'\n",1,0.04010748863220215
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,25.081799745559692,0.07431197166442871,0.03013014793395996,24.626522064208984,6.028454542160034,30.759418725967407,59.92443108558655,3,166,ROR,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 340, in get_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 167, in _construct_circuit\nValueError: x1 and x2 must be the same dimension.\n",1,0.06939911842346191
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,25.081799745559692,0.07431197166442871,0.03013014793395996,24.626522064208984,6.028454542160034,30.759418725967407,59.92443108558655,4,329,ROR,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 135, in run\n    self.train(self._qalgo.training_dataset[0], self._qalgo.training_dataset[1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classifiers/qsvm/_qsvm_binary.py"", line 78, in train\n    kernel_matrix = self._qalgo.construct_kernel_matrix(data)\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 410, in construct_kernel_matrix\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 355, in get_kernel_matrix\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 308, in execute\n    qobj = self.assemble(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 280, in assemble\n    return compiler.assemble(circuits, **self._run_config.to_dict())\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/assembler.py"", line 155, in assemble\n    qobj_header=qobj_header, run_config=run_config)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/assembler/assemble_circuits.py"", line 269, in assemble_circuits\n    qobj_config.memory_slots = max(memory_slot_sizes)\nValueError: max() arg is an empty sequence\n",1,0.19887018203735352
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,17.58275318145752,0.04526853561401367,0.0060694217681884766,17.865527629852295,1.5051958560943604,19.422061443328857,39.18170619010925,1,79,SCD,survived,,,-8,17.863786458969116
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,22.096362113952637,0.04688310623168945,0.010146379470825195,0.148179292678833,1.5141663551330566,1.7193751335144043,26.562401294708252,1,475,SCI,killed,test_binary_1_library (test.aqua.test_qsvm.TestQSVM),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qsvm.py"", line 85, in test_binary\n    result = svm.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.qsvm.qsvm"", line 476, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 75, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,0.14565372467041016
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,22.54457998275757,0.06869959831237793,NA,NA,NA,0.2834017276763916,25.79234528541565,NA,NA,SIR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,24.45901608467102,0.10807061195373535,NA,NA,NA,11.869005680084229,39.82896947860718,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,26.880876302719116,0.06026411056518555,NA,NA,NA,1069.9083659648895,1100.3866894245148,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,19.642334699630737,0.046340227127075195,NA,NA,NA,759.9533059597015,782.3789529800415,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,19.126283407211304,0.0418696403503418,0.0067942142486572266,13.541457176208496,1.1516878604888916,14.741808891296387,36.18445014953613,1,191,QMD,survived,,,-8,13.539373636245728
qiskit.aqua.algorithms.classifiers.qsvm.qsvm,test.aqua.test_qsvm,0,25.297066688537598,0.05791115760803223,NA,NA,NA,33.297534227371216,62.191364765167236,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.05136442184448242,0.011503934860229492,NA,NA,NA,0.059714555740356445,2.9403865337371826,NA,NA,AOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.055567264556884766,0.01254415512084961,NA,NA,NA,0.06537127494812012,2.986156702041626,NA,NA,AOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.06619691848754883,0.01655721664428711,NA,NA,NA,0.0856938362121582,3.6428706645965576,NA,NA,ASR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07025432586669922,0.014480352401733398,NA,NA,NA,0.17261052131652832,4.056842803955078,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.055052995681762695,0.012366771697998047,NA,NA,NA,0.07613015174865723,5.1406567096710205,NA,NA,COD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.06459856033325195,0.013767719268798828,0.020192623138427734,0.46690893173217773,0.9796478748321533,1.4805171489715576,5.126324415206909,1,74,COI,killed,test_binary (test.aqua.test_sklearn_svm.TestSklearnSVM),"Traceback (most recent call last):\n  File ""./test/aqua/test_sklearn_svm.py"", line 100, in test_binary\n    result = SklearnSVM(training_input, test_input, total_array).run()\n  File ""qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm"", line 75, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Training dataset must be provided.'\n",1,0.05809926986694336
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.06459856033325195,0.013767719268798828,0.020192623138427734,0.46690893173217773,0.9796478748321533,1.4805171489715576,5.126324415206909,2,78,COI,killed,test_binary (test.aqua.test_sklearn_svm.TestSklearnSVM),"Traceback (most recent call last):\n  File ""./test/aqua/test_sklearn_svm.py"", line 100, in test_binary\n    result = SklearnSVM(training_input, test_input, total_array).run()\n  File ""qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm"", line 80, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Dataset has more than two classes. A multiclass extension must be provided.'\n",1,0.05823159217834473
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.06459856033325195,0.013767719268798828,0.020192623138427734,0.46690893173217773,0.9796478748321533,1.4805171489715576,5.126324415206909,3,79,COI,killed,test_multiclass_all_pairs (test.aqua.test_sklearn_svm.TestSklearnSVM),"Traceback (most recent call last):\n  File ""./test/aqua/test_sklearn_svm.py"", line 316, in test_multiclass_all_pairs\n    multiclass_extension=AllPairs()).run()\n  File ""qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm"", line 80, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Dataset has more than two classes. A multiclass extension must be provided.'\n",0,0.060260772705078125
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.06459856033325195,0.013767719268798828,0.020192623138427734,0.46690893173217773,0.9796478748321533,1.4805171489715576,5.126324415206909,4,83,COI,survived,,,2,0.22697138786315918
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.06459856033325195,0.013767719268798828,0.020192623138427734,0.46690893173217773,0.9796478748321533,1.4805171489715576,5.126324415206909,5,88,COI,killed,test_binary (test.aqua.test_sklearn_svm.TestSklearnSVM),"Traceback (most recent call last):\n  File ""./test/aqua/test_sklearn_svm.py"", line 100, in test_binary\n    result = SklearnSVM(training_input, test_input, total_array).run()\n  File ""qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm"", line 91, in __init__\nAttributeError: 'NoneType' object has no attribute 'set_estimator'\n",1,0.05111408233642578
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,1,71,CRP,survived,,,2,0.10506916046142578
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,2,71,CRP,survived,,,2,0.12107300758361816
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,3,72,CRP,survived,,,2,0.14789128303527832
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,4,72,CRP,survived,,,2,0.08817291259765625
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,5,73,CRP,survived,,,2,0.11124730110168457
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,6,73,CRP,survived,,,2,0.1956472396850586
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,7,75,CRP,survived,,,2,0.08675789833068848
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,8,75,CRP,survived,,,2,0.08410954475402832
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,9,77,CRP,survived,,,2,0.13322949409484863
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,10,80,CRP,survived,,,2,0.11858582496643066
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,11,80,CRP,survived,,,2,0.13332772254943848
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,12,84,CRP,survived,,,2,0.10429859161376953
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,13,84,CRP,survived,,,2,0.20417523384094238
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,14,184,CRP,survived,,,2,0.15097475051879883
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,15,184,CRP,survived,,,2,0.09165573120117188
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,16,184,CRP,survived,,,2,0.15410852432250977
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,17,184,CRP,survived,,,2,0.09369039535522461
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,18,184,CRP,survived,,,2,0.1313471794128418
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07901382446289062,0.013919353485107422,0.07689785957336426,2.415980577468872,3.581829309463501,6.088627099990845,10.048612833023071,19,184,CRP,survived,,,2,0.11270308494567871
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.05103111267089844,0.010392904281616211,0.008617162704467773,0.2667348384857178,0.6582157611846924,0.9439606666564941,3.308234453201294,1,137,DDL,survived,,,2,0.07848930358886719
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.05103111267089844,0.010392904281616211,0.008617162704467773,0.2667348384857178,0.6582157611846924,0.9439606666564941,3.308234453201294,2,142,DDL,survived,,,2,0.08350563049316406
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.05103111267089844,0.010392904281616211,0.008617162704467773,0.2667348384857178,0.6582157611846924,0.9439606666564941,3.308234453201294,3,147,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.05103111267089844,0.010392904281616211,0.008617162704467773,0.2667348384857178,0.6582157611846924,0.9439606666564941,3.308234453201294,4,152,DDL,survived,,,2,0.10084414482116699
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.044054269790649414,0.010308027267456055,NA,NA,NA,0.05406665802001953,2.3661346435546875,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.04601931571960449,0.009790658950805664,NA,NA,NA,0.052413225173950195,2.34686279296875,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.05794191360473633,0.010430097579956055,NA,NA,NA,0.05874991416931152,3.2532074451446533,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07497215270996094,0.01566624641418457,0.0050694942474365234,10.136924743652344,0.45172572135925293,10.609386205673218,13.054737567901611,1,49,IOD,timeout,,,,5.019379138946533
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07497215270996094,0.01566624641418457,0.0050694942474365234,10.136924743652344,0.45172572135925293,10.609386205673218,13.054737567901611,2,134,IOD,timeout,,,,5.022355794906616
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07497215270996094,0.01566624641418457,0.0050694942474365234,10.136924743652344,0.45172572135925293,10.609386205673218,13.054737567901611,3,179,IOD,survived,,,2,0.09186983108520508
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.037059783935546875,0.009141206741333008,0.006266355514526367,0.18603897094726562,0.3658483028411865,0.5672948360443115,2.81571102142334,1,49,IOP,survived,,,2,0.09619450569152832
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.037059783935546875,0.009141206741333008,0.006266355514526367,0.18603897094726562,0.3658483028411865,0.5672948360443115,2.81571102142334,2,179,IOP,survived,,,2,0.08663463592529297
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.11712145805358887,0.020101070404052734,NA,NA,NA,0.07344985008239746,2.425354242324829,NA,NA,LCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.04498291015625,0.0106658935546875,NA,NA,NA,0.05893826484680176,2.904388427734375,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.07494497299194336,0.01428842544555664,NA,NA,NA,0.06028461456298828,2.8111672401428223,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.05194687843322754,0.011861085891723633,0.007321596145629883,0.35883307456970215,0.7391781806945801,1.1171939373016357,4.52094578742981,1,77,ROR,survived,,,2,0.24605154991149902
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.05194687843322754,0.011861085891723633,0.007321596145629883,0.35883307456970215,0.7391781806945801,1.1171939373016357,4.52094578742981,2,77,ROR,killed,test_binary (test.aqua.test_sklearn_svm.TestSklearnSVM),"Traceback (most recent call last):\n  File ""./test/aqua/test_sklearn_svm.py"", line 100, in test_binary\n    result = SklearnSVM(training_input, test_input, total_array).run()\n  File ""qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm"", line 80, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Dataset has more than two classes. A multiclass extension must be provided.'\n",1,0.10858368873596191
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.03888583183288574,0.009423017501831055,0.0037114620208740234,0.20761418342590332,0.3271198272705078,0.5478684902191162,2.7401394844055176,1,49,SCD,survived,,,2,0.10915470123291016
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.03888583183288574,0.009423017501831055,0.0037114620208740234,0.20761418342590332,0.3271198272705078,0.5478684902191162,2.7401394844055176,2,179,SCD,survived,,,2,0.09616971015930176
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.06350111961364746,0.01784968376159668,0.0022706985473632812,0.027304649353027344,0.237701416015625,0.2851264476776123,3.1323819160461426,1,134,SCI,killed,test_binary (test.aqua.test_sklearn_svm.TestSklearnSVM),"Traceback (most recent call last):\n  File ""./test/aqua/test_sklearn_svm.py"", line 100, in test_binary\n    result = SklearnSVM(training_input, test_input, total_array).run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm"", line 135, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 47, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,0.026269197463989258
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.04697871208190918,0.01076197624206543,NA,NA,NA,0.0546565055847168,3.2452969551086426,NA,NA,SIR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.04973721504211426,0.015545129776000977,NA,NA,NA,5.452291488647461,8.690888166427612,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.054685354232788086,0.012933969497680664,NA,NA,NA,16.994471549987793,20.286839723587036,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.04253268241882324,0.00980067253112793,NA,NA,NA,12.46367621421814,15.289711952209473,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.043416500091552734,0.010146617889404297,NA,NA,NA,0.05332159996032715,3.0781302452087402,NA,NA,QMD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.sklearn_svm.sklearn_svm,test.aqua.test_sklearn_svm,3,0.03796267509460449,0.008834600448608398,NA,NA,NA,6.21577787399292,9.538810729980469,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1797.506266117096,0.10345005989074707,0.10329914093017578,12308.856631040573,19.942918300628662,12329.006298542023,14129.143121957779,1,67,AOD,survived,,,13,1956.844167470932
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1797.506266117096,0.10345005989074707,0.10329914093017578,12308.856631040573,19.942918300628662,12329.006298542023,14129.143121957779,2,289,AOD,survived,,,13,1704.404639005661
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1797.506266117096,0.10345005989074707,0.10329914093017578,12308.856631040573,19.942918300628662,12329.006298542023,14129.143121957779,3,311,AOD,killed,test_minibatching_gradient_based (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 176, in test_minibatching_gradient_based\n    self.assertAlmostEqual(result['testing_accuracy'], 0.75, places=3)\nAssertionError: 1.0 != 0.75 within 3 places (0.25 difference)\n",5,217.54341626167297
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1797.506266117096,0.10345005989074707,0.10329914093017578,12308.856631040573,19.942918300628662,12329.006298542023,14129.143121957779,4,418,AOD,survived,,,13,1458.8965635299683
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1797.506266117096,0.10345005989074707,0.10329914093017578,12308.856631040573,19.942918300628662,12329.006298542023,14129.143121957779,5,459,AOD,survived,,,13,1472.98868227005
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1797.506266117096,0.10345005989074707,0.10329914093017578,12308.856631040573,19.942918300628662,12329.006298542023,14129.143121957779,6,681,AOD,survived,,,13,1472.567149400711
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1797.506266117096,0.10345005989074707,0.10329914093017578,12308.856631040573,19.942918300628662,12329.006298542023,14129.143121957779,7,681,AOD,survived,,,13,1512.5550389289856
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1797.506266117096,0.10345005989074707,0.10329914093017578,12308.856631040573,19.942918300628662,12329.006298542023,14129.143121957779,8,681,AOD,survived,,,13,1234.9220659732819
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1797.506266117096,0.10345005989074707,0.10329914093017578,12308.856631040573,19.942918300628662,12329.006298542023,14129.143121957779,9,709,AOD,survived,,,0,16.046815633773804
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1797.506266117096,0.10345005989074707,0.10329914093017578,12308.856631040573,19.942918300628662,12329.006298542023,14129.143121957779,10,730,AOD,survived,,,13,1262.068055152893
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,1,67,AOR,survived,,,13,1952.0313682556152
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,2,217,AOR,survived,,,13,1657.379348039627
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,3,217,AOR,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 218, in _get_prediction\n  File ""<__array_function__ internals>"", line 6, in split\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/lib/shape_base.py"", line 873, in split\n    'array split does not result in an equal division') from None\nValueError: array split does not result in an equal division\n",1,0.08457136154174805
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,4,260,AOR,killed,test_raw_feature_vector_on_wine_1_circuit (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqc.py"", line 324, in test_raw_feature_vector_on_wine\n    self.assertGreater(result['testing_accuracy'], 0.7)\nAssertionError: 0.25 not greater than 0.7\n",8,601.061897277832
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,5,260,AOR,killed,test_minibatching_gradient_based (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 176, in test_minibatching_gradient_based\n    self.assertAlmostEqual(result['testing_accuracy'], 0.75, places=3)\nAssertionError: 0.5 != 0.75 within 3 places (0.25 difference)\n",5,62.39807200431824
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,6,260,AOR,killed,test_minibatching_gradient_based (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 176, in test_minibatching_gradient_based\n    self.assertAlmostEqual(result['testing_accuracy'], 0.75, places=3)\nAssertionError: 0.5 != 0.75 within 3 places (0.25 difference)\n",5,310.72673630714417
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,7,268,AOR,timeout,,,,9491.137434959412
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,8,268,AOR,timeout,,,,9491.110218524933
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,9,289,AOR,survived,,,13,1790.7020053863525
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,10,311,AOR,killed,test_minibatching_gradient_based (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 176, in test_minibatching_gradient_based\n    self.assertAlmostEqual(result['testing_accuracy'], 0.75, places=3)\nAssertionError: 1.0 != 0.75 within 3 places (0.25 difference)\n",5,264.70302176475525
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,11,378,AOR,survived,,,13,1239.9949395656586
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,12,378,AOR,survived,,,13,1471.3807632923126
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,13,378,AOR,survived,,,13,1049.8226382732391
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,14,394,AOR,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 188, in _optimization\n    cost_minus = obj_fun(theta_minus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\nIndexError: index 1 is out of bounds for axis 0 with size 1\n",1,1.736314296722412
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,15,406,AOR,timeout,,,,9491.178713560104
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,16,406,AOR,survived,,,13,1085.1035816669464
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,17,406,AOR,survived,,,13,1070.8343706130981
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,18,406,AOR,survived,,,13,1039.5674977302551
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,19,406,AOR,timeout,,,,9491.18330693245
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,20,406,AOR,survived,,,13,1023.08846616745
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,21,406,AOR,survived,,,13,995.9168734550476
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,22,418,AOR,survived,,,13,961.1462607383728
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,23,450,AOR,survived,,,13,955.4428851604462
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,24,450,AOR,survived,,,13,943.1700942516327
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,25,451,AOR,survived,,,13,969.314624786377
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,26,451,AOR,survived,,,13,884.5843250751495
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,27,451,AOR,survived,,,13,850.2264590263367
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,28,452,AOR,survived,,,0,13.24362063407898
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,29,452,AOR,survived,,,0,12.513797521591187
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,30,453,AOR,survived,,,13,911.3126490116119
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,31,453,AOR,survived,,,13,944.650084733963
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,32,453,AOR,survived,,,13,932.6992599964142
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,33,456,AOR,survived,,,13,935.5866365432739
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,34,456,AOR,survived,,,13,946.6870505809784
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,35,459,AOR,survived,,,13,938.9430632591248
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,36,657,AOR,survived,,,0,12.702399015426636
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,37,659,AOR,survived,,,13,942.8631801605225
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,38,659,AOR,survived,,,13,953.2530155181885
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,39,662,AOR,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 276, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 751, in return_probabilities\nIndexError: index 4 is out of bounds for axis 0 with size 2\n",1,0.8477535247802734
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,40,666,AOR,survived,,,13,968.3945510387421
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,41,666,AOR,killed,test_raw_feature_vector_on_wine_1_circuit (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqc.py"", line 324, in test_raw_feature_vector_on_wine\n    self.assertGreater(result['testing_accuracy'], 0.7)\nAssertionError: 0.25 not greater than 0.7\n",8,544.6903297901154
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,42,667,AOR,killed,test_raw_feature_vector_on_wine_1_circuit (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqc.py"", line 324, in test_raw_feature_vector_on_wine\n    self.assertGreater(result['testing_accuracy'], 0.7)\nAssertionError: 0.25 not greater than 0.7\n",8,526.0463013648987
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,43,669,AOR,survived,,,13,977.6506605148315
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,44,671,AOR,survived,,,13,979.8758707046509
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,45,672,AOR,killed,test_raw_feature_vector_on_wine_1_circuit (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqc.py"", line 319, in test_raw_feature_vector_on_wine\n    result = vqc.run(self.statevector_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/cobyla.py"", line 72, in optimize\n    method=""COBYLA"", options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 625, in minimize\n    return _minimize_cobyla(fun, x0, args, constraints, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 34, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 262, in _minimize_cobyla\n    dinfo=info)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 252, in calcfc\n    f = fun(x, *args)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 276, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 751, in return_probabilities\nIndexError: index 3 is out of bounds for axis 0 with size 3\n",8,346.420658826828
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,46,673,AOR,killed,test_raw_feature_vector_on_wine_1_circuit (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqc.py"", line 319, in test_raw_feature_vector_on_wine\n    result = vqc.run(self.statevector_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/cobyla.py"", line 72, in optimize\n    method=""COBYLA"", options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 625, in minimize\n    return _minimize_cobyla(fun, x0, args, constraints, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 34, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 262, in _minimize_cobyla\n    dinfo=info)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 252, in calcfc\n    f = fun(x, *args)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 276, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 751, in return_probabilities\nIndexError: index 3 is out of bounds for axis 0 with size 3\n",8,359.4551706314087
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,47,675,AOR,survived,,,13,931.5060591697693
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,48,678,AOR,survived,,,13,922.7985646724701
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,49,679,AOR,survived,,,13,926.0905230045319
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,50,679,AOR,survived,,,13,952.6536133289337
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,51,681,AOR,survived,,,13,948.2822303771973
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,52,681,AOR,survived,,,13,938.597930431366
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,53,681,AOR,survived,,,13,938.23810338974
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,54,681,AOR,survived,,,13,960.7924838066101
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,55,682,AOR,survived,,,13,999.6087656021118
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,56,682,AOR,survived,,,13,987.9536440372467
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,57,683,AOR,survived,,,13,995.5460691452026
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,58,706,AOR,survived,,,13,977.3883633613586
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,59,708,AOR,survived,,,0,11.547488689422607
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,60,708,AOR,survived,,,0,12.658978462219238
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,61,708,AOR,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 243, in _get_prediction\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/utils/deprecation.py"", line 56, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2055, in assign_parameters\n    bound_circuit._assign_parameter(parameter, value)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2122, in _assign_parameter\n    instr.params[param_index] = instr.validate_parameter(new_param)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 245, in validate_parameter\n    self.name))\nqiskit.circuit.exceptions.CircuitError: 'Bound parameter expression is complex in gate u3'\n",1,1.413405418395996
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,62,709,AOR,survived,,,0,12.362395524978638
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,63,709,AOR,survived,,,0,13.132572889328003
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,64,709,AOR,survived,,,0,12.3319673538208
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,65,730,AOR,survived,,,13,926.6220927238464
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,66,730,AOR,survived,,,13,856.6646053791046
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,67,730,AOR,survived,,,13,821.1245305538177
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,68,730,AOR,survived,,,13,889.7760708332062
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,69,751,AOR,survived,,,0,11.08075761795044
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1898.2119181156158,0.5102567672729492,0.6031270027160645,86452.25949835777,109.16115593910217,86562.53403806686,88464.04154372215,70,751,AOR,survived,,,0,11.101640939712524
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1919.3341324329376,0.38637304306030273,0.1295335292816162,9258.405369281769,22.776962995529175,9281.69823884964,11205.255514860153,1,196,ASR,survived,,,13,1650.3511743545532
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1919.3341324329376,0.38637304306030273,0.1295335292816162,9258.405369281769,22.776962995529175,9281.69823884964,11205.255514860153,2,274,ASR,survived,,,0,21.771446228027344
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1919.3341324329376,0.38637304306030273,0.1295335292816162,9258.405369281769,22.776962995529175,9281.69823884964,11205.255514860153,3,376,ASR,killed,test_minibatching_gradient_based (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 176, in test_minibatching_gradient_based\n    self.assertAlmostEqual(result['testing_accuracy'], 0.75, places=3)\nAssertionError: 0.5 != 0.75 within 3 places (0.25 difference)\n",5,262.438321352005
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1919.3341324329376,0.38637304306030273,0.1295335292816162,9258.405369281769,22.776962995529175,9281.69823884964,11205.255514860153,4,379,ASR,survived,,,13,1303.0394423007965
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1919.3341324329376,0.38637304306030273,0.1295335292816162,9258.405369281769,22.776962995529175,9281.69823884964,11205.255514860153,5,381,ASR,survived,,,13,1479.1008024215698
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1919.3341324329376,0.38637304306030273,0.1295335292816162,9258.405369281769,22.776962995529175,9281.69823884964,11205.255514860153,6,411,ASR,survived,,,13,1424.117248058319
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1919.3341324329376,0.38637304306030273,0.1295335292816162,9258.405369281769,22.776962995529175,9281.69823884964,11205.255514860153,7,413,ASR,survived,,,13,1501.488699913025
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1919.3341324329376,0.38637304306030273,0.1295335292816162,9258.405369281769,22.776962995529175,9281.69823884964,11205.255514860153,8,446,ASR,survived,,,13,1555.378874540329
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1919.3341324329376,0.38637304306030273,0.1295335292816162,9258.405369281769,22.776962995529175,9281.69823884964,11205.255514860153,9,447,ASR,survived,,,0,20.73150086402893
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1919.3341324329376,0.38637304306030273,0.1295335292816162,9258.405369281769,22.776962995529175,9281.69823884964,11205.255514860153,10,448,ASR,survived,,,0,19.73335313796997
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1919.3341324329376,0.38637304306030273,0.1295335292816162,9258.405369281769,22.776962995529175,9281.69823884964,11205.255514860153,11,751,ASR,survived,,,0,20.231894731521606
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1911.5465636253357,0.09423398971557617,NA,NA,NA,0.7203733921051025,1916.1717238426208,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1802.5940897464752,0.09342217445373535,0.14230751991271973,19374.901490211487,26.22622275352478,19401.363442659378,21207.94760274887,1,146,COD,survived,,,13,1689.2253246307373
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1802.5940897464752,0.09342217445373535,0.14230751991271973,19374.901490211487,26.22622275352478,19401.363442659378,21207.94760274887,2,233,COD,survived,,,0,22.539149045944214
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1802.5940897464752,0.09342217445373535,0.14230751991271973,19374.901490211487,26.22622275352478,19401.363442659378,21207.94760274887,3,246,COD,survived,,,13,1518.3786718845367
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1802.5940897464752,0.09342217445373535,0.14230751991271973,19374.901490211487,26.22622275352478,19401.363442659378,21207.94760274887,4,309,COD,killed,test_minibatching_gradient_free (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 157, in test_minibatching_gradient_free\n    self.assertAlmostEqual(result['testing_accuracy'], 0.3333333333333333)\nAssertionError: 0.8333333333333334 != 0.3333333333333333 within 7 places (0.5 difference)\n",6,268.067334651947
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1802.5940897464752,0.09342217445373535,0.14230751991271973,19374.901490211487,26.22622275352478,19401.363442659378,21207.94760274887,5,397,COD,timeout,,,,9013.07996058464
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1802.5940897464752,0.09342217445373535,0.14230751991271973,19374.901490211487,26.22622275352478,19401.363442659378,21207.94760274887,6,412,COD,killed,test_minibatching_gradient_free (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 157, in test_minibatching_gradient_free\n    self.assertAlmostEqual(result['testing_accuracy'], 0.3333333333333333)\nAssertionError: 0.8333333333333334 != 0.3333333333333333 within 7 places (0.5 difference)\n",6,291.0118713378906
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1802.5940897464752,0.09342217445373535,0.14230751991271973,19374.901490211487,26.22622275352478,19401.363442659378,21207.94760274887,7,487,COD,killed,test_save_and_load_model (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 211, in test_save_and_load_model\n    self.qasm_simulator)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 491, in predict\n  File ""<__array_function__ internals>"", line 6, in concatenate\nValueError: zero-dimensional arrays cannot be concatenated\n",11,1109.8027918338776
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1802.5940897464752,0.09342217445373535,0.14230751991271973,19374.901490211487,26.22622275352478,19401.363442659378,21207.94760274887,8,487,COD,killed,test_save_and_load_model (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 211, in test_save_and_load_model\n    self.qasm_simulator)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 491, in predict\n  File ""<__array_function__ internals>"", line 6, in concatenate\nValueError: zero-dimensional arrays cannot be concatenated\n",11,1253.1195828914642
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1802.5940897464752,0.09342217445373535,0.14230751991271973,19374.901490211487,26.22622275352478,19401.363442659378,21207.94760274887,9,512,COD,survived,,,13,1449.770668745041
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1802.5940897464752,0.09342217445373535,0.14230751991271973,19374.901490211487,26.22622275352478,19401.363442659378,21207.94760274887,10,519,COD,survived,,,13,1230.2764964103699
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1802.5940897464752,0.09342217445373535,0.14230751991271973,19374.901490211487,26.22622275352478,19401.363442659378,21207.94760274887,11,532,COD,survived,,,13,1502.1264803409576
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1802.5940897464752,0.09342217445373535,0.14230751991271973,19374.901490211487,26.22622275352478,19401.363442659378,21207.94760274887,12,589,COD,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 501, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 437, in test\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 590, in optimal_params\nqiskit.aqua.aqua_error.AquaError: 'Cannot find optimal params before running the algorithm.'\n",1,27.477577447891235
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,1,101,COI,survived,,,13,1680.4259791374207
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,2,125,COI,survived,,,0,19.188483953475952
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,3,130,COI,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 103, in test_basic_aer_qasm\n    vqc = VQC(optimizer, data_preparation, wavefunction, self.training_data, self.testing_data)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 131, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Missing feature map.'\n",1,0.05898332595825195
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,4,132,COI,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 103, in test_basic_aer_qasm\n    vqc = VQC(optimizer, data_preparation, wavefunction, self.training_data, self.testing_data)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 133, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Missing training dataset.'\n",1,0.10705876350402832
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,5,140,COI,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 501, in _run\nKeyError: 0\n",1,17.99240732192993
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,6,146,COI,timeout,,,,8000.140266418457
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,7,148,COI,survived,,,13,1242.6102983951569
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,8,176,COI,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 237, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 233, in _build_parameterized_circuits\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 177, in construct_circuit\nqiskit.aqua.aqua_error.AquaError: 'Variational form and feature map are not allowed to share parameters with the same name!'\n",1,0.07532572746276855
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,9,176,COI,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 237, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 233, in _build_parameterized_circuits\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 177, in construct_circuit\nqiskit.aqua.aqua_error.AquaError: 'Variational form and feature map are not allowed to share parameters with the same name!'\n",1,0.12391114234924316
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,10,184,COI,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 237, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 233, in _build_parameterized_circuits\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 189, in construct_circuit\nAttributeError: 'ZZFeatureMap' object has no attribute 'construct_circuit'\n",1,0.11449861526489258
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,11,191,COI,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 237, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 233, in _build_parameterized_circuits\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 196, in construct_circuit\nAttributeError: 'TwoLocal' object has no attribute 'construct_circuit'\n",1,0.08810138702392578
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,12,198,COI,survived,,,0,16.5052809715271
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,13,227,COI,killed,test_raw_feature_vector_on_wine_1_circuit (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqc.py"", line 319, in test_raw_feature_vector_on_wine\n    result = vqc.run(self.statevector_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/cobyla.py"", line 72, in optimize\n    method=""COBYLA"", options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 625, in minimize\n    return _minimize_cobyla(fun, x0, args, constraints, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 34, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 262, in _minimize_cobyla\n    dinfo=info)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 252, in calcfc\n    f = fun(x, *args)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 237, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 235, in _build_parameterized_circuits\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 264, in transpile\n    **self._compile_config)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 245, in transpile\n    circuits = parallel_map(_transpile_circuit, list(zip(circuits, transpile_args)))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 128, in parallel_map\n    return [task(values[0], *task_args, **task_kwargs)]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 329, in _transpile_circuit\n    output_name=transpile_config['output_name'])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 216, in run\n    return self._run_single_circuit(circuits, output_name, callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 277, in _run_single_circuit\n    result = running_passmanager.run(circuit, output_name=output_name, callback=callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 122, in run\n    dag = self._do_pass(pass_, dag, passset.options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 153, in _do_pass\n    dag = self._run_this_pass(pass_, dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 165, in _run_this_pass\n    new_dag = pass_.run(dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passes/basis/unroll_custom_definitions.py"", line 93, in run\n    decomposition)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passes/basis/unroll_custom_definitions.py"", line 89, in run\n    (str(self._basis_gates), node.op.name))\nqiskit.exceptions.QiskitError: ""Cannot unroll the circuit to the given basis, ['u1', 'u2', 'u3', 'rz', 'sx', 'x', 'cx', 'id', 'unitary']. Instruction Raw not found in equivalence library and no rule found to expand.""\n",8,1092.546396970749
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,14,230,COI,killed,test_raw_feature_vector_on_wine_1_circuit (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqc.py"", line 319, in test_raw_feature_vector_on_wine\n    result = vqc.run(self.statevector_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/cobyla.py"", line 72, in optimize\n    method=""COBYLA"", options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 625, in minimize\n    return _minimize_cobyla(fun, x0, args, constraints, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 34, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 262, in _minimize_cobyla\n    dinfo=info)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 252, in calcfc\n    f = fun(x, *args)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 237, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 235, in _build_parameterized_circuits\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 264, in transpile\n    **self._compile_config)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 245, in transpile\n    circuits = parallel_map(_transpile_circuit, list(zip(circuits, transpile_args)))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 128, in parallel_map\n    return [task(values[0], *task_args, **task_kwargs)]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 329, in _transpile_circuit\n    output_name=transpile_config['output_name'])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 216, in run\n    return self._run_single_circuit(circuits, output_name, callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 277, in _run_single_circuit\n    result = running_passmanager.run(circuit, output_name=output_name, callback=callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 122, in run\n    dag = self._do_pass(pass_, dag, passset.options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 153, in _do_pass\n    dag = self._run_this_pass(pass_, dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 165, in _run_this_pass\n    new_dag = pass_.run(dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passes/basis/unroll_custom_definitions.py"", line 93, in run\n    decomposition)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passes/basis/unroll_custom_definitions.py"", line 89, in run\n    (str(self._basis_gates), node.op.name))\nqiskit.exceptions.QiskitError: ""Cannot unroll the circuit to the given basis, ['u1', 'u2', 'u3', 'rz', 'sx', 'x', 'cx', 'id', 'unitary']. Instruction Raw not found in equivalence library and no rule found to expand.""\n",8,1162.67658162117
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,15,240,COI,timeout,,,,8000.160710811615
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,16,258,COI,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 305, in get_statevector\n    return postprocess.format_statevector(self.data(experiment)['statevector'],\nKeyError: 'statevector'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 259, in _get_prediction\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 308, in get_statevector\n    raise QiskitError(f'No statevector for experiment ""{repr(experiment)}""') from ex\nqiskit.exceptions.QiskitError: 'No statevector for experiment ""0""'\n",1,1.9756629467010498
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,17,280,COI,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 501, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 446, in test\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 700, in cost_estimate\nAttributeError: 'list' object has no attribute 'shape'\n",1,21.533644914627075
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,18,282,COI,survived,,,10,1249.3842296600342
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,19,293,COI,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/lib/shape_base.py"", line 772, in array_split\n    Nsections = len(indices_or_sections) + 1\nTypeError: object of type 'int' has no len()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 323, in train\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 298, in batch_data\n  File ""<__array_function__ internals>"", line 6, in array_split\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/lib/shape_base.py"", line 778, in array_split\n    raise ValueError('number sections must be larger than 0.')\nValueError: number sections must be larger than 0.\n",1,0.15926170349121094
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,20,295,COI,timeout,,,,8000.159379720688
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,21,326,COI,survived,,,0,13.486565828323364
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,22,332,COI,survived,,,13,943.2881414890289
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,23,348,COI,survived,,,13,1093.4484462738037
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,24,380,COI,survived,,,13,792.5292544364929
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,25,397,COI,timeout,,,,8000.150443553925
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,26,403,COI,timeout,,,,8000.1491141319275
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,27,412,COI,killed,test_minibatching_gradient_free (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 157, in test_minibatching_gradient_free\n    self.assertAlmostEqual(result['testing_accuracy'], 0.3333333333333333)\nAssertionError: 0.8333333333333334 != 0.3333333333333333 within 7 places (0.5 difference)\n",6,179.46923518180847
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,28,436,COI,timeout,,,,8000.154733181
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,29,476,COI,timeout,,,,8000.137244462967
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,30,484,COI,survived,,,13,990.5108978748322
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,31,487,COI,killed,test_save_and_load_model (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 211, in test_save_and_load_model\n    self.qasm_simulator)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 491, in predict\n  File ""<__array_function__ internals>"", line 6, in concatenate\nValueError: zero-dimensional arrays cannot be concatenated\n",11,713.0862638950348
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,32,500,COI,survived,,,0,11.747764587402344
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,33,503,COI,timeout,,,,8000.1419270038605
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,34,512,COI,survived,,,13,947.9179787635803
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,35,519,COI,survived,,,13,945.1225638389587
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,36,522,COI,survived,,,13,976.2151117324829
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,37,532,COI,survived,,,13,934.1919965744019
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,38,536,COI,survived,,,13,991.3279476165771
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,39,561,COI,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 103, in test_basic_aer_qasm\n    vqc = VQC(optimizer, data_preparation, wavefunction, self.training_data, self.testing_data)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 157, in __init__\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 580, in feature_map\nValueError: Unsupported type <class 'qiskit.circuit.library.data_preparation.zz_feature_map.ZZFeatureMap'> of feature_map.\n",1,0.04847431182861328
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,40,569,COI,killed,test_raw_feature_vector_on_wine_2_component (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqc.py"", line 318, in test_raw_feature_vector_on_wine\n    test_input)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 157, in __init__\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 580, in feature_map\nValueError: Unsupported type <class 'qiskit.aqua.components.feature_maps.raw_feature_vector.RawFeatureVector'> of feature_map.\n",9,515.5779860019684
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,41,582,COI,killed,test_feature_map_without_parameters_warns (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 275, in test_feature_map_without_parameters_warns\n    _ = VQC(optimizer, feature_map, var_form, self.training_data, self.testing_data)\nAssertionError: UserWarning not triggered\n",3,14.204105615615845
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,42,589,COI,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 501, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 437, in test\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 590, in optimal_params\nqiskit.aqua.aqua_error.AquaError: 'Cannot find optimal params before running the algorithm.'\n",1,12.885823965072632
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,43,656,COI,survived,,,0,13.918063879013062
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,44,657,COI,survived,,,0,12.83888840675354
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1600.007340669632,0.07937407493591309,0.43752408027648926,81563.39267730713,77.186452627182,81641.09602808952,83244.59694218636,45,665,COI,survived,,,13,954.7296199798584
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,1,66,CRP,survived,,,13,1526.8423478603363
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,2,67,CRP,survived,,,13,1456.7012226581573
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,3,96,CRP,survived,,,13,1548.5284678936005
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,4,96,CRP,survived,,,13,1520.3568444252014
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,5,97,CRP,survived,,,13,1425.9465129375458
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,6,97,CRP,survived,,,13,1227.5103552341461
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,7,98,CRP,survived,,,13,1356.238923072815
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,8,98,CRP,survived,,,13,1477.7341368198395
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,9,107,CRP,survived,,,13,1586.752262353897
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,10,107,CRP,survived,,,13,1460.3660995960236
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,11,108,CRP,survived,,,13,1210.8229026794434
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,12,131,CRP,survived,,,13,1438.9853217601776
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,13,131,CRP,survived,,,13,1744.9697329998016
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,14,133,CRP,survived,,,13,1957.1378865242004
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,15,133,CRP,survived,,,13,1883.4618055820465
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,16,148,CRP,survived,,,13,1530.720567703247
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,17,153,CRP,survived,,,13,1576.438093662262
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,18,177,CRP,survived,,,13,1656.277821302414
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,19,177,CRP,survived,,,13,1493.7021088600159
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,20,180,CRP,survived,,,13,1086.6453068256378
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,21,180,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 237, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 233, in _build_parameterized_circuits\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 180, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",1,0.0948176383972168
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,22,181,CRP,survived,,,13,1086.3713846206665
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,23,181,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 237, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 233, in _build_parameterized_circuits\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 181, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",1,0.0826423168182373
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,24,235,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 237, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 235, in _build_parameterized_circuits\nIndexError: list index out of range\n",1,0.1352388858795166
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,25,252,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 360, in _get_experiment\n    exp = self.results[key]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 271, in _get_prediction\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 263, in get_counts\n    exp = self._get_experiment(key)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 362, in _get_experiment\n    raise QiskitError(f'Result for experiment ""{key}"" could not be found.') from ex\nqiskit.exceptions.QiskitError: 'Result for experiment ""4"" could not be found.'\n",1,0.791039228439331
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,26,268,CRP,killed,test_minibatching_gradient_based (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 173, in test_minibatching_gradient_based\n    result = vqc.run(self.statevector_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/l_bfgs_b.py"", line 104, in optimize\n    approx_grad=approx_grad, **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/lbfgsb.py"", line 198, in fmin_l_bfgs_b\n    **opts)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/lbfgsb.py"", line 308, in _minimize_lbfgsb\n    finite_diff_rel_step=finite_diff_rel_step)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 268, in _get_prediction\nValueError: Invalid format specifier\n",5,35.50570034980774
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,27,268,CRP,killed,test_minibatching_gradient_based (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 173, in test_minibatching_gradient_based\n    result = vqc.run(self.statevector_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/l_bfgs_b.py"", line 104, in optimize\n    approx_grad=approx_grad, **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/lbfgsb.py"", line 198, in fmin_l_bfgs_b\n    **opts)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/lbfgsb.py"", line 308, in _minimize_lbfgsb\n    finite_diff_rel_step=finite_diff_rel_step)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 276, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 750, in return_probabilities\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 654, in assign_label\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 654, in <listcomp>\nValueError: invalid literal for int() with base 10: ' '\n",5,36.414092779159546
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,28,268,CRP,killed,test_minibatching_gradient_based (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 173, in test_minibatching_gradient_based\n    result = vqc.run(self.statevector_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/l_bfgs_b.py"", line 104, in optimize\n    approx_grad=approx_grad, **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/lbfgsb.py"", line 198, in fmin_l_bfgs_b\n    **opts)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/lbfgsb.py"", line 308, in _minimize_lbfgsb\n    finite_diff_rel_step=finite_diff_rel_step)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 268, in _get_prediction\nValueError: Invalid format specifier\n",5,35.75092673301697
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,29,268,CRP,killed,test_minibatching_gradient_based (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 176, in test_minibatching_gradient_based\n    self.assertAlmostEqual(result['testing_accuracy'], 0.75, places=3)\nAssertionError: 0.0 != 0.75 within 3 places (0.75 difference)\n",5,407.2277331352234
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,30,274,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 360, in _get_experiment\n    exp = self.results[key]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 271, in _get_prediction\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 263, in get_counts\n    exp = self._get_experiment(key)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 362, in _get_experiment\n    raise QiskitError(f'Result for experiment ""{key}"" could not be found.') from ex\nqiskit.exceptions.QiskitError: 'Result for experiment ""4"" could not be found.'\n",1,0.8628954887390137
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,31,278,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 278, in _get_prediction\n  File ""<__array_function__ internals>"", line 6, in argmax\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/core/fromnumeric.py"", line 1193, in argmax\n    return _wrapfunc(a, 'argmax', axis=axis, out=out)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/core/fromnumeric.py"", line 58, in _wrapfunc\n    return bound(*args, **kwds)\nnumpy.AxisError: axis 2 is out of bounds for array of dimension 2\n",1,0.7486143112182617
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,32,280,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 501, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 446, in test\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 700, in cost_estimate\nAttributeError: 'list' object has no attribute 'shape'\n",1,13.546547174453735
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,33,281,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 281, in _get_prediction\nIndexError: list index out of range\n",1,0.9122180938720703
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,34,282,CRP,survived,,,10,774.1013267040253
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,35,283,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 283, in _get_prediction\nIndexError: list index out of range\n",1,0.8346896171569824
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,36,289,CRP,survived,,,13,1014.8293209075928
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,37,293,CRP,survived,,,13,945.1277053356171
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,38,311,CRP,survived,,,13,951.3416423797607
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,39,322,CRP,survived,,,13,1041.6723535060883
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,40,324,CRP,survived,,,13,1005.7151849269867
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,41,329,CRP,survived,,,13,1060.097835302353
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,42,332,CRP,survived,,,13,1030.68861246109
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,43,343,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 348, in train\nKeyError: 'num_optimizer_evals'\n",1,12.772970914840698
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,44,343,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 348, in train\nKeyError: 'num_optimizer_evals'\n",1,13.090940713882446
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,45,344,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 360, in train\nKeyError: 'min_val'\n",1,13.1736478805542
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,46,344,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 360, in train\nKeyError: 'min_val'\n",1,13.337378978729248
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,47,345,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 353, in train\nKeyError: 'opt_params'\n",1,11.618479013442993
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,48,345,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 353, in train\nKeyError: 'opt_params'\n",1,14.51218318939209
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,49,346,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 351, in train\nKeyError: 'eval_time'\n",1,11.74877643585205
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,50,346,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 351, in train\nKeyError: 'eval_time'\n",1,13.111735582351685
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,51,348,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 348, in train\nKeyError: 'mutpy'\n",1,14.189780950546265
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,52,348,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 348, in train\nKeyError: ''\n",1,13.192394733428955
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,53,349,CRP,killed,test_callback (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 242, in test_callback\n    vqc.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 349, in train\nKeyError: 'mutpy'\n",2,15.566304445266724
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,54,349,CRP,killed,test_callback (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 242, in test_callback\n    vqc.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 349, in train\nKeyError: ''\n",2,15.680902004241943
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,55,350,CRP,killed,test_callback (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 242, in test_callback\n    vqc.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 350, in train\nKeyError: 'mutpy'\n",2,16.809536695480347
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,56,350,CRP,killed,test_callback (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 242, in test_callback\n    vqc.run(self.qasm_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 350, in train\nKeyError: ''\n",2,16.020310878753662
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,57,351,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 351, in train\nKeyError: 'mutpy'\n",1,13.888684511184692
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,58,351,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 351, in train\nKeyError: ''\n",1,13.432602167129517
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,59,352,CRP,survived,,,13,982.1448814868927
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,60,352,CRP,survived,,,13,1004.4490802288055
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,61,353,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 353, in train\nKeyError: 'mutpy'\n",1,11.869540929794312
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,62,353,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 353, in train\nKeyError: ''\n",1,14.28495979309082
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,63,354,CRP,survived,,,13,1022.694727897644
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,64,354,CRP,survived,,,13,1019.3405568599701
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,65,360,CRP,survived,,,0,11.169308423995972
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,66,360,CRP,survived,,,0,11.124577283859253
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,67,360,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 360, in train\nKeyError: 'mutpy'\n",1,12.486029386520386
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,68,360,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 360, in train\nKeyError: ''\n",1,12.850984334945679
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,69,372,CRP,survived,,,13,938.940895318985
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,70,381,CRP,survived,,,13,837.2723546028137
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,71,406,CRP,survived,,,13,949.5946218967438
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,72,411,CRP,survived,,,13,1001.3650352954865
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,73,413,CRP,killed,test_minibatching_gradient_free (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 157, in test_minibatching_gradient_free\n    self.assertAlmostEqual(result['testing_accuracy'], 0.3333333333333333)\nAssertionError: 0.8333333333333334 != 0.3333333333333333 within 7 places (0.5 difference)\n",6,335.19680285453796
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,74,415,CRP,survived,,,13,997.481507062912
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,75,415,CRP,survived,,,13,993.1019303798676
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,76,416,CRP,timeout,,,,8049.37605881691
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,77,416,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 416, in _loss\nIndexError: list index out of range\n",1,0.7773630619049072
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,78,418,CRP,survived,,,13,951.0960178375244
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,79,432,CRP,survived,,,13,934.4662215709686
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,80,435,CRP,survived,,,13,977.9462320804596
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,81,438,CRP,survived,,,13,932.1206731796265
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,82,439,CRP,survived,,,0,11.730723142623901
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,83,440,CRP,survived,,,0,12.433850049972534
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,84,447,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 501, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 447, in test\n  File ""<__array_function__ internals>"", line 6, in argmax\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/core/fromnumeric.py"", line 1193, in argmax\n    return _wrapfunc(a, 'argmax', axis=axis, out=out)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/core/fromnumeric.py"", line 58, in _wrapfunc\n    return bound(*args, **kwds)\nnumpy.AxisError: axis 2 is out of bounds for array of dimension 2\n",1,11.969425439834595
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,85,448,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 501, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 448, in test\nIndexError: tuple index out of range\n",1,12.350098609924316
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,86,450,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 501, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 450, in test\n  File ""<__array_function__ internals>"", line 6, in argmax\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/core/fromnumeric.py"", line 1193, in argmax\n    return _wrapfunc(a, 'argmax', axis=axis, out=out)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/core/fromnumeric.py"", line 58, in _wrapfunc\n    return bound(*args, **kwds)\nnumpy.AxisError: axis 2 is out of bounds for array of dimension 2\n",1,12.610836744308472
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,87,450,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 501, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 450, in test\nIndexError: tuple index out of range\n",1,13.114269256591797
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,88,451,CRP,survived,,,13,956.73464179039
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,89,451,CRP,survived,,,13,923.7708702087402
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,90,451,CRP,survived,,,13,987.6214535236359
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,91,453,CRP,survived,,,13,1029.823511838913
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,92,453,CRP,survived,,,13,990.402437210083
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,93,453,CRP,survived,,,13,954.0857956409454
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,94,454,CRP,survived,,,0,11.750202417373657
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,95,454,CRP,survived,,,0,12.404531478881836
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,96,455,CRP,survived,,,13,940.2169115543365
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,97,455,CRP,survived,,,13,947.202520608902
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,98,456,CRP,survived,,,13,952.1942999362946
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,99,456,CRP,survived,,,13,937.5882308483124
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,100,459,CRP,survived,,,13,941.7330179214478
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,101,474,CRP,survived,,,13,950.8181762695312
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,102,484,CRP,survived,,,13,945.1996991634369
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,103,485,CRP,survived,,,13,953.9150130748749
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,104,485,CRP,survived,,,13,977.1947891712189
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,105,493,CRP,survived,,,13,988.6475307941437
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,106,493,CRP,survived,,,13,1003.5683858394623
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,107,494,CRP,survived,,,13,1003.4455387592316
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,108,494,CRP,survived,,,13,996.2086546421051
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,109,498,CRP,timeout,,,,8049.372294187546
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,110,498,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\nIndexError: list index out of range\n",1,0.10025215148925781
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,111,501,CRP,timeout,,,,8049.374089002609
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,112,501,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 501, in _run\nIndexError: list index out of range\n",1,10.3101224899292
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,113,505,CRP,survived,,,13,856.6724603176117
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,114,505,CRP,survived,,,13,854.0680615901947
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,115,512,CRP,survived,,,13,872.1953592300415
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,116,512,CRP,survived,,,13,833.1092982292175
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,117,513,CRP,survived,,,13,844.1749475002289
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,118,513,CRP,survived,,,13,864.0909025669098
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,119,515,CRP,survived,,,13,864.7292573451996
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,120,515,CRP,survived,,,13,845.470409154892
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,121,519,CRP,survived,,,13,877.9126274585724
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,122,519,CRP,survived,,,13,853.0019435882568
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,123,520,CRP,survived,,,13,833.0681655406952
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,124,520,CRP,survived,,,13,827.2081880569458
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,125,523,CRP,survived,,,13,842.4483325481415
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,126,523,CRP,survived,,,13,849.7401783466339
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,127,525,CRP,survived,,,13,874.9486451148987
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,128,525,CRP,survived,,,13,855.9344201087952
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,129,532,CRP,survived,,,13,869.5094168186188
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,130,532,CRP,survived,,,13,846.5168175697327
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,131,533,CRP,survived,,,13,852.2228960990906
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,132,533,CRP,survived,,,13,846.664309501648
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,133,538,CRP,survived,,,13,872.5411624908447
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,134,538,CRP,survived,,,13,834.9196443557739
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,135,538,CRP,survived,,,13,838.486166715622
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,136,540,CRP,survived,,,13,853.5719759464264
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,137,540,CRP,survived,,,13,867.0974349975586
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,138,541,CRP,survived,,,13,848.6387293338776
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,139,541,CRP,survived,,,13,873.6006765365601
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,140,546,CRP,survived,,,13,841.0536909103394
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,141,546,CRP,survived,,,13,846.5315790176392
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,142,547,CRP,survived,,,13,850.7562711238861
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,143,547,CRP,survived,,,13,836.447164773941
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,144,570,CRP,survived,,,13,849.4013614654541
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,145,570,CRP,survived,,,13,870.257746219635
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,146,574,CRP,survived,,,13,869.3700695037842
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,147,577,CRP,survived,,,13,854.488659620285
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,148,577,CRP,survived,,,13,843.9581136703491
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,149,580,CRP,survived,,,13,867.5308318138123
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,150,580,CRP,survived,,,13,851.6285164356232
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,151,582,CRP,killed,test_feature_map_without_parameters_warns (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 275, in test_feature_map_without_parameters_warns\n    _ = VQC(optimizer, feature_map, var_form, self.training_data, self.testing_data)\nAssertionError: UserWarning not triggered\n",3,15.35131311416626
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,152,583,CRP,survived,,,13,879.446581363678
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,153,583,CRP,survived,,,13,884.2329943180084
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,154,589,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 501, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 437, in test\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 590, in optimal_params\nqiskit.aqua.aqua_error.AquaError: 'Cannot find optimal params before running the algorithm.'\n",1,10.015386819839478
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,155,589,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 501, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 437, in test\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 590, in optimal_params\nqiskit.aqua.aqua_error.AquaError: 'Cannot find optimal params before running the algorithm.'\n",1,10.511369705200195
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,156,590,CRP,survived,,,13,838.1760060787201
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,157,590,CRP,survived,,,13,863.4801759719849
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,158,591,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 501, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 437, in test\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 591, in optimal_params\nKeyError: 'mutpy'\n",1,11.443438053131104
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,159,591,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 501, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 437, in test\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 591, in optimal_params\nKeyError: ''\n",1,9.883298635482788
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,160,616,CRP,killed,test_save_and_load_model (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 203, in test_save_and_load_model\n    self.qasm_simulator)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 437, in test\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 590, in optimal_params\nqiskit.aqua.aqua_error.AquaError: 'Cannot find optimal params before running the algorithm.'\n",11,631.7942185401917
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,161,616,CRP,killed,test_save_and_load_model (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 203, in test_save_and_load_model\n    self.qasm_simulator)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 437, in test\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 590, in optimal_params\nqiskit.aqua.aqua_error.AquaError: 'Cannot find optimal params before running the algorithm.'\n",11,625.0118622779846
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,162,616,CRP,killed,test_save_and_load_model (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 200, in test_save_and_load_model\n    loaded_vqc.load_model(file_path)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 616, in load_model\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/lib/npyio.py"", line 260, in __getitem__\n    raise KeyError(""%s is not a file in the archive"" % key)\nKeyError: 'mutpy is not a file in the archive'\n",11,657.3354051113129
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,163,616,CRP,killed,test_save_and_load_model (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 200, in test_save_and_load_model\n    loaded_vqc.load_model(file_path)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 616, in load_model\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/lib/npyio.py"", line 260, in __getitem__\n    raise KeyError(""%s is not a file in the archive"" % key)\nKeyError: ' is not a file in the archive'\n",11,668.9316082000732
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,164,620,CRP,killed,test_save_and_load_model (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 200, in test_save_and_load_model\n    loaded_vqc.load_model(file_path)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 616, in load_model\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/lib/npyio.py"", line 260, in __getitem__\n    raise KeyError(""%s is not a file in the archive"" % key)\nKeyError: 'opt_params is not a file in the archive'\n",11,644.722464799881
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,165,620,CRP,killed,test_save_and_load_model (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 200, in test_save_and_load_model\n    loaded_vqc.load_model(file_path)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 616, in load_model\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/lib/npyio.py"", line 260, in __getitem__\n    raise KeyError(""%s is not a file in the archive"" % key)\nKeyError: 'opt_params is not a file in the archive'\n",11,646.3565883636475
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,166,620,CRP,killed,test_save_and_load_model (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 194, in test_save_and_load_model\n    vqc.save_model(file_path)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 620, in save_model\nKeyError: 'mutpy'\n",11,632.3166692256927
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,167,620,CRP,killed,test_save_and_load_model (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 194, in test_save_and_load_model\n    vqc.save_model(file_path)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 620, in save_model\nKeyError: ''\n",11,640.4176359176636
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,168,656,CRP,survived,,,0,10.53170895576477
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,169,657,CRP,survived,,,0,10.387932062149048
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,170,657,CRP,survived,,,0,10.477539300918579
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,171,659,CRP,survived,,,13,866.8112289905548
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,172,659,CRP,survived,,,13,864.4236631393433
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,173,659,CRP,survived,,,13,893.3383436203003
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,174,662,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 276, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 751, in return_probabilities\nIndexError: index 2 is out of bounds for axis 0 with size 2\n",1,0.8259191513061523
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,175,665,CRP,survived,,,13,861.4708776473999
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,176,666,CRP,killed,test_raw_feature_vector_on_wine_1_circuit (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqc.py"", line 324, in test_raw_feature_vector_on_wine\n    self.assertGreater(result['testing_accuracy'], 0.7)\nAssertionError: 0.25 not greater than 0.7\n",8,454.6063349246979
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,177,667,CRP,killed,test_raw_feature_vector_on_wine_1_circuit (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqc.py"", line 324, in test_raw_feature_vector_on_wine\n    self.assertGreater(result['testing_accuracy'], 0.7)\nAssertionError: 0.25 not greater than 0.7\n",8,445.83875799179077
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,178,669,CRP,killed,test_raw_feature_vector_on_wine_1_circuit (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqc.py"", line 324, in test_raw_feature_vector_on_wine\n    self.assertGreater(result['testing_accuracy'], 0.7)\nAssertionError: 0.25 not greater than 0.7\n",8,438.1734733581543
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,179,672,CRP,killed,test_wine (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 292, in test_wine\n    result = vqc.run(self.statevector_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/cobyla.py"", line 72, in optimize\n    method=""COBYLA"", options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 625, in minimize\n    return _minimize_cobyla(fun, x0, args, constraints, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 34, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 262, in _minimize_cobyla\n    dinfo=info)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 252, in calcfc\n    f = fun(x, *args)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 276, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 751, in return_probabilities\nIndexError: index 3 is out of bounds for axis 0 with size 3\n",13,732.4536249637604
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,180,673,CRP,killed,test_wine (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 292, in test_wine\n    result = vqc.run(self.statevector_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/cobyla.py"", line 72, in optimize\n    method=""COBYLA"", options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 625, in minimize\n    return _minimize_cobyla(fun, x0, args, constraints, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 34, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 262, in _minimize_cobyla\n    dinfo=info)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 252, in calcfc\n    f = fun(x, *args)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 276, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 751, in return_probabilities\nIndexError: index 3 is out of bounds for axis 0 with size 3\n",13,730.2445776462555
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,181,678,CRP,survived,,,13,855.213981628418
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,182,681,CRP,survived,,,13,885.6799080371857
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,183,681,CRP,survived,,,13,849.5464324951172
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,184,681,CRP,survived,,,13,850.0785179138184
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,185,681,CRP,survived,,,13,833.5494976043701
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,186,681,CRP,survived,,,13,865.7321231365204
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,187,683,CRP,survived,,,13,845.9995958805084
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,188,701,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 401, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 701, in cost_estimate\nIndexError: tuple index out of range\n",1,0.8046081066131592
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,189,703,CRP,survived,,,0,11.790130376815796
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,190,705,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 243, in _get_prediction\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/utils/deprecation.py"", line 56, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2055, in assign_parameters\n    bound_circuit._assign_parameter(parameter, value)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2122, in _assign_parameter\n    instr.params[param_index] = instr.validate_parameter(new_param)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 245, in validate_parameter\n    self.name))\nqiskit.circuit.exceptions.CircuitError: 'Bound parameter expression is complex in gate u3'\n",1,1.5464513301849365
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,191,706,CRP,survived,,,13,893.9695172309875
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,192,707,CRP,survived,,,0,10.927821159362793
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,193,708,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 401, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 712, in cost_estimate\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 708, in cross_entropy\n  File ""<__array_function__ internals>"", line 6, in sum\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/core/fromnumeric.py"", line 2248, in sum\n    initial=initial, where=where)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/core/fromnumeric.py"", line 87, in _wrapreduction\n    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)\nnumpy.AxisError: axis 2 is out of bounds for array of dimension 2\n",1,0.8521318435668945
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,194,730,CRP,survived,,,13,863.0703501701355
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1609.8518195152283,0.09171557426452637,1.4653983116149902,152473.1863219738,288.25135588645935,152762.99479174614,154376.266446352,195,730,CRP,survived,,,13,860.963093996048
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1402.2780640125275,0.2860558032989502,0.10447382926940918,21641.551302671432,20.2099506855011,21662.151782989502,23067.390178442,1,549,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1402.2780640125275,0.2860558032989502,0.10447382926940918,21641.551302671432,20.2099506855011,21662.151782989502,23067.390178442,2,554,DDL,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 237, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 223, in _build_parameterized_circuits\nAttributeError: 'VQC' object has no attribute '_feature_map'\n",1,0.05699658393859863
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1402.2780640125275,0.2860558032989502,0.10447382926940918,21641.551302671432,20.2099506855011,21662.151782989502,23067.390178442,3,586,DDL,timeout,,,,7011.519044876099
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1402.2780640125275,0.2860558032989502,0.10447382926940918,21641.551302671432,20.2099506855011,21662.151782989502,23067.390178442,4,593,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1402.2780640125275,0.2860558032989502,0.10447382926940918,21641.551302671432,20.2099506855011,21662.151782989502,23067.390178442,5,598,DDL,survived,,,10,1034.8209280967712
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1402.2780640125275,0.2860558032989502,0.10447382926940918,21641.551302671432,20.2099506855011,21662.151782989502,23067.390178442,6,603,DDL,survived,,,13,1555.2540891170502
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1402.2780640125275,0.2860558032989502,0.10447382926940918,21641.551302671432,20.2099506855011,21662.151782989502,23067.390178442,7,608,DDL,survived,,,13,1608.3083658218384
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1402.2780640125275,0.2860558032989502,0.10447382926940918,21641.551302671432,20.2099506855011,21662.151782989502,23067.390178442,8,623,DDL,timeout,,,,7011.507579803467
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1402.2780640125275,0.2860558032989502,0.10447382926940918,21641.551302671432,20.2099506855011,21662.151782989502,23067.390178442,9,628,DDL,survived,,,13,1820.4608688354492
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1402.2780640125275,0.2860558032989502,0.10447382926940918,21641.551302671432,20.2099506855011,21662.151782989502,23067.390178442,10,633,DDL,survived,,,13,1599.6073262691498
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1394.970597743988,0.08847832679748535,NA,NA,NA,0.3651120662689209,1398.2969372272491,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1378.564441204071,0.5236313343048096,NA,NA,NA,0.8485703468322754,1381.9045321941376,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1371.2576878070831,0.07309126853942871,NA,NA,NA,0.356464147567749,1374.6676445007324,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1142.467488527298,0.08094120025634766,0.055481910705566406,28562.140493631363,12.103597402572632,28574.380514144897,29719.247133493423,1,58,IOD,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 103, in test_basic_aer_qasm\n    vqc = VQC(optimizer, data_preparation, wavefunction, self.training_data, self.testing_data)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 86, in __init__\n    self.var_form = var_form\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 109, in var_form\n    raise ValueError('Unsupported type ""{}"" of var_form'.format(type(var_form)))\nValueError: Unsupported type ""<class 'qiskit.aqua.components.optimizers.spsa.SPSA'>"" of var_form\n",1,0.031068086624145508
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1142.467488527298,0.08094120025634766,0.055481910705566406,28562.140493631363,12.103597402572632,28574.380514144897,29719.247133493423,2,497,IOD,timeout,,,,5712.374019384384
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1142.467488527298,0.08094120025634766,0.055481910705566406,28562.140493631363,12.103597402572632,28574.380514144897,29719.247133493423,3,510,IOD,timeout,,,,5712.459851026535
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1142.467488527298,0.08094120025634766,0.055481910705566406,28562.140493631363,12.103597402572632,28574.380514144897,29719.247133493423,4,517,IOD,timeout,,,,5712.456954717636
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1142.467488527298,0.08094120025634766,0.055481910705566406,28562.140493631363,12.103597402572632,28574.380514144897,29719.247133493423,5,527,IOD,timeout,,,,5712.358742952347
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1142.467488527298,0.08094120025634766,0.055481910705566406,28562.140493631363,12.103597402572632,28574.380514144897,29719.247133493423,6,586,IOD,timeout,,,,5712.447291135788
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1171.8213875293732,0.07140636444091797,0.008684158325195312,1369.660779953003,2.1412436962127686,1371.8821141719818,2545.866787672043,1,58,IOP,survived,,,13,1369.6594014167786
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1319.1996676921844,0.10241556167602539,0.08533644676208496,18101.803500652313,16.93903350830078,18118.930286169052,19440.562688827515,1,146,LCR,timeout,,,,6596.114440202713
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1319.1996676921844,0.10241556167602539,0.08533644676208496,18101.803500652313,16.93903350830078,18118.930286169052,19440.562688827515,2,221,LCR,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 237, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 222, in _build_parameterized_circuits\nAttributeError: 'TwoLocal' object has no attribute 'support_parameterized_circuit'\n",1,0.16157746315002441
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1319.1996676921844,0.10241556167602539,0.08533644676208496,18101.803500652313,16.93903350830078,18118.930286169052,19440.562688827515,3,223,LCR,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 132, in optimize\n    **self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/spsa.py"", line 187, in _optimization\n    cost_plus = obj_fun(theta_plus)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 237, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 224, in _build_parameterized_circuits\nAttributeError: 'ZZFeatureMap' object has no attribute 'support_parameterized_circuit'\n",1,0.1258690357208252
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1319.1996676921844,0.10241556167602539,0.08533644676208496,18101.803500652313,16.93903350830078,18118.930286169052,19440.562688827515,4,230,LCR,killed,test_raw_feature_vector_on_wine_1_circuit (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqc.py"", line 319, in test_raw_feature_vector_on_wine\n    result = vqc.run(self.statevector_simulator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 339, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/cobyla.py"", line 72, in optimize\n    method=""COBYLA"", options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 625, in minimize\n    return _minimize_cobyla(fun, x0, args, constraints, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 34, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 262, in _minimize_cobyla\n    dinfo=info)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/cobyla.py"", line 252, in calcfc\n    f = fun(x, *args)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 395, in _loss\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 237, in _get_prediction\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 235, in _build_parameterized_circuits\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 264, in transpile\n    **self._compile_config)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 245, in transpile\n    circuits = parallel_map(_transpile_circuit, list(zip(circuits, transpile_args)))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 128, in parallel_map\n    return [task(values[0], *task_args, **task_kwargs)]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 329, in _transpile_circuit\n    output_name=transpile_config['output_name'])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 216, in run\n    return self._run_single_circuit(circuits, output_name, callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 277, in _run_single_circuit\n    result = running_passmanager.run(circuit, output_name=output_name, callback=callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 122, in run\n    dag = self._do_pass(pass_, dag, passset.options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 153, in _do_pass\n    dag = self._run_this_pass(pass_, dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 165, in _run_this_pass\n    new_dag = pass_.run(dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passes/basis/unroll_custom_definitions.py"", line 93, in run\n    decomposition)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passes/basis/unroll_custom_definitions.py"", line 89, in run\n    (str(self._basis_gates), node.op.name))\nqiskit.exceptions.QiskitError: ""Cannot unroll the circuit to the given basis, ['u1', 'u2', 'u3', 'rz', 'sx', 'x', 'cx', 'id', 'unitary']. Instruction Raw not found in equivalence library and no rule found to expand.""\n",8,730.877691745758
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1319.1996676921844,0.10241556167602539,0.08533644676208496,18101.803500652313,16.93903350830078,18118.930286169052,19440.562688827515,5,309,LCR,killed,test_minibatching_gradient_free (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 157, in test_minibatching_gradient_free\n    self.assertAlmostEqual(result['testing_accuracy'], 0.3333333333333333)\nAssertionError: 0.8333333333333334 != 0.3333333333333333 within 7 places (0.5 difference)\n",6,625.532158613205
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1319.1996676921844,0.10241556167602539,0.08533644676208496,18101.803500652313,16.93903350830078,18118.930286169052,19440.562688827515,6,332,LCR,survived,,,13,2159.387636899948
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1319.1996676921844,0.10241556167602539,0.08533644676208496,18101.803500652313,16.93903350830078,18118.930286169052,19440.562688827515,7,348,LCR,timeout,,,,6596.117858171463
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1319.1996676921844,0.10241556167602539,0.08533644676208496,18101.803500652313,16.93903350830078,18118.930286169052,19440.562688827515,8,487,LCR,survived,,,13,1393.4701752662659
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1393.536955356598,0.22310900688171387,NA,NA,NA,0.5274496078491211,1396.9485805034637,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1429.4434523582458,0.08923459053039551,0.0073089599609375,1347.607027053833,2.1205697059631348,1349.8241403102875,2781.9157345294952,1,681,LOR,survived,,,13,1347.6059064865112
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,1,148,ROR,survived,,,13,1223.0218591690063
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,2,280,ROR,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 501, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 446, in test\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 700, in cost_estimate\nAttributeError: 'list' object has no attribute 'shape'\n",1,15.464704990386963
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,3,282,ROR,survived,,,10,932.2747740745544
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,4,293,ROR,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/lib/shape_base.py"", line 772, in array_split\n    Nsections = len(indices_or_sections) + 1\nTypeError: object of type 'int' has no len()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 323, in train\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 298, in batch_data\n  File ""<__array_function__ internals>"", line 6, in array_split\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/lib/shape_base.py"", line 778, in array_split\n    raise ValueError('number sections must be larger than 0.')\nValueError: number sections must be larger than 0.\n",1,0.13171982765197754
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,5,293,ROR,survived,,,13,1711.5660979747772
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,6,293,ROR,killed,test_minibatching_gradient_based (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 176, in test_minibatching_gradient_based\n    self.assertAlmostEqual(result['testing_accuracy'], 0.75, places=3)\nAssertionError: 1.0 != 0.75 within 3 places (0.25 difference)\n",5,274.74225878715515
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,7,293,ROR,survived,,,13,1870.1370596885681
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,8,322,ROR,killed,test_minibatching_gradient_based (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 176, in test_minibatching_gradient_based\n    self.assertAlmostEqual(result['testing_accuracy'], 0.75, places=3)\nAssertionError: 1.0 != 0.75 within 3 places (0.25 difference)\n",5,107.84862899780273
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,9,322,ROR,survived,,,13,1847.8962335586548
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,10,332,ROR,survived,,,13,1366.1573371887207
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,11,332,ROR,survived,,,13,1565.237630367279
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,12,349,ROR,survived,,,13,1495.188330411911
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,13,349,ROR,survived,,,13,1668.0756011009216
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,14,416,ROR,timeout,,,,7199.852853536606
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,15,416,ROR,timeout,,,,7199.923688173294
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,16,432,ROR,survived,,,13,958.8278398513794
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,17,432,ROR,survived,,,13,1041.5827577114105
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,18,447,ROR,killed,test_minibatching_gradient_based (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 176, in test_minibatching_gradient_based\n    self.assertAlmostEqual(result['testing_accuracy'], 0.75, places=3)\nAssertionError: 0.25 != 0.75 within 3 places (0.5 difference)\n",5,349.85805201530457
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,19,450,ROR,survived,,,13,1012.6511962413788
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,20,474,ROR,survived,,,13,963.4025845527649
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,21,474,ROR,survived,,,13,997.2982931137085
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,22,484,ROR,survived,,,13,1007.420976638794
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,23,484,ROR,survived,,,13,1009.0434620380402
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,24,582,ROR,killed,test_feature_map_without_parameters_warns (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 275, in test_feature_map_without_parameters_warns\n    _ = VQC(optimizer, feature_map, var_form, self.training_data, self.testing_data)\nAssertionError: UserWarning not triggered\n",3,15.57163119316101
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,25,656,ROR,survived,,,0,11.440062761306763
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,26,657,ROR,survived,,,0,12.79895281791687
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,27,659,ROR,survived,,,13,991.747615814209
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,28,659,ROR,survived,,,13,936.345231294632
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,29,665,ROR,survived,,,13,953.771653175354
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,30,683,ROR,survived,,,13,953.6434864997864
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1439.9617002010345,0.09125709533691406,0.2619664669036865,40610.9528093338,53.31857752799988,40664.62461042404,42108.140105485916,31,683,ROR,survived,,,13,917.9744348526001
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1142.546837568283,0.10354948043823242,0.011328935623168945,0.04709219932556152,2.6757733821868896,2.8377439975738525,1147.5658738613129,1,58,SCD,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 103, in test_basic_aer_qasm\n    vqc = VQC(optimizer, data_preparation, wavefunction, self.training_data, self.testing_data)\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 121, in __init__\nAttributeError: 'VQC' object has no attribute '_optimizer'\n",1,0.0450901985168457
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1591.29265832901,0.46659135818481445,0.08840203285217285,5374.299998760223,13.198909282684326,5388.053901433945,6982.751428604126,1,497,SCI,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 498, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 75, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,0.14546632766723633
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1591.29265832901,0.46659135818481445,0.08840203285217285,5374.299998760223,13.198909282684326,5388.053901433945,6982.751428604126,2,510,SCI,survived,,,13,1840.9791340827942
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1591.29265832901,0.46659135818481445,0.08840203285217285,5374.299998760223,13.198909282684326,5388.053901433945,6982.751428604126,3,517,SCI,survived,,,13,1856.1433861255646
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1591.29265832901,0.46659135818481445,0.08840203285217285,5374.299998760223,13.198909282684326,5388.053901433945,6982.751428604126,4,527,SCI,survived,,,13,1658.0393471717834
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1591.29265832901,0.46659135818481445,0.08840203285217285,5374.299998760223,13.198909282684326,5388.053901433945,6982.751428604126,5,586,SCI,killed,test_basic_aer_qasm (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 105, in test_basic_aer_qasm\n    self.assertSimpleClassificationIsCorrect(vqc)\n  File ""./test/aqua/test_vqc.py"", line 87, in assertSimpleClassificationIsCorrect\n    result = vqc.run(backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 501, in _run\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 437, in test\n  File ""qiskit.aqua.algorithms.classifiers.vqc"", line 588, in optimal_params\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 277, in optimal_params\n    raise NotImplementedError()\nNotImplementedError\n",1,18.975393056869507
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1633.7740728855133,0.0992441177368164,0.05960345268249512,8285.892665863037,11.532054662704468,8297.58356809616,9934.453273057938,1,406,SIR,survived,,,13,1840.1365921497345
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1633.7740728855133,0.0992441177368164,0.05960345268249512,8285.892665863037,11.532054662704468,8297.58356809616,9934.453273057938,2,406,SIR,survived,,,13,1735.2257001399994
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1633.7740728855133,0.0992441177368164,0.05960345268249512,8285.892665863037,11.532054662704468,8297.58356809616,9934.453273057938,3,669,SIR,survived,,,13,1526.8047428131104
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1633.7740728855133,0.0992441177368164,0.05960345268249512,8285.892665863037,11.532054662704468,8297.58356809616,9934.453273057938,4,669,SIR,survived,,,13,1555.0778703689575
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1633.7740728855133,0.0992441177368164,0.05960345268249512,8285.892665863037,11.532054662704468,8297.58356809616,9934.453273057938,5,671,SIR,killed,test_wine (test.aqua.test_vqc.TestVQC),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqc.py"", line 295, in test_wine\n    self.assertGreater(result['testing_accuracy'], 0.3)\nAssertionError: 0.0 not greater than 0.3\n",13,1628.635882616043
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1747.0414583683014,0.10557913780212402,NA,NA,NA,17.187801361083984,1767.2407698631287,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1708.9956629276276,0.0765225887298584,NA,NA,NA,421.56808948516846,2133.7095754146576,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1450.7463674545288,0.32291340827941895,NA,NA,NA,344.8627595901489,1798.3194034099579,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1464.192705154419,0.08796167373657227,0.02050471305847168,1468.204271554947,4.109872817993164,1472.422610759735,2939.043612718582,1,200,QMD,survived,,,0,25.530174732208252
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1464.192705154419,0.08796167373657227,0.02050471305847168,1468.204271554947,4.109872817993164,1472.422610759735,2939.043612718582,2,544,QMD,survived,,,13,1442.6706037521362
qiskit.aqua.algorithms.classifiers.vqc,test.aqua.test_vqc,13,1530.7170181274414,0.08145332336425781,NA,NA,NA,39.95001435279846,1574.030594587326,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,614.7569739818573,0.03645157814025879,NA,NA,NA,0.17082881927490234,617.846654176712,NA,NA,AOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,554.2846028804779,0.03283834457397461,0.03795576095581055,3909.3729133605957,6.408053874969482,3915.851761341095,4472.936892986298,1,132,AOR,survived,,,7,511.9731333255768
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,554.2846028804779,0.03283834457397461,0.03795576095581055,3909.3729133605957,6.408053874969482,3915.851761341095,4472.936892986298,2,132,AOR,survived,,,7,532.9578402042389
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,554.2846028804779,0.03283834457397461,0.03795576095581055,3909.3729133605957,6.408053874969482,3915.851761341095,4472.936892986298,3,132,AOR,survived,,,7,497.9020411968231
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,554.2846028804779,0.03283834457397461,0.03795576095581055,3909.3729133605957,6.408053874969482,3915.851761341095,4472.936892986298,4,313,AOR,survived,,,7,575.6830401420593
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,554.2846028804779,0.03283834457397461,0.03795576095581055,3909.3729133605957,6.408053874969482,3915.851761341095,4472.936892986298,5,314,AOR,survived,,,7,430.1260221004486
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,554.2846028804779,0.03283834457397461,0.03795576095581055,3909.3729133605957,6.408053874969482,3915.851761341095,4472.936892986298,6,321,AOR,survived,,,7,368.1914224624634
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,554.2846028804779,0.03283834457397461,0.03795576095581055,3909.3729133605957,6.408053874969482,3915.851761341095,4472.936892986298,7,321,AOR,survived,,,7,443.7064211368561
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,554.2846028804779,0.03283834457397461,0.03795576095581055,3909.3729133605957,6.408053874969482,3915.851761341095,4472.936892986298,8,344,AOR,survived,,,7,548.8196566104889
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,470.9716546535492,0.03280925750732422,0.008395195007324219,2832.107316493988,1.4145820140838623,2833.5631029605865,3309.1385078430176,1,275,ASR,survived,,,7,477.18665504455566
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,470.9716546535492,0.03280925750732422,0.008395195007324219,2832.107316493988,1.4145820140838623,2833.5631029605865,3309.1385078430176,2,315,ASR,timeout,,,,2354.9181656837463
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,560.8617005348206,0.049761295318603516,0.00872492790222168,580.9035549163818,0.8917381763458252,581.8537793159485,1147.2372987270355,1,351,BCR,survived,,,7,580.9008162021637
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,651.067709684372,0.04857492446899414,0.006711483001708984,175.42243599891663,0.8249108791351318,176.30263328552246,831.8946597576141,1,225,COD,killed,test_qgan_training_analytic_gradients (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 302, in test_qgan_training_analytic_gradients\n    generator_gradient=Gradient('param_shift'))\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 226, in set_generator\nqiskit.aqua.aqua_error.AquaError: 'Please pass either a Gradient object or a function as the generator_gradient argument.'\n",3,175.4207022190094
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,1,108,COI,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 66, in setUp\n    snapshot_dir=None)\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 109, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Training data not given.'\n",1,0.034546613693237305
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,2,111,COI,timeout,,,,2626.53053855896
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,3,117,COI,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 66, in setUp\n    snapshot_dir=None)\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 119, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Dimensions of the data, the length of the data bounds and the numbers of qubits per dimension are incompatible.'\n",1,0.043282270431518555
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,4,118,COI,killed,test_qgan_training_run_algo_numpy_multivariate (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 285, in test_qgan_training_run_algo_numpy_multivariate\n    snapshot_dir=None)\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 119, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Dimensions of the data, the length of the data bounds and the numbers of qubits per dimension are incompatible.'\n",7,442.3596148490906
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,5,123,COI,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 66, in setUp\n    snapshot_dir=None)\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 124, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Dimensions of the data, the length of the data bounds and the numbers of qubits per dimension are incompatible.'\n",1,0.02791762351989746
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,6,130,COI,survived,,,7,437.4973666667938
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,7,131,COI,timeout,,,,2626.527936697006
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,8,134,COI,killed,test_qgan_training (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 140, in test_qgan_training\n    trained_statevector = self.qgan.run(self.qi_statevector)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 317, in train\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/neural_networks/quantum_generator.py"", line 321, in get_output\n    qc.append(self.construct_circuit(params), q)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 413, in broadcast_arguments\n    f'The amount of qubit arguments {len(qargs)} does not match'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit arguments 3 does not match the instruction expectation (2).'\n",2,118.97305417060852
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,9,150,COI,survived,,,7,460.6711313724518
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,10,154,COI,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 66, in setUp\n    snapshot_dir=None)\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 159, in __init__\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 179, in seed\nAttributeError: 'NoneType' object has no attribute 'set_seed'\n",1,0.185563325881958
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,11,224,COI,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 66, in setUp\n    snapshot_dir=None)\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 151, in __init__\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 226, in set_generator\nqiskit.aqua.aqua_error.AquaError: 'Please pass either a Gradient object or a function as the generator_gradient argument.'\n",1,0.1793687343597412
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,12,225,COI,killed,test_qgan_training_analytic_gradients (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 302, in test_qgan_training_analytic_gradients\n    generator_gradient=Gradient('param_shift'))\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 226, in set_generator\nqiskit.aqua.aqua_error.AquaError: 'Please pass either a Gradient object or a function as the generator_gradient argument.'\n",3,159.2021598815918
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,13,247,COI,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 66, in setUp\n    snapshot_dir=None)\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 155, in __init__\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 251, in set_discriminator\nAttributeError: 'NoneType' object has no attribute 'set_seed'\n",1,0.4091145992279053
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,14,274,COI,survived,,,7,427.569611787796
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,15,298,COI,timeout,,,,2626.5317158699036
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,16,305,COI,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 308, in train\nqiskit.aqua.aqua_error.AquaError: 'The batch size needs to be less than the truncated data size of 2768'\n",1,0.7758934497833252
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,17,313,COI,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 330, in train\nUnboundLocalError: local variable 'd_loss_min' referenced before assignment\n",1,0.3227217197418213
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,18,341,COI,timeout,,,,2626.5303041934967
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,19,349,COI,timeout,,,,2626.4633848667145
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,20,350,COI,survived,,,7,416.5322723388672
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,525.2826678752899,0.03296709060668945,0.12092280387878418,15597.734159231186,14.891927003860474,15612.779976129532,16141.420229434967,21,362,COI,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 364, in _run\nqiskit.aqua.aqua_error.AquaError: 'Chosen backend not supported - Set backend either to statevector_simulator, qasm_simulator or actual quantum hardware'\n",1,0.3265204429626465
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,1,73,CRP,survived,,,7,481.1504535675049
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,2,74,CRP,survived,,,7,418.5821557044983
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,3,74,CRP,survived,,,7,428.0855243206024
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,4,103,CRP,survived,,,7,380.9676113128662
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,5,103,CRP,survived,,,7,404.33345222473145
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,6,104,CRP,survived,,,7,452.53679060935974
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,7,104,CRP,survived,,,7,462.23442339897156
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,8,105,CRP,survived,,,7,416.90361976623535
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,9,105,CRP,survived,,,7,436.4192442893982
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,10,106,CRP,survived,,,7,434.0277273654938
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,11,106,CRP,survived,,,7,449.76818084716797
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,12,106,CRP,survived,,,7,501.7201237678528
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,13,109,CRP,survived,,,7,479.9740672111511
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,14,109,CRP,survived,,,7,417.8570303916931
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,15,112,CRP,survived,,,7,467.9023394584656
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,16,112,CRP,survived,,,7,451.4212863445282
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,17,113,CRP,survived,,,7,474.95448327064514
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,18,113,CRP,survived,,,7,414.0352554321289
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,19,117,CRP,killed,test_qgan_training_run_algo_numpy_multivariate (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 285, in test_qgan_training_run_algo_numpy_multivariate\n    snapshot_dir=None)\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 124, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Dimensions of the data, the length of the data bounds and the numbers of qubits per dimension are incompatible.'\n",7,351.7811803817749
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,20,118,CRP,survived,,,7,368.45350670814514
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,21,119,CRP,survived,,,7,380.11634063720703
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,22,119,CRP,survived,,,7,384.82648158073425
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,23,123,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 66, in setUp\n    snapshot_dir=None)\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 124, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Dimensions of the data, the length of the data bounds and the numbers of qubits per dimension are incompatible.'\n",1,0.0372159481048584
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,24,124,CRP,survived,,,7,347.58393383026123
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,25,124,CRP,survived,,,7,400.25475788116455
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,26,130,CRP,survived,,,7,410.1726200580597
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,27,132,CRP,survived,,,7,415.02984714508057
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,28,132,CRP,survived,,,7,423.3351562023163
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,29,135,CRP,survived,,,7,455.78761434555054
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,30,226,CRP,survived,,,7,455.7559726238251
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,31,226,CRP,survived,,,7,460.0284833908081
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,32,277,CRP,survived,,,7,462.9726014137268
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,33,277,CRP,survived,,,7,463.57964038848877
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,34,282,CRP,survived,,,7,495.1823763847351
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,35,282,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 282, in _store_params\nIsADirectoryError: [Errno 21] Is a directory: '/tmp/tmp7m2xdq5u/'\n",1,7.5883753299713135
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,36,282,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 282, in _store_params\nValueError: invalid mode: 'mutpy'\n",1,6.6462788581848145
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,37,282,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 282, in _store_params\nValueError: Must have exactly one of create/read/write/append mode and at most one plus\n",1,7.074331283569336
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,38,283,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: 'epoch'\n",1,7.0825934410095215
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,39,283,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: 'epoch'\n",1,7.59573769569397
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,40,283,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: 'loss_discriminator'\n",1,6.483268737792969
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,41,283,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: 'loss_discriminator'\n",1,6.67145848274231
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,42,284,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: 'loss_generator'\n",1,7.32506537437439
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,43,284,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: 'loss_generator'\n",1,7.745485544204712
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,44,284,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: 'params_generator'\n",1,6.687771797180176
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,45,284,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: 'params_generator'\n",1,7.253080368041992
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,46,284,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: 'rel_entropy'\n",1,7.445167064666748
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,47,284,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: 'rel_entropy'\n",1,7.531502962112427
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,48,286,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: 'mutpy'\n",1,6.950896739959717
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,49,286,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: ''\n",1,7.359347343444824
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,50,286,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: 'mutpy'\n",1,7.512557506561279
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,51,286,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: ''\n",1,7.08910346031189
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,52,287,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: 'mutpy'\n",1,6.79276180267334
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,53,287,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: ''\n",1,7.018212080001831
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,54,287,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: 'mutpy'\n",1,6.72041916847229
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,55,287,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: ''\n",1,6.803889274597168
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,56,288,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: 'mutpy'\n",1,6.3362109661102295
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,57,288,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 343, in train\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 288, in _store_params\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 155, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/csv.py"", line 151, in _dict_to_list\n    + "", "".join([repr(x) for x in wrong_fields]))\nValueError: dict contains fields not in fieldnames: ''\n",1,6.585359334945679
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,58,299,CRP,survived,,,7,420.1854169368744
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,59,299,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 299, in train\nIsADirectoryError: [Errno 21] Is a directory: '/tmp/tmpr4gcv04t/'\n",1,0.30755162239074707
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,60,299,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 299, in train\nValueError: invalid mode: 'mutpy'\n",1,0.26281166076660156
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,61,299,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 299, in train\nValueError: Must have exactly one of create/read/write/append mode and at most one plus\n",1,0.32055068016052246
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,62,300,CRP,survived,,,7,443.4203462600708
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,63,300,CRP,survived,,,7,364.54509711265564
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,64,300,CRP,survived,,,7,379.79796385765076
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,65,300,CRP,survived,,,7,359.6818742752075
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,66,300,CRP,survived,,,7,347.8078570365906
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,67,300,CRP,survived,,,7,376.59252071380615
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,68,300,CRP,survived,,,7,380.7192313671112
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,69,300,CRP,survived,,,7,451.9073123931885
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,70,301,CRP,survived,,,7,482.3853657245636
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,71,301,CRP,survived,,,7,479.12519454956055
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,72,307,CRP,survived,,,7,575.4857919216156
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,73,307,CRP,survived,,,7,521.5287654399872
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,74,312,CRP,survived,,,7,580.253655910492
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,75,323,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 323, in train\nKeyError: 'mutpy'\n",1,0.8506646156311035
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,76,323,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 323, in train\nKeyError: ''\n",1,0.5300633907318115
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,77,328,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 328, in train\nKeyError: 'mutpy'\n",1,1.7192912101745605
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,78,328,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 328, in train\nKeyError: ''\n",1,0.7604148387908936
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,79,330,CRP,survived,,,7,564.8565168380737
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,80,331,CRP,survived,,,7,520.7886798381805
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,81,334,CRP,survived,,,7,456.0406548976898
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,82,335,CRP,survived,,,7,564.9607090950012
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,83,335,CRP,survived,,,7,606.4236524105072
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,84,335,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 335, in train\nKeyError: 'mutpy'\n",1,9.243914365768433
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,85,335,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 335, in train\nKeyError: ''\n",1,7.824460744857788
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,86,336,CRP,survived,,,7,466.3410038948059
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,87,336,CRP,survived,,,7,413.77928948402405
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,88,336,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 336, in train\nKeyError: 'mutpy'\n",1,7.068687438964844
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,89,336,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 336, in train\nKeyError: ''\n",1,5.978358507156372
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,90,337,CRP,survived,,,7,405.770516872406
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,91,337,CRP,survived,,,7,440.8368830680847
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,92,337,CRP,survived,,,7,501.7927179336548
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,93,338,CRP,survived,,,7,428.82338213920593
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,94,338,CRP,survived,,,7,442.79758048057556
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,95,338,CRP,survived,,,7,395.6846296787262
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,96,339,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 262, in test_qgan_save_model\n    self.assertAlmostEqual(trained_qasm['rel_entr'], trained_statevector['rel_entr'], delta=0.1)\nKeyError: 'rel_entr'\n",1,67.58055877685547
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,97,339,CRP,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 262, in test_qgan_save_model\n    self.assertAlmostEqual(trained_qasm['rel_entr'], trained_statevector['rel_entr'], delta=0.1)\nKeyError: 'rel_entr'\n",1,69.90572118759155
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,98,339,CRP,survived,,,7,442.35591077804565
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,99,342,CRP,survived,,,7,475.01358795166016
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,100,343,CRP,survived,,,7,458.5749669075012
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,101,343,CRP,survived,,,7,530.7258388996124
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,102,344,CRP,survived,,,7,454.0037405490875
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,103,344,CRP,survived,,,7,399.35974645614624
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,104,344,CRP,survived,,,7,391.8596556186676
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,105,345,CRP,survived,,,7,312.86461448669434
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,106,345,CRP,survived,,,7,312.1909010410309
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,107,345,CRP,survived,,,7,303.82601046562195
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,108,346,CRP,survived,,,7,292.8474586009979
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,109,346,CRP,survived,,,7,307.4433972835541
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,110,346,CRP,survived,,,7,341.47312116622925
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,111,347,CRP,survived,,,7,306.82054924964905
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,112,347,CRP,survived,,,7,299.1948456764221
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,113,347,CRP,survived,,,7,298.5801570415497
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,114,362,CRP,survived,,,7,301.7693865299225
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,115,362,CRP,survived,,,7,292.90202164649963
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,116,362,CRP,survived,,,7,292.5942726135254
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,117,362,CRP,survived,,,7,308.10290813446045
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,118,364,CRP,survived,,,7,315.96435809135437
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.0624678134918,0.03983044624328613,0.7701878547668457,34683.018807411194,82.70340085029602,34766.5322265625,35217.43237900734,119,364,CRP,survived,,,7,289.5111587047577
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,494.14649629592896,0.03829550743103027,0.050024986267089844,3016.3532536029816,6.655665397644043,3023.0972394943237,3520.064927816391,1,163,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,494.14649629592896,0.03829550743103027,0.050024986267089844,3016.3532536029816,6.655665397644043,3023.0972394943237,3520.064927816391,2,168,DDL,survived,,,7,448.0198423862457
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,494.14649629592896,0.03829550743103027,0.050024986267089844,3016.3532536029816,6.655665397644043,3023.0972394943237,3520.064927816391,3,181,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,494.14649629592896,0.03829550743103027,0.050024986267089844,3016.3532536029816,6.655665397644043,3023.0972394943237,3520.064927816391,4,186,DDL,survived,,,7,432.97715306282043
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,494.14649629592896,0.03829550743103027,0.050024986267089844,3016.3532536029816,6.655665397644043,3023.0972394943237,3520.064927816391,5,198,DDL,survived,,,7,407.1936905384064
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,494.14649629592896,0.03829550743103027,0.050024986267089844,3016.3532536029816,6.655665397644043,3023.0972394943237,3520.064927816391,6,234,DDL,survived,,,7,405.0587315559387
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,494.14649629592896,0.03829550743103027,0.050024986267089844,3016.3532536029816,6.655665397644043,3023.0972394943237,3520.064927816391,7,253,DDL,survived,,,7,445.76225423812866
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,494.14649629592896,0.03829550743103027,0.050024986267089844,3016.3532536029816,6.655665397644043,3023.0972394943237,3520.064927816391,8,258,DDL,survived,,,7,436.9765315055847
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,494.14649629592896,0.03829550743103027,0.050024986267089844,3016.3532536029816,6.655665397644043,3023.0972394943237,3520.064927816391,9,263,DDL,survived,,,7,440.3527090549469
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,462.3776535987854,0.042938232421875,NA,NA,NA,0.19385671615600586,465.3219404220581,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,415.71101212501526,0.037721872329711914,NA,NA,NA,0.19534683227539062,418.5563614368439,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,431.22505044937134,0.034981489181518555,NA,NA,NA,0.19335031509399414,434.2879424095154,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,392.1799523830414,0.030675411224365234,0.006937742233276367,3921.9833421707153,1.2651243209838867,3923.286079645157,4318.317551612854,1,70,IOD,timeout,,,,1961.0106434822083
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,392.1799523830414,0.030675411224365234,0.006937742233276367,3921.9833421707153,1.2651243209838867,3923.286079645157,4318.317551612854,2,353,IOD,timeout,,,,1960.9704282283783
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,325.6590292453766,0.030695676803588867,0.0038573741912841797,349.4035453796387,0.7912657260894775,350.229364156723,677.9078369140625,1,70,IOP,survived,,,7,349.402410030365
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,392.86582493782043,0.031203031539916992,0.014138936996459961,1321.1858718395233,1.9320244789123535,1323.163238286972,1718.1918444633484,1,118,LCR,survived,,,7,421.9840180873871
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,392.86582493782043,0.031203031539916992,0.014138936996459961,1321.1858718395233,1.9320244789123535,1323.163238286972,1718.1918444633484,2,123,LCR,survived,,,7,462.7523136138916
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,392.86582493782043,0.031203031539916992,0.014138936996459961,1321.1858718395233,1.9320244789123535,1323.163238286972,1718.1918444633484,3,362,LCR,survived,,,7,436.4451503753662
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,455.0531485080719,0.04753470420837402,NA,NA,NA,0.2236635684967041,458.83215856552124,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,467.3501207828522,0.03627610206604004,NA,NA,NA,0.17072319984436035,470.18086075782776,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,488.59354615211487,0.04313325881958008,0.08769059181213379,4189.6346316337585,10.10142207145691,4199.866877555847,4692.170422792435,1,117,ROR,killed,test_qgan_training_run_algo_numpy_multivariate (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 285, in test_qgan_training_run_algo_numpy_multivariate\n    snapshot_dir=None)\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 124, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Dimensions of the data, the length of the data bounds and the numbers of qubits per dimension are incompatible.'\n",7,422.0605788230896
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,488.59354615211487,0.04313325881958008,0.08769059181213379,4189.6346316337585,10.10142207145691,4199.866877555847,4692.170422792435,2,117,ROR,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 66, in setUp\n    snapshot_dir=None)\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 119, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Dimensions of the data, the length of the data bounds and the numbers of qubits per dimension are incompatible.'\n",1,0.026805400848388672
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,488.59354615211487,0.04313325881958008,0.08769059181213379,4189.6346316337585,10.10142207145691,4199.866877555847,4692.170422792435,3,118,ROR,killed,test_qgan_training_run_algo_numpy_multivariate (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 285, in test_qgan_training_run_algo_numpy_multivariate\n    snapshot_dir=None)\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 119, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Dimensions of the data, the length of the data bounds and the numbers of qubits per dimension are incompatible.'\n",7,449.3213577270508
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,488.59354615211487,0.04313325881958008,0.08769059181213379,4189.6346316337585,10.10142207145691,4199.866877555847,4692.170422792435,4,123,ROR,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 66, in setUp\n    snapshot_dir=None)\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 124, in __init__\nqiskit.aqua.aqua_error.AquaError: 'Dimensions of the data, the length of the data bounds and the numbers of qubits per dimension are incompatible.'\n",1,0.05246901512145996
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,488.59354615211487,0.04313325881958008,0.08769059181213379,4189.6346316337585,10.10142207145691,4199.866877555847,4692.170422792435,5,130,ROR,survived,,,7,412.95550537109375
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,488.59354615211487,0.04313325881958008,0.08769059181213379,4189.6346316337585,10.10142207145691,4199.866877555847,4692.170422792435,6,130,ROR,survived,,,7,395.9236738681793
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,488.59354615211487,0.04313325881958008,0.08769059181213379,4189.6346316337585,10.10142207145691,4199.866877555847,4692.170422792435,7,274,ROR,survived,,,7,373.07701086997986
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,488.59354615211487,0.04313325881958008,0.08769059181213379,4189.6346316337585,10.10142207145691,4199.866877555847,4692.170422792435,8,277,ROR,survived,,,7,369.6438844203949
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,488.59354615211487,0.04313325881958008,0.08769059181213379,4189.6346316337585,10.10142207145691,4199.866877555847,4692.170422792435,9,305,ROR,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 308, in train\nqiskit.aqua.aqua_error.AquaError: 'The batch size needs to be less than the truncated data size of 2768'\n",1,0.33566856384277344
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,488.59354615211487,0.04313325881958008,0.08769059181213379,4189.6346316337585,10.10142207145691,4199.866877555847,4692.170422792435,10,305,ROR,survived,,,7,385.11232256889343
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,488.59354615211487,0.04313325881958008,0.08769059181213379,4189.6346316337585,10.10142207145691,4199.866877555847,4692.170422792435,11,313,ROR,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 367, in _run\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 330, in train\nUnboundLocalError: local variable 'd_loss_min' referenced before assignment\n",1,0.3619356155395508
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,488.59354615211487,0.04313325881958008,0.08769059181213379,4189.6346316337585,10.10142207145691,4199.866877555847,4692.170422792435,12,313,ROR,survived,,,7,456.0279178619385
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,488.59354615211487,0.04313325881958008,0.08769059181213379,4189.6346316337585,10.10142207145691,4199.866877555847,4692.170422792435,13,350,ROR,survived,,,7,462.1621356010437
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,488.59354615211487,0.04313325881958008,0.08769059181213379,4189.6346316337585,10.10142207145691,4199.866877555847,4692.170422792435,14,350,ROR,survived,,,7,462.1282482147217
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,488.59354615211487,0.04313325881958008,0.08769059181213379,4189.6346316337585,10.10142207145691,4199.866877555847,4692.170422792435,15,362,ROR,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 364, in _run\nqiskit.aqua.aqua_error.AquaError: 'Chosen backend not supported - Set backend either to statevector_simulator, qasm_simulator or actual quantum hardware'\n",1,0.4147360324859619
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,379.3393588066101,0.04772138595581055,0.0036728382110595703,457.74809098243713,0.9369850158691406,458.73647022247314,840.1139268875122,1,70,SCD,survived,,,7,457.74713373184204
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,511.1241948604584,0.04107308387756348,0.00515437126159668,0.40573811531066895,0.8657565116882324,1.3177220821380615,515.514698266983,1,353,SCI,killed,test_qgan_save_model (test.aqua.test_qgan.TestQGAN),"Traceback (most recent call last):\n  File ""./test/aqua/test_qgan.py"", line 258, in test_qgan_save_model\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.distribution_learners.qgan"", line 361, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 75, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,0.4042856693267822
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,528.9448089599609,0.03796505928039551,0.02579355239868164,2318.972928762436,2.115363597869873,2321.152050971985,2852.981784105301,1,314,SIR,survived,,,7,1078.1915996074677
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,528.9448089599609,0.03796505928039551,0.02579355239868164,2318.972928762436,2.115363597869873,2321.152050971985,2852.981784105301,2,314,SIR,survived,,,7,1240.7751581668854
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,532.6937453746796,0.035807132720947266,NA,NA,NA,9.347303867340088,544.8987348079681,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,556.7434344291687,0.039293766021728516,NA,NA,NA,274.1508882045746,834.199360370636,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,468.1240408420563,0.03487515449523926,NA,NA,NA,207.60046935081482,678.6351697444916,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,392.5328311920166,0.033976078033447266,NA,NA,NA,0.16599559783935547,395.45804619789124,NA,NA,QMD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.distribution_learners.qgan,test.aqua.test_qgan,9,448.96500611305237,0.03839445114135742,NA,NA,NA,18.99197769165039,470.8171651363373,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,5.779559373855591,0.01303410530090332,NA,NA,NA,0.06409978866577148,8.65212082862854,NA,NA,AOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,6.21915340423584,0.014089345932006836,NA,NA,NA,0.06762290000915527,9.16190767288208,NA,NA,AOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,5.667286157608032,0.09245467185974121,NA,NA,NA,0.1632826328277588,10.479894399642944,NA,NA,ASR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.507932424545288,0.025597095489501953,NA,NA,NA,0.06849050521850586,7.585675001144409,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,5.373568058013916,0.014299631118774414,NA,NA,NA,0.06736207008361816,9.986224174499512,NA,NA,COD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,5.06547737121582,0.014983892440795898,0.0068166255950927734,0.43600988388061523,0.588231086730957,1.046041488647461,10.505428552627563,1,71,COI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 51, in test_bernstein_vazirani\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 107, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 305, in execute\n    circuits = self.transpile(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 264, in transpile\n    **self._compile_config)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 240, in transpile\n    optimization_level, callback, output_name)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 431, in _parse_transpile_args\n    output_name = _parse_output_name(output_name, circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 739, in _parse_output_name\n    return [circuit.name for circuit in circuits]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 739, in <listcomp>\n    return [circuit.name for circuit in circuits]\nAttributeError: 'NoneType' object has no attribute 'name'\n",1,0.05372977256774902
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,5.06547737121582,0.014983892440795898,0.0068166255950927734,0.43600988388061523,0.588231086730957,1.046041488647461,10.505428552627563,2,97,COI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 51, in test_bernstein_vazirani\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 111, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/subsystem.py"", line 34, in get_subsystem_density_matrix\n    rho_sub = partial_trace(rho, trace_systems).data\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 46, in partial_trace\n    traced_shape = state._op_shape.remove(qargs=qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/operators/op_shape.py"", line 337, in remove\n    raise QiskitError(""Max qargs_l is larger than number of left qargs"")\nqiskit.exceptions.QiskitError: 'Max qargs_l is larger than number of left qargs'\n",1,0.14430713653564453
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,5.06547737121582,0.014983892440795898,0.0068166255950927734,0.43600988388061523,0.588231086730957,1.046041488647461,10.505428552627563,3,105,COI,killed,test_bernstein_vazirani_00002___00111100____basic___True___qasm_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 305, in get_statevector\n    return postprocess.format_statevector(self.data(experiment)['statevector'],\nKeyError: 'statevector'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 51, in test_bernstein_vazirani\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 108, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 308, in get_statevector\n    raise QiskitError(f'No statevector for experiment ""{repr(experiment)}""') from ex\nqiskit.exceptions.QiskitError: 'No statevector for experiment ""<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f4286d6feb8>""'\n",2,0.2324354648590088
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.858074188232422,0.009710311889648438,0.02096700668334961,11.65217638015747,1.3412890434265137,13.024142742156982,19.12601089477539,1,98,CRP,survived,,,33,3.738541841506958
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.858074188232422,0.009710311889648438,0.02096700668334961,11.65217638015747,1.3412890434265137,13.024142742156982,19.12601089477539,2,98,CRP,killed,test_bernstein_vazirani_00002___00111100____basic___True___qasm_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 51, in test_bernstein_vazirani\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 123, in _run\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 98, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",2,0.11722946166992188
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.858074188232422,0.009710311889648438,0.02096700668334961,11.65217638015747,1.3412890434265137,13.024142742156982,19.12601089477539,3,120,CRP,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 51, in test_bernstein_vazirani\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 120, in _run\nIndexError: tuple index out of range\n",1,0.11031103134155273
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.858074188232422,0.009710311889648438,0.02096700668334961,11.65217638015747,1.3412890434265137,13.024142742156982,19.12601089477539,4,120,CRP,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 51, in test_bernstein_vazirani\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 120, in _run\nIndexError: index 1 is out of bounds for axis 0 with size 1\n",1,0.15044236183166504
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.858074188232422,0.009710311889648438,0.02096700668334961,11.65217638015747,1.3412890434265137,13.024142742156982,19.12601089477539,5,125,CRP,survived,,,33,3.190307378768921
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.858074188232422,0.009710311889648438,0.02096700668334961,11.65217638015747,1.3412890434265137,13.024142742156982,19.12601089477539,6,125,CRP,survived,,,33,3.651552677154541
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.858074188232422,0.009710311889648438,0.02096700668334961,11.65217638015747,1.3412890434265137,13.024142742156982,19.12601089477539,7,126,CRP,killed,test_bernstein_vazirani_00002___00111100____basic___True___qasm_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 51, in test_bernstein_vazirani\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 126, in _run\nIndexError: tuple index out of range\n",2,0.164992094039917
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.858074188232422,0.009710311889648438,0.02096700668334961,11.65217638015747,1.3412890434265137,13.024142742156982,19.12601089477539,8,126,CRP,killed,test_bernstein_vazirani_00002___00111100____basic___True___qasm_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: 1024 != '110'\n",2,0.17121315002441406
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.858074188232422,0.009710311889648438,0.02096700668334961,11.65217638015747,1.3412890434265137,13.024142742156982,19.12601089477539,9,128,CRP,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nKeyError: 'result'\n",1,0.101470947265625
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.858074188232422,0.009710311889648438,0.02096700668334961,11.65217638015747,1.3412890434265137,13.024142742156982,19.12601089477539,10,128,CRP,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nKeyError: 'result'\n",1,0.23412513732910156
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.523194074630737,0.010922908782958984,NA,NA,NA,0.07439923286437988,8.109116554260254,NA,NA,DDL,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.163663148880005,0.010878801345825195,NA,NA,NA,0.05605649948120117,7.471810817718506,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.9006729125976562,0.011382818222045898,NA,NA,NA,0.055408477783203125,6.325414657592773,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.236860990524292,0.014806509017944336,NA,NA,NA,0.0750281810760498,7.643167734146118,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.649698257446289,0.009822368621826172,0.0026466846466064453,36.57389521598816,0.2893970012664795,36.87576127052307,43.04305815696716,1,44,IOD,timeout,,,,18.284595727920532
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.649698257446289,0.009822368621826172,0.0026466846466064453,36.57389521598816,0.2893970012664795,36.87576127052307,43.04305815696716,2,104,IOD,timeout,,,,18.28617572784424
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.6244359016418457,0.009631633758544922,0.0016024112701416016,3.1558563709259033,0.18116545677185059,3.3482558727264404,9.230210304260254,1,44,IOP,survived,,,33,3.1543285846710205
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.9931986331939697,0.011813879013061523,NA,NA,NA,0.05876946449279785,6.90593957901001,NA,NA,LCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.923886775970459,0.011585474014282227,NA,NA,NA,0.06477952003479004,6.45439338684082,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.1953394412994385,0.012058496475219727,NA,NA,NA,0.06702780723571777,7.476614475250244,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.623466968536377,0.010956048965454102,0.0016698837280273438,0.11055135726928711,0.17768192291259766,0.3008592128753662,9.022262573242188,1,120,ROR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.1090843677520752
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,3.362952709197998,0.009514331817626953,0.0014140605926513672,2.836216688156128,0.20517230033874512,3.0523173809051514,8.83120608329773,1,44,SCD,killed,test_with_pass_manager (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 63, in test_with_pass_manager\n    result = alg.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 62, in run\n    if quantum_instance is None and self.quantum_instance is None:\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 80, in quantum_instance\n    return self._quantum_instance\nAttributeError: 'BernsteinVazirani' object has no attribute '_quantum_instance'\n",33,2.8348708152770996
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.830050468444824,0.01096343994140625,0.0014443397521972656,0.04833626747131348,0.21283292770385742,0.2735769748687744,7.834385633468628,1,104,SCI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 51, in test_bernstein_vazirani\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 105, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 75, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,0.04688096046447754
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.256768226623535,0.012598752975463867,NA,NA,NA,0.05580568313598633,7.0009925365448,NA,NA,SIR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,6.229758977890015,0.013456583023071289,0.016309738159179688,0.5742571353912354,4.629796504974365,5.233819961547852,14.455585956573486,1,78,QGD,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.1335279941558838
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,6.229758977890015,0.013456583023071289,0.016309738159179688,0.5742571353912354,4.629796504974365,5.233819961547852,14.455585956573486,2,79,QGD,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.1283280849456787
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,6.229758977890015,0.013456583023071289,0.016309738159179688,0.5742571353912354,4.629796504974365,5.233819961547852,14.455585956573486,3,80,QGD,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.18063807487487793
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,6.229758977890015,0.013456583023071289,0.016309738159179688,0.5742571353912354,4.629796504974365,5.233819961547852,14.455585956573486,4,92,QGD,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.12071514129638672
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,1,78,QGI,survived,,,33,5.2187933921813965
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,2,78,QGI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '001' != '110'\n- 001\n+ 110\n\n",1,0.14733552932739258
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,3,78,QGI,killed,test_bernstein_vazirani_00002___00111100____basic___True___qasm_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '100' != '110'\n- 100\n?   -\n+ 110\n? +\n\n",2,0.24899840354919434
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,4,78,QGI,killed,test_with_pass_manager (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 63, in test_with_pass_manager\n    result = alg.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 124, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 305, in execute\n    circuits = self.transpile(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 259, in transpile\n    transpiled_circuits = self._pass_manager.run(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 216, in run\n    return self._run_single_circuit(circuits, output_name, callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 277, in _run_single_circuit\n    result = running_passmanager.run(circuit, output_name=output_name, callback=callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 122, in run\n    dag = self._do_pass(pass_, dag, passset.options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 153, in _do_pass\n    dag = self._run_this_pass(pass_, dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 165, in _run_this_pass\n    new_dag = pass_.run(dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passes/basis/unroll_custom_definitions.py"", line 89, in run\n    (str(self._basis_gates), node.op.name))\nqiskit.exceptions.QiskitError: ""Cannot unroll the circuit to the given basis, ['cx', 'u1', 'u2', 'u3']. Instruction id not found in equivalence library and no rule found to expand.""\n",33,4.383950710296631
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,5,78,QGI,survived,,,33,3.6772310733795166
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,6,78,QGI,survived,,,33,4.544145107269287
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,7,78,QGI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '101' != '110'\n- 101\n?   -\n+ 110\n? +\n\n",1,0.15279197692871094
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,8,78,QGI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '001' != '110'\n- 001\n+ 110\n\n",1,0.19328069686889648
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,9,78,QGI,killed,test_with_pass_manager (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 63, in test_with_pass_manager\n    result = alg.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 124, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 305, in execute\n    circuits = self.transpile(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 259, in transpile\n    transpiled_circuits = self._pass_manager.run(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 216, in run\n    return self._run_single_circuit(circuits, output_name, callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 277, in _run_single_circuit\n    result = running_passmanager.run(circuit, output_name=output_name, callback=callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 122, in run\n    dag = self._do_pass(pass_, dag, passset.options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 153, in _do_pass\n    dag = self._run_this_pass(pass_, dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 165, in _run_this_pass\n    new_dag = pass_.run(dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passes/basis/unroll_custom_definitions.py"", line 89, in run\n    (str(self._basis_gates), node.op.name))\nqiskit.exceptions.QiskitError: ""Cannot unroll the circuit to the given basis, ['cx', 'u1', 'u2', 'u3']. Instruction id not found in equivalence library and no rule found to expand.""\n",33,4.628014087677002
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,10,78,QGI,survived,,,33,4.595923185348511
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,11,78,QGI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.13068604469299316
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,12,79,QGI,survived,,,33,4.146082401275635
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,13,79,QGI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.12716031074523926
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,14,79,QGI,survived,,,33,4.077305555343628
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,15,79,QGI,killed,test_with_pass_manager (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 63, in test_with_pass_manager\n    result = alg.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 124, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 305, in execute\n    circuits = self.transpile(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 259, in transpile\n    transpiled_circuits = self._pass_manager.run(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 216, in run\n    return self._run_single_circuit(circuits, output_name, callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 277, in _run_single_circuit\n    result = running_passmanager.run(circuit, output_name=output_name, callback=callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 122, in run\n    dag = self._do_pass(pass_, dag, passset.options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 153, in _do_pass\n    dag = self._run_this_pass(pass_, dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 165, in _run_this_pass\n    new_dag = pass_.run(dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passes/basis/unroll_custom_definitions.py"", line 89, in run\n    (str(self._basis_gates), node.op.name))\nqiskit.exceptions.QiskitError: ""Cannot unroll the circuit to the given basis, ['cx', 'u1', 'u2', 'u3']. Instruction id not found in equivalence library and no rule found to expand.""\n",33,3.8305299282073975
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,16,79,QGI,survived,,,33,3.5011003017425537
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,17,79,QGI,killed,test_bernstein_vazirani_00004___00111100____basic___False___qasm_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",4,0.4638173580169678
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,18,79,QGI,survived,,,33,3.502765655517578
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,19,79,QGI,survived,,,33,4.245654106140137
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,20,79,QGI,killed,test_with_pass_manager (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 63, in test_with_pass_manager\n    result = alg.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 124, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 305, in execute\n    circuits = self.transpile(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 259, in transpile\n    transpiled_circuits = self._pass_manager.run(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 216, in run\n    return self._run_single_circuit(circuits, output_name, callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 277, in _run_single_circuit\n    result = running_passmanager.run(circuit, output_name=output_name, callback=callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 122, in run\n    dag = self._do_pass(pass_, dag, passset.options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 153, in _do_pass\n    dag = self._run_this_pass(pass_, dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 165, in _run_this_pass\n    new_dag = pass_.run(dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passes/basis/unroll_custom_definitions.py"", line 89, in run\n    (str(self._basis_gates), node.op.name))\nqiskit.exceptions.QiskitError: ""Cannot unroll the circuit to the given basis, ['cx', 'u1', 'u2', 'u3']. Instruction id not found in equivalence library and no rule found to expand.""\n",33,4.599109172821045
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,21,79,QGI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.12593531608581543
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,22,79,QGI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.1432039737701416
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,23,80,QGI,survived,,,33,4.7243523597717285
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,24,80,QGI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.11704897880554199
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,25,80,QGI,killed,test_bernstein_vazirani_00003___00111100____basic___False___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",3,0.45721960067749023
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,26,80,QGI,killed,test_with_pass_manager (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 63, in test_with_pass_manager\n    result = alg.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 124, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 305, in execute\n    circuits = self.transpile(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 259, in transpile\n    transpiled_circuits = self._pass_manager.run(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 216, in run\n    return self._run_single_circuit(circuits, output_name, callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 277, in _run_single_circuit\n    result = running_passmanager.run(circuit, output_name=output_name, callback=callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 122, in run\n    dag = self._do_pass(pass_, dag, passset.options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 153, in _do_pass\n    dag = self._run_this_pass(pass_, dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 165, in _run_this_pass\n    new_dag = pass_.run(dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passes/basis/unroll_custom_definitions.py"", line 89, in run\n    (str(self._basis_gates), node.op.name))\nqiskit.exceptions.QiskitError: ""Cannot unroll the circuit to the given basis, ['cx', 'u1', 'u2', 'u3']. Instruction id not found in equivalence library and no rule found to expand.""\n",33,3.589693784713745
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,27,80,QGI,survived,,,33,4.648039102554321
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,28,80,QGI,survived,,,33,5.509505748748779
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,29,80,QGI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.10928821563720703
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,30,80,QGI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.1157522201538086
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,31,80,QGI,killed,test_with_pass_manager (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 63, in test_with_pass_manager\n    result = alg.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 124, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 305, in execute\n    circuits = self.transpile(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 259, in transpile\n    transpiled_circuits = self._pass_manager.run(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 216, in run\n    return self._run_single_circuit(circuits, output_name, callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 277, in _run_single_circuit\n    result = running_passmanager.run(circuit, output_name=output_name, callback=callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 122, in run\n    dag = self._do_pass(pass_, dag, passset.options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 153, in _do_pass\n    dag = self._run_this_pass(pass_, dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 165, in _run_this_pass\n    new_dag = pass_.run(dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passes/basis/unroll_custom_definitions.py"", line 89, in run\n    (str(self._basis_gates), node.op.name))\nqiskit.exceptions.QiskitError: ""Cannot unroll the circuit to the given basis, ['cx', 'u1', 'u2', 'u3']. Instruction id not found in equivalence library and no rule found to expand.""\n",33,4.205432415008545
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,32,80,QGI,survived,,,33,4.410172462463379
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,33,80,QGI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.1200551986694336
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,34,92,QGI,survived,,,33,5.4612791538238525
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,35,92,QGI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '001' != '110'\n- 001\n+ 110\n\n",1,0.22150349617004395
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,36,92,QGI,survived,,,33,5.448405504226685
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,37,92,QGI,killed,test_with_pass_manager (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 63, in test_with_pass_manager\n    result = alg.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 124, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 305, in execute\n    circuits = self.transpile(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 259, in transpile\n    transpiled_circuits = self._pass_manager.run(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 216, in run\n    return self._run_single_circuit(circuits, output_name, callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 277, in _run_single_circuit\n    result = running_passmanager.run(circuit, output_name=output_name, callback=callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 122, in run\n    dag = self._do_pass(pass_, dag, passset.options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 153, in _do_pass\n    dag = self._run_this_pass(pass_, dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 165, in _run_this_pass\n    new_dag = pass_.run(dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passes/basis/unroll_custom_definitions.py"", line 89, in run\n    (str(self._basis_gates), node.op.name))\nqiskit.exceptions.QiskitError: ""Cannot unroll the circuit to the given basis, ['cx', 'u1', 'u2', 'u3']. Instruction id not found in equivalence library and no rule found to expand.""\n",33,4.7273547649383545
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,38,92,QGI,survived,,,33,3.9014174938201904
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,39,92,QGI,killed,test_bernstein_vazirani_00002___00111100____basic___True___qasm_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '100' != '110'\n- 100\n?   -\n+ 110\n? +\n\n",2,0.2147061824798584
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,40,92,QGI,survived,,,33,4.683614015579224
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,41,92,QGI,survived,,,33,5.163872718811035
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,42,92,QGI,killed,test_with_pass_manager (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 63, in test_with_pass_manager\n    result = alg.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 124, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 305, in execute\n    circuits = self.transpile(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 259, in transpile\n    transpiled_circuits = self._pass_manager.run(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 216, in run\n    return self._run_single_circuit(circuits, output_name, callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 277, in _run_single_circuit\n    result = running_passmanager.run(circuit, output_name=output_name, callback=callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 122, in run\n    dag = self._do_pass(pass_, dag, passset.options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 153, in _do_pass\n    dag = self._run_this_pass(pass_, dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 165, in _run_this_pass\n    new_dag = pass_.run(dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passes/basis/unroll_custom_definitions.py"", line 89, in run\n    (str(self._basis_gates), node.op.name))\nqiskit.exceptions.QiskitError: ""Cannot unroll the circuit to the given basis, ['cx', 'u1', 'u2', 'u3']. Instruction id not found in equivalence library and no rule found to expand.""\n",33,5.411075830459595
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,43,92,QGI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '001' != '110'\n- 001\n+ 110\n\n",1,0.1980898380279541
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.184494972229004,0.010715246200561523,0.11362981796264648,120.3921332359314,138.36689734458923,258.88337564468384,266.1490480899811,44,92,QGI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.16625380516052246
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,1,78,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '001' != '110'\n- 001\n+ 110\n\n",1,0.10507941246032715
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,2,78,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.14234662055969238
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,3,78,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.1032102108001709
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,4,78,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.13160300254821777
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,5,78,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.10788369178771973
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,6,78,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.11801314353942871
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,7,78,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.11727070808410645
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,8,78,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.11278223991394043
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,9,78,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.1375899314880371
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,10,78,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.15451288223266602
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,11,79,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.1324007511138916
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,12,79,QGR,survived,,,33,3.886471748352051
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,13,79,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.1124565601348877
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,14,79,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.11950969696044922
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,15,79,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.14464950561523438
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,16,79,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.15650177001953125
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,17,79,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.16074681282043457
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,18,79,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.11733126640319824
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,19,79,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.15633845329284668
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,20,79,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.13871526718139648
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,21,80,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.1412491798400879
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,22,80,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.10298967361450195
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,23,80,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.21325421333312988
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,24,80,QGR,killed,test_bernstein_vazirani_00002___00111100____basic___True___qasm_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",2,0.20090317726135254
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,25,80,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.11542677879333496
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,26,80,QGR,killed,test_bernstein_vazirani_00002___00111100____basic___True___qasm_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",2,0.22114038467407227
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,27,80,QGR,killed,test_bernstein_vazirani_00002___00111100____basic___True___qasm_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",2,0.16570544242858887
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,28,80,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.13614106178283691
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,29,80,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.1636962890625
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,30,80,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.13357853889465332
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,31,92,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '100' != '110'\n- 100\n?   -\n+ 110\n? +\n\n",1,0.13812828063964844
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,32,92,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.15935468673706055
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,33,92,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.13370680809020996
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,34,92,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.1476132869720459
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,35,92,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.1166996955871582
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,36,92,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.14279818534851074
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,37,92,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.13699603080749512
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,38,92,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.10131692886352539
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,39,92,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.10984301567077637
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.31996488571167,0.011428117752075195,0.08034324645996094,9.331255674362183,115.68861865997314,125.11164569854736,132.07127356529236,40,92,QGR,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",1,0.11420750617980957
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.279072999954224,0.009855985641479492,0.001546621322631836,0.1362004280090332,0.16825413703918457,0.3158571720123291,7.552523374557495,1,100,QMD,killed,test_bernstein_vazirani_00002___00111100____basic___True___qasm_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 53, in test_bernstein_vazirani\n    self.assertEqual(result['result'], parameter)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",2,0.1347489356994629
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.68540620803833,0.010712146759033203,0.009818315505981445,0.2882859706878662,9.176909446716309,9.48572587966919,17.128232717514038,1,78,QMI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 51, in test_bernstein_vazirani\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 106, in _run\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 78, in construct_circuit\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 56, in measure\n    return self.append(Measure(), [qubit], [cbit])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 39, in broadcast_arguments\n    raise CircuitError('register size error')\nqiskit.circuit.exceptions.CircuitError: 'register size error'\n",1,0.04809832572937012
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.68540620803833,0.010712146759033203,0.009818315505981445,0.2882859706878662,9.176909446716309,9.48572587966919,17.128232717514038,2,79,QMI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 51, in test_bernstein_vazirani\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 106, in _run\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 94, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 708, in compose\n    raise CircuitError(""Trying to compose with another QuantumCircuit ""\nqiskit.circuit.exceptions.CircuitError: ""Trying to compose with another QuantumCircuit which has more 'in' edges.""\n",1,0.07842659950256348
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.68540620803833,0.010712146759033203,0.009818315505981445,0.2882859706878662,9.176909446716309,9.48572587966919,17.128232717514038,3,80,QMI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 51, in test_bernstein_vazirani\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 106, in _run\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 94, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 708, in compose\n    raise CircuitError(""Trying to compose with another QuantumCircuit ""\nqiskit.circuit.exceptions.CircuitError: ""Trying to compose with another QuantumCircuit which has more 'in' edges.""\n",1,0.052289724349975586
qiskit.aqua.algorithms.education.bernstein_vazirani,test.aqua.test_bernstein_vazirani,33,4.68540620803833,0.010712146759033203,0.009818315505981445,0.2882859706878662,9.176909446716309,9.48572587966919,17.128232717514038,4,92,QMI,killed,test_bernstein_vazirani_00001___00111100____basic___True___statevector_simulator__ (test.aqua.test_bernstein_vazirani.TestBernsteinVazirani),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_bernstein_vazirani.py"", line 51, in test_bernstein_vazirani\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 106, in _run\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 92, in construct_circuit\n  File ""qiskit.aqua.algorithms.education.bernstein_vazirani"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 56, in measure\n    return self.append(Measure(), [qubit], [cbit])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 39, in broadcast_arguments\n    raise CircuitError('register size error')\nqiskit.circuit.exceptions.CircuitError: 'register size error'\n",1,0.09995126724243164
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,5.432980298995972,0.015994548797607422,NA,NA,NA,0.06527233123779297,8.413953065872192,NA,NA,AOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,5.371727705001831,0.014138460159301758,0.007627248764038086,53.839679479599,0.710294246673584,54.57173943519592,62.670541524887085,1,100,AOR,timeout,,,,26.906456232070923
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,5.371727705001831,0.014138460159301758,0.007627248764038086,53.839679479599,0.710294246673584,54.57173943519592,62.670541524887085,2,100,AOR,timeout,,,,26.92375159263611
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,5.3783087730407715,0.01705479621887207,NA,NA,NA,0.08951640129089355,9.122550010681152,NA,NA,ASR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.562373399734497,0.01282501220703125,NA,NA,NA,0.06131410598754883,8.372329711914062,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.739907503128052,0.015090227127075195,NA,NA,NA,0.07131075859069824,9.143128871917725,NA,NA,COD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,5.30327296257019,0.01849365234375,0.008221626281738281,0.289905309677124,0.8305056095123291,1.1471261978149414,9.910595655441284,1,76,COI,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 41, in test_deutsch_jozsa\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 113, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 305, in execute\n    circuits = self.transpile(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 264, in transpile\n    **self._compile_config)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 240, in transpile\n    optimization_level, callback, output_name)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 431, in _parse_transpile_args\n    output_name = _parse_output_name(output_name, circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 739, in _parse_output_name\n    return [circuit.name for circuit in circuits]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 739, in <listcomp>\n    return [circuit.name for circuit in circuits]\nAttributeError: 'NoneType' object has no attribute 'name'\n",1,0.05221152305603027
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,5.30327296257019,0.01849365234375,0.008221626281738281,0.289905309677124,0.8305056095123291,1.1471261978149414,9.910595655441284,2,103,COI,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 41, in test_deutsch_jozsa\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 117, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/subsystem.py"", line 34, in get_subsystem_density_matrix\n    rho_sub = partial_trace(rho, trace_systems).data\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 46, in partial_trace\n    traced_shape = state._op_shape.remove(qargs=qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/operators/op_shape.py"", line 337, in remove\n    raise QiskitError(""Max qargs_l is larger than number of left qargs"")\nqiskit.exceptions.QiskitError: 'Max qargs_l is larger than number of left qargs'\n",1,0.09494590759277344
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,5.30327296257019,0.01849365234375,0.008221626281738281,0.289905309677124,0.8305056095123291,1.1471261978149414,9.910595655441284,3,111,COI,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 305, in get_statevector\n    return postprocess.format_statevector(self.data(experiment)['statevector'],\nKeyError: 'statevector'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 41, in test_deutsch_jozsa\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 114, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 308, in get_statevector\n    raise QiskitError(f'No statevector for experiment ""{repr(experiment)}""') from ex\nqiskit.exceptions.QiskitError: 'No statevector for experiment ""<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fb6fbd8ba90>""'\n",2,0.13288474082946777
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.7075326442718506,0.013874530792236328,0.03852033615112305,12.782092094421387,2.475369930267334,15.30985689163208,21.576862573623657,1,104,CRP,survived,,,64,3.655109167098999
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.7075326442718506,0.013874530792236328,0.03852033615112305,12.782092094421387,2.475369930267334,15.30985689163208,21.576862573623657,2,104,CRP,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 41, in test_deutsch_jozsa\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 129, in _run\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 104, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",2,0.07955002784729004
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.7075326442718506,0.013874530792236328,0.03852033615112305,12.782092094421387,2.475369930267334,15.30985689163208,21.576862573623657,3,126,CRP,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 41, in test_deutsch_jozsa\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 126, in _run\nIndexError: tuple index out of range\n",1,0.07399916648864746
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.7075326442718506,0.013874530792236328,0.03852033615112305,12.782092094421387,2.475369930267334,15.30985689163208,21.576862573623657,4,126,CRP,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 41, in test_deutsch_jozsa\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 126, in _run\nIndexError: index 1 is out of bounds for axis 0 with size 1\n",1,0.07730460166931152
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.7075326442718506,0.013874530792236328,0.03852033615112305,12.782092094421387,2.475369930267334,15.30985689163208,21.576862573623657,5,131,CRP,survived,,,64,3.351475954055786
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.7075326442718506,0.013874530792236328,0.03852033615112305,12.782092094421387,2.475369930267334,15.30985689163208,21.576862573623657,6,131,CRP,survived,,,64,3.609393835067749
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.7075326442718506,0.013874530792236328,0.03852033615112305,12.782092094421387,2.475369930267334,15.30985689163208,21.576862573623657,7,132,CRP,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 41, in test_deutsch_jozsa\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 132, in _run\nIndexError: tuple index out of range\n",2,0.1202077865600586
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.7075326442718506,0.013874530792236328,0.03852033615112305,12.782092094421387,2.475369930267334,15.30985689163208,21.576862573623657,8,132,CRP,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.14653825759887695
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.7075326442718506,0.013874530792236328,0.03852033615112305,12.782092094421387,2.475369930267334,15.30985689163208,21.576862573623657,9,134,CRP,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nKeyError: 'result'\n",1,0.09723186492919922
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.7075326442718506,0.013874530792236328,0.03852033615112305,12.782092094421387,2.475369930267334,15.30985689163208,21.576862573623657,10,134,CRP,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nKeyError: 'result'\n",1,0.12383770942687988
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.7075326442718506,0.013874530792236328,0.03852033615112305,12.782092094421387,2.475369930267334,15.30985689163208,21.576862573623657,11,134,CRP,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",1,0.08913969993591309
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.7075326442718506,0.013874530792236328,0.03852033615112305,12.782092094421387,2.475369930267334,15.30985689163208,21.576862573623657,12,134,CRP,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",1,0.09888529777526855
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.7075326442718506,0.013874530792236328,0.03852033615112305,12.782092094421387,2.475369930267334,15.30985689163208,21.576862573623657,13,134,CRP,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",1,0.10300135612487793
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.7075326442718506,0.013874530792236328,0.03852033615112305,12.782092094421387,2.475369930267334,15.30985689163208,21.576862573623657,14,134,CRP,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.5780208110809326
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.7075326442718506,0.013874530792236328,0.03852033615112305,12.782092094421387,2.475369930267334,15.30985689163208,21.576862573623657,15,134,CRP,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.5358221530914307
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.794351816177368,0.010568380355834961,NA,NA,NA,0.07253265380859375,6.988719701766968,NA,NA,DDL,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.189551115036011,0.018605947494506836,NA,NA,NA,0.09969162940979004,7.3909361362457275,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.683507204055786,0.017163753509521484,NA,NA,NA,0.07776474952697754,6.293215990066528,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.703028917312622,0.011617183685302734,NA,NA,NA,0.057852983474731445,6.607778787612915,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.1480202674865723,0.011985063552856445,0.0023717880249023438,31.54745841026306,0.5047459602355957,32.066561222076416,37.525283336639404,1,49,IOD,timeout,,,,15.770511150360107
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.1480202674865723,0.011985063552856445,0.0023717880249023438,31.54745841026306,0.5047459602355957,32.066561222076416,37.525283336639404,2,110,IOD,timeout,,,,15.773274660110474
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.5409226417541504,0.010205984115600586,0.00179290771484375,3.1918022632598877,0.3609352111816406,3.5647363662719727,9.610839605331421,1,49,IOP,survived,,,64,3.1896121501922607
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.5345211029052734,0.010218620300292969,NA,NA,NA,0.05368542671203613,6.213681221008301,NA,NA,LCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.6864848136901855,0.012884378433227539,NA,NA,NA,0.07123422622680664,6.184364080429077,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.673372745513916,0.014102458953857422,NA,NA,NA,0.06478357315063477,6.552982807159424,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.12459921836853,0.015036821365356445,0.003914594650268555,0.20261025428771973,0.6555416584014893,0.877103328704834,8.040528774261475,1,126,ROR,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",1,0.0754694938659668
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.12459921836853,0.015036821365356445,0.003914594650268555,0.20261025428771973,0.6555416584014893,0.877103328704834,8.040528774261475,2,134,ROR,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",1,0.12192392349243164
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.087599992752075,0.016141653060913086,0.0015583038330078125,2.9926564693450928,0.4752321243286133,3.485588550567627,8.752832651138306,1,49,SCD,survived,,,64,2.9909396171569824
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.557244300842285,0.010276317596435547,0.0017902851104736328,0.04524970054626465,0.23261523246765137,0.2899315357208252,6.193100690841675,1,110,SCI,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 41, in test_deutsch_jozsa\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 111, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 75, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,0.0428929328918457
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.162402153015137,0.012562990188598633,NA,NA,NA,0.06375861167907715,7.080212593078613,NA,NA,SIR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,5.067379713058472,0.01609206199645996,0.012123823165893555,1.3092267513275146,5.0670881271362305,6.404530763626099,14.834564924240112,1,84,QGD,killed,test_deutsch_jozsa_00004___0000____basic___False___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",4,0.18998074531555176
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,5.067379713058472,0.01609206199645996,0.012123823165893555,1.3092267513275146,5.0670881271362305,6.404530763626099,14.834564924240112,2,85,QGD,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.5221295356750488
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,5.067379713058472,0.01609206199645996,0.012123823165893555,1.3092267513275146,5.0670881271362305,6.404530763626099,14.834564924240112,3,86,QGD,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.4529085159301758
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,5.067379713058472,0.01609206199645996,0.012123823165893555,1.3092267513275146,5.0670881271362305,6.404530763626099,14.834564924240112,4,97,QGD,killed,test_deutsch_jozsa_00004___0000____basic___False___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",4,0.13277673721313477
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,1,84,QGI,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.2072296142578125
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,2,84,QGI,survived,,,64,5.735766410827637
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,3,84,QGI,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",1,0.18127799034118652
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,4,84,QGI,survived,,,64,5.976123332977295
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,5,84,QGI,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",1,0.12294602394104004
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,6,84,QGI,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",1,0.0803840160369873
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,7,84,QGI,survived,,,64,5.875591278076172
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,8,84,QGI,survived,,,64,4.678771495819092
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,9,84,QGI,survived,,,64,6.005249977111816
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,10,84,QGI,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.18160057067871094
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,11,84,QGI,survived,,,64,5.508293628692627
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,12,85,QGI,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.7973549365997314
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,13,85,QGI,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.8068675994873047
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,14,85,QGI,survived,,,64,4.43992805480957
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,15,85,QGI,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.6609046459197998
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,16,85,QGI,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.6897003650665283
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,17,85,QGI,survived,,,64,5.342509031295776
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,18,85,QGI,survived,,,64,4.941898345947266
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,19,85,QGI,survived,,,64,4.621126890182495
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,20,85,QGI,survived,,,64,5.134766101837158
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,21,85,QGI,survived,,,64,4.987401962280273
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,22,85,QGI,survived,,,64,4.648362159729004
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,23,86,QGI,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.9101288318634033
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,24,86,QGI,survived,,,64,3.8130037784576416
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,25,86,QGI,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.5677759647369385
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,26,86,QGI,survived,,,64,4.029716491699219
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,27,86,QGI,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.7494988441467285
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,28,86,QGI,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.4781193733215332
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,29,86,QGI,survived,,,64,5.330288887023926
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,30,86,QGI,survived,,,64,5.506909608840942
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,31,86,QGI,survived,,,64,3.8958489894866943
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,32,86,QGI,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.6010932922363281
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,33,86,QGI,survived,,,64,4.441979169845581
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,34,97,QGI,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.11189842224121094
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,35,97,QGI,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",1,0.13279008865356445
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,36,97,QGI,survived,,,64,3.496675729751587
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,37,97,QGI,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.21329283714294434
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,38,97,QGI,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",1,0.08392834663391113
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,39,97,QGI,survived,,,64,5.793977975845337
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,40,97,QGI,survived,,,64,6.981847524642944
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,41,97,QGI,survived,,,64,5.23123025894165
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,42,97,QGI,survived,,,64,5.479965925216675
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,43,97,QGI,survived,,,64,5.372036457061768
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,4.390821933746338,0.01398921012878418,0.12272214889526367,140.4178328514099,140.5394310951233,281.09397530555725,288.8977997303009,44,97,QGI,survived,,,64,5.44516658782959
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,1,84,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.12513089179992676
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,2,84,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.10325956344604492
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,3,84,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.15915822982788086
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,4,84,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.12818002700805664
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,5,84,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.10098838806152344
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,6,84,QGR,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",1,0.11323666572570801
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,7,84,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.11365294456481934
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,8,84,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.10599303245544434
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,9,84,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.1301133632659912
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,10,84,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.10862517356872559
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,11,85,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.5261735916137695
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,12,85,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.5475757122039795
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,13,85,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.46898531913757324
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,14,85,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.9143056869506836
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,15,85,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.5920398235321045
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,16,85,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.5099837779998779
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,17,85,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.5269818305969238
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,18,85,QGR,survived,,,64,3.8564910888671875
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,19,85,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.46654295921325684
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,20,85,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.5721299648284912
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,21,86,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.526888370513916
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,22,86,QGR,killed,test_deutsch_jozsa_00018___0101____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",18,0.49774813652038574
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,23,86,QGR,killed,test_deutsch_jozsa_00018___0101____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",18,0.5578696727752686
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,24,86,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.47716760635375977
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,25,86,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.49683547019958496
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,26,86,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.5094389915466309
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,27,86,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.45212841033935547
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,28,86,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.5127387046813965
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,29,86,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.5441741943359375
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,30,86,QGR,killed,test_deutsch_jozsa_00017___0101____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",17,0.4712376594543457
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,31,97,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.1077260971069336
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,32,97,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.11798715591430664
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,33,97,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.15189146995544434
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,34,97,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.12248587608337402
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,35,97,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.13114285469055176
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,36,97,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.1362624168395996
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,37,97,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.12110114097595215
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,38,97,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.16051220893859863
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,39,97,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.14601564407348633
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.8455934524536133,0.011414051055908203,0.0994718074798584,16.646865367889404,111.22509527206421,127.98284649848938,134.76547193527222,40,97,QGR,killed,test_deutsch_jozsa_00002___0000____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 46, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'constant')\nAssertionError: False is not true\n",2,0.12493395805358887
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.56868577003479,0.011037588119506836,0.002678394317626953,0.5011553764343262,0.1819307804107666,0.6968021392822266,6.815744161605835,1,106,QMD,killed,test_deutsch_jozsa_00018___0101____basic___True___qasm_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 44, in test_deutsch_jozsa\n    self.assertTrue(result['result'] == 'balanced')\nAssertionError: False is not true\n",18,0.4986724853515625
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.9849886894226074,0.010605096817016602,0.0077571868896484375,0.2345106601715088,9.282107830047607,9.534980773925781,16.49862766265869,1,84,QMI,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 41, in test_deutsch_jozsa\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 112, in _run\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 84, in construct_circuit\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 56, in measure\n    return self.append(Measure(), [qubit], [cbit])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 39, in broadcast_arguments\n    raise CircuitError('register size error')\nqiskit.circuit.exceptions.CircuitError: 'register size error'\n",1,0.03984379768371582
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.9849886894226074,0.010605096817016602,0.0077571868896484375,0.2345106601715088,9.282107830047607,9.534980773925781,16.49862766265869,2,85,QMI,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 41, in test_deutsch_jozsa\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 117, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/subsystem.py"", line 34, in get_subsystem_density_matrix\n    rho_sub = partial_trace(rho, trace_systems).data\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 46, in partial_trace\n    traced_shape = state._op_shape.remove(qargs=qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/operators/op_shape.py"", line 337, in remove\n    raise QiskitError(""Max qargs_l is larger than number of left qargs"")\nqiskit.exceptions.QiskitError: 'Max qargs_l is larger than number of left qargs'\n",1,0.06515908241271973
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.9849886894226074,0.010605096817016602,0.0077571868896484375,0.2345106601715088,9.282107830047607,9.534980773925781,16.49862766265869,3,86,QMI,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 41, in test_deutsch_jozsa\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 117, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/subsystem.py"", line 34, in get_subsystem_density_matrix\n    rho_sub = partial_trace(rho, trace_systems).data\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 46, in partial_trace\n    traced_shape = state._op_shape.remove(qargs=qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/operators/op_shape.py"", line 337, in remove\n    raise QiskitError(""Max qargs_l is larger than number of left qargs"")\nqiskit.exceptions.QiskitError: 'Max qargs_l is larger than number of left qargs'\n",1,0.07329273223876953
qiskit.aqua.algorithms.education.deutsch_jozsa,test.aqua.test_deutsch_jozsa,64,3.9849886894226074,0.010605096817016602,0.0077571868896484375,0.2345106601715088,9.282107830047607,9.534980773925781,16.49862766265869,4,97,QMI,killed,test_deutsch_jozsa_00001___0000____basic___True___statevector_simulator__ (test.aqua.test_deutsch_jozsa.TestDeutschJozsa),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_deutsch_jozsa.py"", line 41, in test_deutsch_jozsa\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 112, in _run\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 97, in construct_circuit\n  File ""qiskit.aqua.algorithms.education.deutsch_jozsa"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 56, in measure\n    return self.append(Measure(), [qubit], [cbit])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 39, in broadcast_arguments\n    raise CircuitError('register size error')\nqiskit.circuit.exceptions.CircuitError: 'register size error'\n",1,0.04720592498779297
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,51.88044500350952,0.012912750244140625,NA,NA,NA,0.06815719604492188,54.41020321846008,NA,NA,AOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,21.804964303970337,0.007193803787231445,NA,NA,NA,0.039551496505737305,23.507757902145386,NA,NA,AOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,49.40283799171448,0.014861583709716797,NA,NA,NA,0.0719003677368164,52.78748965263367,NA,NA,ASR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,35.34507083892822,0.013068199157714844,NA,NA,NA,0.058737754821777344,38.361388206481934,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,51.31254744529724,0.011658430099487305,NA,NA,NA,0.06053805351257324,55.113962173461914,NA,NA,COD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,43.37002611160278,0.009991884231567383,0.0025222301483154297,216.961261510849,0.17278504371643066,217.1465606689453,263.7955231666565,1,87,COI,timeout,,,,216.9593493938446
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,1,47,CRP,survived,,,2,38.387081146240234
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,2,48,CRP,survived,,,2,40.85914134979248
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,3,49,CRP,killed,test_eoh_1_initial_state (test.aqua.test_eoh.TestEOH),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_eoh.py"", line 60, in test_eoh\n    eoh = EOH(qubit_op, state_in, evo_op, evo_time=evo_time, num_time_slices=num_time_slices)\n  File ""qiskit.aqua.algorithms.education.eoh"", line 67, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: expansion_mode must be one of '{'suzuki', 'trotter'}', was 'mutpy'.\n",1,0.04420065879821777
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,4,49,CRP,killed,test_eoh_1_initial_state (test.aqua.test_eoh.TestEOH),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_eoh.py"", line 60, in test_eoh\n    eoh = EOH(qubit_op, state_in, evo_op, evo_time=evo_time, num_time_slices=num_time_slices)\n  File ""qiskit.aqua.algorithms.education.eoh"", line 67, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: expansion_mode must be one of '{'suzuki', 'trotter'}', was ''.\n",1,0.06236767768859863
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,5,50,CRP,survived,,,2,37.055673122406006
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,6,65,CRP,survived,,,2,38.639493227005005
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,7,65,CRP,survived,,,2,43.56612491607666
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,8,65,CRP,survived,,,2,43.90926003456116
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,9,66,CRP,survived,,,2,42.84174036979675
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,10,66,CRP,survived,,,2,44.26442837715149
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,11,66,CRP,survived,,,2,61.25737142562866
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,12,67,CRP,survived,,,2,45.81672167778015
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,13,67,CRP,survived,,,2,41.17132520675659
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,14,67,CRP,killed,test_eoh_1_initial_state (test.aqua.test_eoh.TestEOH),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_eoh.py"", line 60, in test_eoh\n    eoh = EOH(qubit_op, state_in, evo_op, evo_time=evo_time, num_time_slices=num_time_slices)\n  File ""qiskit.aqua.algorithms.education.eoh"", line 67, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: expansion_mode must be one of '{'suzuki', 'mutpy'}', was 'trotter'.\n",1,0.04225587844848633
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,15,67,CRP,killed,test_eoh_1_initial_state (test.aqua.test_eoh.TestEOH),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_eoh.py"", line 60, in test_eoh\n    eoh = EOH(qubit_op, state_in, evo_op, evo_time=evo_time, num_time_slices=num_time_slices)\n  File ""qiskit.aqua.algorithms.education.eoh"", line 67, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: expansion_mode must be one of '{'', 'suzuki'}', was 'trotter'.\n",1,0.062151432037353516
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,16,67,CRP,survived,,,2,39.20559906959534
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,17,67,CRP,survived,,,2,41.41549468040466
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,18,68,CRP,survived,,,2,37.61521911621094
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,19,68,CRP,survived,,,2,37.78403091430664
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,20,68,CRP,killed,test_eoh_1_initial_state (test.aqua.test_eoh.TestEOH),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_eoh.py"", line 60, in test_eoh\n    eoh = EOH(qubit_op, state_in, evo_op, evo_time=evo_time, num_time_slices=num_time_slices)\n  File ""qiskit.aqua.algorithms.education.eoh"", line 68, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 43, in validate_min\n    raise ValueError('{} must have value >= {}, was {}'.format(name, minimum, value))\nValueError: expansion_order must have value >= 2, was 1\n",1,0.05283045768737793
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,21,86,CRP,killed,test_eoh_1_initial_state (test.aqua.test_eoh.TestEOH),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_eoh.py"", line 66, in test_eoh\n    ret = eoh.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.eoh"", line 106, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/legacy/weighted_pauli_operator.py"", line 665, in construct_evaluation_circuit\n    raise AquaError(""Either provide the quantum register (qr) explicitly or use""\nqiskit.aqua.aqua_error.AquaError: 'Either provide the quantum register (qr) explicitly or use `q` as the name of the quantum register in the input circuit.'\n",1,2.2681846618652344
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,22,86,CRP,killed,test_eoh_1_initial_state (test.aqua.test_eoh.TestEOH),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_eoh.py"", line 66, in test_eoh\n    ret = eoh.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.eoh"", line 104, in _run\n  File ""qiskit.aqua.algorithms.education.eoh"", line 86, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",1,1.756941556930542
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,23,91,CRP,killed,test_eoh_1_initial_state (test.aqua.test_eoh.TestEOH),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_eoh.py"", line 66, in test_eoh\n    ret = eoh.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.eoh"", line 104, in _run\n  File ""qiskit.aqua.algorithms.education.eoh"", line 91, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/initial_states/custom.py"", line 163, in construct_circuit\n    raise AquaError('Mode should be either ""vector"" or ""circuit""')\nqiskit.aqua.aqua_error.AquaError: 'Mode should be either ""vector"" or ""circuit""'\n",1,2.183114528656006
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,24,91,CRP,killed,test_eoh_1_initial_state (test.aqua.test_eoh.TestEOH),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_eoh.py"", line 66, in test_eoh\n    ret = eoh.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.eoh"", line 104, in _run\n  File ""qiskit.aqua.algorithms.education.eoh"", line 91, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/initial_states/custom.py"", line 163, in construct_circuit\n    raise AquaError('Mode should be either ""vector"" or ""circuit""')\nqiskit.aqua.aqua_error.AquaError: 'Mode should be either ""vector"" or ""circuit""'\n",1,1.747626781463623
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,25,108,CRP,survived,,,2,41.02701282501221
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,26,108,CRP,survived,,,2,39.981066942214966
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,27,108,CRP,survived,,,2,41.62596917152405
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,34.38947081565857,0.008294343948364258,0.05809187889099121,810.790952205658,3.546767473220825,814.4041059017181,850.9245436191559,28,108,CRP,survived,,,2,46.10015344619751
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,35.41243529319763,0.011148929595947266,NA,NA,NA,0.07094311714172363,38.36050367355347,NA,NA,DDL,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,36.3910026550293,0.00881195068359375,NA,NA,NA,0.0464930534362793,39.0396032333374,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,32.247984170913696,0.008631467819213867,NA,NA,NA,0.05096125602722168,34.85039210319519,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,35.57620811462402,0.009516000747680664,NA,NA,NA,0.05224967002868652,38.36149525642395,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,30.760661602020264,0.008505105972290039,0.0019421577453613281,307.83770656585693,0.20045042037963867,308.0486042499542,341.32819843292236,1,44,IOD,timeout,,,,153.91719460487366
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,30.760661602020264,0.008505105972290039,0.0019421577453613281,307.83770656585693,0.20045042037963867,308.0486042499542,341.32819843292236,2,103,IOD,timeout,,,,153.9183852672577
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,31.053316354751587,0.010091781616210938,0.006025552749633789,30.860219478607178,0.15500521659851074,31.031342029571533,64.45712900161743,1,44,IOP,survived,,,2,30.8578884601593
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,33.036107540130615,0.008858203887939453,NA,NA,NA,0.04292440414428711,35.177579164505005,NA,NA,LCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,36.74115061759949,0.009532928466796875,NA,NA,NA,0.047391414642333984,39.84094500541687,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,35.94293189048767,0.009642839431762695,NA,NA,NA,0.04739236831665039,38.75630593299866,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,41.46527147293091,0.009690523147583008,NA,NA,NA,0.05698108673095703,44.492305517196655,NA,NA,ROR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,27.668896436691284,0.010563135147094727,0.0013129711151123047,29.219990253448486,0.16037464141845703,29.39224100112915,59.264017820358276,1,44,SCD,survived,,,2,29.218898057937622
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,38.097697019577026,0.00826120376586914,0.0014965534210205078,1.4755034446716309,0.1587660312652588,1.6440272331237793,42.55599927902222,1,103,SCI,killed,test_eoh_1_initial_state (test.aqua.test_eoh.TestEOH),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_eoh.py"", line 66, in test_eoh\n    ret = eoh.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.eoh"", line 104, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 75, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,1.474271535873413
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,37.96259880065918,0.011633872985839844,NA,NA,NA,0.07127952575683594,40.9486448764801,NA,NA,SIR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,40.29437613487244,0.00970315933227539,NA,NA,NA,3.059044361114502,46.70316553115845,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,43.96123647689819,0.01534128189086914,NA,NA,NA,11.124256134033203,58.46244764328003,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,35.26854991912842,0.008743524551391602,NA,NA,NA,10.311874151229858,48.59133958816528,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,37.00921630859375,0.008386373519897461,NA,NA,NA,0.0447087287902832,39.8534197807312,NA,NA,QMD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.eoh,test.aqua.test_eoh,2,38.26181888580322,0.011845827102661133,NA,NA,NA,4.488967657089233,45.93003535270691,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,22.26903462409973,0.017040252685546875,0.00896143913269043,15.180294513702393,0.6138215065002441,15.820117712020874,41.35481309890747,1,98,AOD,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '011' != '110'\n- 011\n? -\n+ 110\n?   +\n\n",17,7.011476278305054
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,22.26903462409973,0.017040252685546875,0.00896143913269043,15.180294513702393,0.6138215065002441,15.820117712020874,41.35481309890747,2,125,AOD,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '011' != '110'\n- 011\n? -\n+ 110\n?   +\n\n",17,8.162895441055298
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,19.62813639640808,0.014966964721679688,0.05707859992980957,698.4097521305084,3.5753488540649414,702.0571465492249,724.370359659195,1,98,AOR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '011' != '110'\n- 011\n? -\n+ 110\n?   +\n\n",17,7.512512683868408
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,19.62813639640808,0.014966964721679688,0.05707859992980957,698.4097521305084,3.5753488540649414,702.0571465492249,724.370359659195,2,99,AOR,timeout,,,,98.25905871391296
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,19.62813639640808,0.014966964721679688,0.05707859992980957,698.4097521305084,3.5753488540649414,702.0571465492249,724.370359659195,3,99,AOR,timeout,,,,98.26396083831787
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,19.62813639640808,0.014966964721679688,0.05707859992980957,698.4097521305084,3.5753488540649414,702.0571465492249,724.370359659195,4,99,AOR,timeout,,,,98.18653750419617
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,19.62813639640808,0.014966964721679688,0.05707859992980957,698.4097521305084,3.5753488540649414,702.0571465492249,724.370359659195,5,110,AOR,survived,,,48,15.654533624649048
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,19.62813639640808,0.014966964721679688,0.05707859992980957,698.4097521305084,3.5753488540649414,702.0571465492249,724.370359659195,6,114,AOR,survived,,,48,16.26779532432556
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,19.62813639640808,0.014966964721679688,0.05707859992980957,698.4097521305084,3.5753488540649414,702.0571465492249,724.370359659195,7,114,AOR,survived,,,48,17.713287591934204
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,19.62813639640808,0.014966964721679688,0.05707859992980957,698.4097521305084,3.5753488540649414,702.0571465492249,724.370359659195,8,114,AOR,survived,,,48,17.270225048065186
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,19.62813639640808,0.014966964721679688,0.05707859992980957,698.4097521305084,3.5753488540649414,702.0571465492249,724.370359659195,9,114,AOR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,6.322697162628174
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,19.62813639640808,0.014966964721679688,0.05707859992980957,698.4097521305084,3.5753488540649414,702.0571465492249,724.370359659195,10,119,AOR,timeout,,,,98.19949245452881
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,19.62813639640808,0.014966964721679688,0.05707859992980957,698.4097521305084,3.5753488540649414,702.0571465492249,724.370359659195,11,119,AOR,timeout,,,,98.26294016838074
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,19.62813639640808,0.014966964721679688,0.05707859992980957,698.4097521305084,3.5753488540649414,702.0571465492249,724.370359659195,12,119,AOR,timeout,,,,98.25521779060364
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,19.62813639640808,0.014966964721679688,0.05707859992980957,698.4097521305084,3.5753488540649414,702.0571465492249,724.370359659195,13,125,AOR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '011' != '110'\n- 011\n? -\n+ 110\n?   +\n\n",17,7.319894790649414
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,19.62813639640808,0.014966964721679688,0.05707859992980957,698.4097521305084,3.5753488540649414,702.0571465492249,724.370359659195,14,139,AOR,survived,,,48,20.874019861221313
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,19.257789134979248,0.02090740203857422,NA,NA,NA,0.11540412902832031,23.68570113182068,NA,NA,ASR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,16.013760566711426,0.013768672943115234,NA,NA,NA,0.08454155921936035,18.840383768081665,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,16.209413528442383,0.01525259017944336,0.004237174987792969,5.702534198760986,0.2708587646484375,5.99288272857666,27.141017198562622,1,141,COD,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.699319362640381
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,17.066364765167236,0.015273094177246094,0.015491724014282227,1.479151964187622,0.9994287490844727,2.509345531463623,23.48795175552368,1,73,COI,killed,test_simon_00001____00011110____01100110____10101010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 61, in test_simon\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.simon"", line 130, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 305, in execute\n    circuits = self.transpile(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 264, in transpile\n    **self._compile_config)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 240, in transpile\n    optimization_level, callback, output_name)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 431, in _parse_transpile_args\n    output_name = _parse_output_name(output_name, circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 739, in _parse_output_name\n    return [circuit.name for circuit in circuits]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 739, in <listcomp>\n    return [circuit.name for circuit in circuits]\nAttributeError: 'NoneType' object has no attribute 'name'\n",1,0.07182669639587402
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,17.066364765167236,0.015273094177246094,0.015491724014282227,1.479151964187622,0.9994287490844727,2.509345531463623,23.48795175552368,2,89,COI,killed,test_simon_00001____00011110____01100110____10101010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 61, in test_simon\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.simon"", line 134, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/subsystem.py"", line 34, in get_subsystem_density_matrix\n    rho_sub = partial_trace(rho, trace_systems).data\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 46, in partial_trace\n    traced_shape = state._op_shape.remove(qargs=qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/operators/op_shape.py"", line 337, in remove\n    raise QiskitError(""Max qargs_l is larger than number of left qargs"")\nqiskit.exceptions.QiskitError: 'Max qargs_l is larger than number of left qargs'\n",1,0.31202125549316406
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,17.066364765167236,0.015273094177246094,0.015491724014282227,1.479151964187622,0.9994287490844727,2.509345531463623,23.48795175552368,3,122,COI,killed,test_simon_00001____00011110____01100110____10101010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 61, in test_simon\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.simon"", line 147, in _run\n  File ""qiskit.aqua.algorithms.education.simon"", line 124, in _interpret_measurement\nIndexError: list index out of range\n",1,0.2334599494934082
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,17.066364765167236,0.015273094177246094,0.015491724014282227,1.479151964187622,0.9994287490844727,2.509345531463623,23.48795175552368,4,128,COI,killed,test_simon_00002____00011110____01100110____10101010_____basic___True___qasm_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 305, in get_statevector\n    return postprocess.format_statevector(self.data(experiment)['statevector'],\nKeyError: 'statevector'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 61, in test_simon\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.simon"", line 131, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 308, in get_statevector\n    raise QiskitError(f'No statevector for experiment ""{repr(experiment)}""') from ex\nqiskit.exceptions.QiskitError: 'No statevector for experiment ""<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f052e1a6eb8>""'\n",2,0.8493914604187012
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,1,90,CRP,survived,,,48,17.70754337310791
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,2,90,CRP,killed,test_simon_00002____00011110____01100110____10101010_____basic___True___qasm_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 61, in test_simon\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.simon"", line 144, in _run\n  File ""qiskit.aqua.algorithms.education.simon"", line 90, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",2,0.24219918251037598
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,3,98,CRP,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.474363327026367
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,4,99,CRP,survived,,,48,17.47719693183899
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,5,99,CRP,survived,,,48,14.84579062461853
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,6,101,CRP,killed,test_simon_00001____00011110____01100110____10101010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 61, in test_simon\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.simon"", line 147, in _run\n  File ""qiskit.aqua.algorithms.education.simon"", line 101, in _interpret_measurement\n  File ""qiskit.aqua.algorithms.education.simon"", line 101, in <lambda>\nIndexError: tuple index out of range\n",1,0.4289846420288086
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,7,110,CRP,survived,,,48,15.241043090820312
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,8,110,CRP,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '011' != '110'\n- 011\n? -\n+ 110\n?   +\n\n",17,4.84718132019043
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,9,115,CRP,killed,test_simon_00001____00011110____01100110____10101010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 61, in test_simon\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.simon"", line 147, in _run\n  File ""qiskit.aqua.algorithms.education.simon"", line 115, in _interpret_measurement\nAttributeError: 'tuple' object has no attribute 'applyfunc'\n",1,0.24992108345031738
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,10,115,CRP,survived,,,48,16.29594135284424
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,11,119,CRP,killed,test_simon_00001____00011110____01100110____10101010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '111' != '000'\n- 111\n+ 000\n\n",1,0.3275642395019531
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,12,121,CRP,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.19332218170166
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,13,122,CRP,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,7.01642370223999
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,14,123,CRP,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '100' != '110'\n- 100\n?   -\n+ 110\n? +\n\n",17,5.293273210525513
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,15,123,CRP,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '1yptum0' != '110'\n- 1yptum0\n+ 110\n\n",17,5.861590385437012
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,16,123,CRP,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '10' != '110'\n- 10\n+ 110\n? +\n\n",17,6.462105989456177
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,17,124,CRP,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 61, in test_simon\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.simon"", line 147, in _run\n  File ""qiskit.aqua.algorithms.education.simon"", line 124, in _interpret_measurement\nIndexError: list index out of range\n",17,6.522390842437744
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,18,124,CRP,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: 'yptum10' != '110'\n- yptum10\n+ 110\n\n",17,5.02540397644043
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,19,124,CRP,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '10' != '110'\n- 10\n+ 110\n? +\n\n",17,5.810412406921387
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,20,125,CRP,killed,test_simon_00001____00011110____01100110____10101010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '0yptum0yptum0' != '000'\n- 0yptum0yptum0\n+ 000\n\n",1,0.38198161125183105
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,21,125,CRP,killed,test_simon_00001____00011110____01100110____10101010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '00' != '000'\n- 00\n+ 000\n? +\n\n",1,0.371354341506958
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,22,139,CRP,survived,,,48,16.381239414215088
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,23,141,CRP,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,6.715702533721924
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,24,147,CRP,killed,test_simon_00001____00011110____01100110____10101010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nKeyError: 'result'\n",1,0.29805827140808105
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,18.344027280807495,0.015235424041748047,0.10796236991882324,165.17712664604187,6.780774354934692,172.08109879493713,193.6642780303955,25,147,CRP,killed,test_simon_00001____00011110____01100110____10101010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nKeyError: 'result'\n",1,0.6327388286590576
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,14.001818895339966,0.015060186386108398,NA,NA,NA,0.10512447357177734,16.870747327804565,NA,NA,DDL,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,14.266202688217163,0.016722917556762695,NA,NA,NA,0.07957124710083008,18.65781593322754,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,12.752899408340454,0.018824338912963867,NA,NA,NA,0.08597588539123535,15.326990842819214,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,14.752976655960083,0.015867948532104492,NA,NA,NA,0.07941722869873047,17.777447938919067,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,11.656151294708252,0.012239933013916016,0.0035359859466552734,116.70827412605286,0.3855607509613037,117.10961079597473,130.93639993667603,1,46,IOD,timeout,,,,58.35349249839783
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,11.656151294708252,0.012239933013916016,0.0035359859466552734,116.70827412605286,0.3855607509613037,117.10961079597473,130.93639993667603,2,127,IOD,timeout,,,,58.351728200912476
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,12.439071893692017,0.013248205184936523,0.002020120620727539,12.39423656463623,0.2588036060333252,12.66830849647522,27.425100326538086,1,46,IOP,survived,,,48,12.39272165298462
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,12.897412061691284,0.018370628356933594,NA,NA,NA,0.08147144317626953,15.36974549293518,NA,NA,LCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,13.39290452003479,0.017963647842407227,NA,NA,NA,0.08165216445922852,16.032049894332886,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,14.042289972305298,0.018730640411376953,NA,NA,NA,0.09912610054016113,17.1343777179718,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.043022632598877,0.01506352424621582,0.014095306396484375,16.198025941848755,1.293658971786499,17.520843744277954,36.130350828170776,1,99,ROR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.057347536087036
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.043022632598877,0.01506352424621582,0.014095306396484375,16.198025941848755,1.293658971786499,17.520843744277954,36.130350828170776,2,110,ROR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '011' != '110'\n- 011\n? -\n+ 110\n?   +\n\n",17,6.135387897491455
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.043022632598877,0.01506352424621582,0.014095306396484375,16.198025941848755,1.293658971786499,17.520843744277954,36.130350828170776,3,121,ROR,killed,test_simon_00001____00011110____01100110____10101010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '111' != '000'\n- 111\n+ 000\n\n",1,0.24820518493652344
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.043022632598877,0.01506352424621582,0.014095306396484375,16.198025941848755,1.293658971786499,17.520843744277954,36.130350828170776,4,122,ROR,killed,test_simon_00001____00011110____01100110____10101010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 61, in test_simon\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.simon"", line 147, in _run\n  File ""qiskit.aqua.algorithms.education.simon"", line 124, in _interpret_measurement\nIndexError: list index out of range\n",1,0.19481778144836426
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.043022632598877,0.01506352424621582,0.014095306396484375,16.198025941848755,1.293658971786499,17.520843744277954,36.130350828170776,5,141,ROR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,4.547329902648926
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,11.773511409759521,0.013405084609985352,0.0023415088653564453,11.749393939971924,0.24433064460754395,12.00947117805481,26.299643516540527,1,46,SCD,survived,,,48,11.747707843780518
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.528402328491211,0.016778945922851562,0.0029251575469970703,0.05996346473693848,0.3210163116455078,0.4006838798522949,18.903341054916382,1,127,SCI,killed,test_simon_00001____00011110____01100110____10101010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 61, in test_simon\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.simon"", line 128, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 75, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,0.05771946907043457
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,13.9512939453125,0.014435291290283203,0.0045146942138671875,9.63977837562561,0.4514505863189697,10.11017894744873,26.857993841171265,1,98,SIR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '011' != '110'\n- 011\n? -\n+ 110\n?   +\n\n",17,4.792794466018677
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,13.9512939453125,0.014435291290283203,0.0045146942138671875,9.63977837562561,0.4514505863189697,10.11017894744873,26.857993841171265,2,125,SIR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '011' != '110'\n- 011\n? -\n+ 110\n?   +\n\n",17,4.8432042598724365
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,17.411088943481445,0.018784046173095703,0.0048999786376953125,11.611109972000122,3.9661476612091064,15.60094165802002,35.87723779678345,1,80,QGD,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.542071580886841
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,17.411088943481445,0.018784046173095703,0.0048999786376953125,11.611109972000122,3.9661476612091064,15.60094165802002,35.87723779678345,2,86,QGD,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,6.064409255981445
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,1,80,QGI,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,6.187422275543213
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,2,80,QGI,survived,,,48,14.664276838302612
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,3,80,QGI,survived,,,48,15.293768167495728
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,4,80,QGI,survived,,,48,17.966747999191284
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,5,80,QGI,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,7.121670722961426
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,6,80,QGI,survived,,,48,14.516024351119995
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,7,80,QGI,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.43418288230896
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,8,80,QGI,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.7655909061431885
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,9,80,QGI,survived,,,48,16.93837881088257
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,10,80,QGI,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,6.387647390365601
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,11,80,QGI,survived,,,48,15.757311344146729
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,12,86,QGI,survived,,,48,16.517809629440308
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,13,86,QGI,survived,,,48,16.80757975578308
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,14,86,QGI,survived,,,48,16.77140235900879
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,15,86,QGI,survived,,,48,17.643048524856567
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,16,86,QGI,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,6.636934757232666
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,17,86,QGI,survived,,,48,20.170810222625732
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,18,86,QGI,survived,,,48,19.30630373954773
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,19,86,QGI,survived,,,48,17.78509783744812
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,20,86,QGI,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,6.183526039123535
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,21,86,QGI,survived,,,48,16.60402774810791
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.16770052909851,0.016705036163330078,0.07319808006286621,297.7796702384949,148.765118598938,446.63469195365906,465.02623224258423,22,86,QGI,survived,,,48,17.261048316955566
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,1,80,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.750634431838989
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,2,80,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,4.738819360733032
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,3,80,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.114560127258301
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,4,80,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.280433177947998
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,5,80,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,4.729647159576416
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,6,80,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.824960947036743
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,7,80,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.831974983215332
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,8,80,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.475638151168823
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,9,80,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.630345106124878
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,10,80,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,7.670551776885986
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,11,86,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,6.839565277099609
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,12,86,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.9102020263671875
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,13,86,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,6.959398031234741
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,14,86,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,6.3508620262146
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,15,86,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.141363620758057
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,16,86,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.014299631118774
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,17,86,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.9798760414123535
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,18,86,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.5945844650268555
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,19,86,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.654892921447754
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,15.613561630249023,0.016497135162353516,0.06510448455810547,115.49936556816101,121.4606990814209,237.04166626930237,255.75075149536133,20,86,QGR,killed,test_simon_00017____10010110____01010101____10000010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",17,5.9584314823150635
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,14.001116514205933,0.01540517807006836,0.001978635787963867,4.649917125701904,0.2563908100128174,4.923691749572754,21.81572651863098,1,92,QMD,killed,test_simon_00018____10010110____01010101____10000010_____basic___True___qasm_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 63, in test_simon\n    self.assertEqual(result['result'], hidden)\nAssertionError: '000' != '110'\n- 000\n+ 110\n\n",18,4.648292541503906
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,14.634122371673584,0.017200231552124023,0.005602598190307617,0.17121553421020508,10.49913477897644,10.693153142929077,28.515313625335693,1,80,QMI,killed,test_simon_00001____00011110____01100110____10101010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 61, in test_simon\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.simon"", line 129, in _run\n  File ""qiskit.aqua.algorithms.education.simon"", line 80, in construct_circuit\n  File ""qiskit.aqua.algorithms.education.simon"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 56, in measure\n    return self.append(Measure(), [qubit], [cbit])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 39, in broadcast_arguments\n    raise CircuitError('register size error')\nqiskit.circuit.exceptions.CircuitError: 'register size error'\n",1,0.08162140846252441
qiskit.aqua.algorithms.education.simon,test.aqua.test_simon,48,14.634122371673584,0.017200231552124023,0.005602598190307617,0.17121553421020508,10.49913477897644,10.693153142929077,28.515313625335693,2,86,QMI,killed,test_simon_00001____00011110____01100110____10101010_____basic___True___statevector_simulator__ (test.aqua.test_simon.TestSimon),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_simon.py"", line 61, in test_simon\n    result = algorithm.run(quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.education.simon"", line 129, in _run\n  File ""qiskit.aqua.algorithms.education.simon"", line 86, in construct_circuit\n  File ""qiskit.aqua.algorithms.education.simon"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 56, in measure\n    return self.append(Measure(), [qubit], [cbit])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 39, in broadcast_arguments\n    raise CircuitError('register size error')\nqiskit.circuit.exceptions.CircuitError: 'register size error'\n",1,0.08497190475463867
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08100318908691406,0.04932570457458496,NA,NA,NA,0.20070338249206543,2.8046178817749023,NA,NA,AOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.19477629661560059,0.05254626274108887,0.08051776885986328,6.317251920700073,8.484846353530884,14.93516230583191,18.98845624923706,1,113,AOR,survived,,,5,0.2313694953918457
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.19477629661560059,0.05254626274108887,0.08051776885986328,6.317251920700073,8.484846353530884,14.93516230583191,18.98845624923706,2,113,AOR,survived,,,5,0.14312195777893066
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.19477629661560059,0.05254626274108887,0.08051776885986328,6.317251920700073,8.484846353530884,14.93516230583191,18.98845624923706,3,113,AOR,survived,,,5,0.21727347373962402
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.19477629661560059,0.05254626274108887,0.08051776885986328,6.317251920700073,8.484846353530884,14.93516230583191,18.98845624923706,4,152,AOR,survived,,,5,0.17549824714660645
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.19477629661560059,0.05254626274108887,0.08051776885986328,6.317251920700073,8.484846353530884,14.93516230583191,18.98845624923706,5,153,AOR,survived,,,5,0.1786658763885498
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.19477629661560059,0.05254626274108887,0.08051776885986328,6.317251920700073,8.484846353530884,14.93516230583191,18.98845624923706,6,171,AOR,survived,,,5,0.16426396369934082
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.19477629661560059,0.05254626274108887,0.08051776885986328,6.317251920700073,8.484846353530884,14.93516230583191,18.98845624923706,7,171,AOR,timeout,,,,5.026613473892212
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.19477629661560059,0.05254626274108887,0.08051776885986328,6.317251920700073,8.484846353530884,14.93516230583191,18.98845624923706,8,251,AOR,survived,,,5,0.15157604217529297
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.11098074913024902,0.06070852279663086,0.0615081787109375,15.566556453704834,4.687326192855835,20.376099348068237,24.76653552055359,1,276,ASR,survived,,,5,0.23626446723937988
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.11098074913024902,0.06070852279663086,0.0615081787109375,15.566556453704834,4.687326192855835,20.376099348068237,24.76653552055359,2,277,ASR,timeout,,,,5.044446229934692
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.11098074913024902,0.06070852279663086,0.0615081787109375,15.566556453704834,4.687326192855835,20.376099348068237,24.76653552055359,3,278,ASR,timeout,,,,5.028977394104004
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.11098074913024902,0.06070852279663086,0.0615081787109375,15.566556453704834,4.687326192855835,20.376099348068237,24.76653552055359,4,279,ASR,timeout,,,,5.060206890106201
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.11098074913024902,0.06070852279663086,0.0615081787109375,15.566556453704834,4.687326192855835,20.376099348068237,24.76653552055359,5,281,ASR,survived,,,5,0.1788322925567627
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08782243728637695,0.044187307357788086,0.011193990707397461,0.26432275772094727,1.6462364196777344,1.9659404754638672,5.928276538848877,1,213,BCR,survived,,,5,0.12835097312927246
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08782243728637695,0.044187307357788086,0.011193990707397461,0.26432275772094727,1.6462364196777344,1.9659404754638672,5.928276538848877,2,283,BCR,survived,,,5,0.1332390308380127
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1392652988433838,0.06760096549987793,0.08082127571105957,0.915165901184082,3.894402265548706,4.957990407943726,9.702283382415771,1,109,COD,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 257, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 205, in _get_energies\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 215, in _eval_aux_operators\nAttributeError: 'list' object has no attribute 'coeff'\n",1,0.07340073585510254
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1392652988433838,0.06760096549987793,0.08082127571105957,0.915165901184082,3.894402265548706,4.957990407943726,9.702283382415771,2,185,COD,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 71, in test_ce_k4_filtered\n    self.assertEqual(len(result.eigenvalues), 2)\nAssertionError: 4 != 2\n",4,0.16175293922424316
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1392652988433838,0.06760096549987793,0.08082127571105957,0.915165901184082,3.894402265548706,4.957990407943726,9.702283382415771,3,185,COD,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 71, in test_ce_k4_filtered\n    self.assertEqual(len(result.eigenvalues), 2)\nAssertionError: 4 != 2\n",4,0.18223118782043457
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1392652988433838,0.06760096549987793,0.08082127571105957,0.915165901184082,3.894402265548706,4.957990407943726,9.702283382415771,4,195,COD,survived,,,5,0.2150113582611084
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1392652988433838,0.06760096549987793,0.08082127571105957,0.915165901184082,3.894402265548706,4.957990407943726,9.702283382415771,5,195,COD,survived,,,5,0.26795220375061035
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,1,91,COI,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 254, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 161, in _solve\nAttributeError: 'WeightedPauliOperator' object has no attribute 'to_spmatrix'\n",1,0.06513023376464844
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,2,107,COI,killed,test_ce_fail (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 57, in test_ce_fail\n    algo = NumPyEigensolver()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 79, in __init__\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 113, in aux_operators\nAttributeError: 'NoneType' object has no attribute 'num_qubits'\n",2,0.07868647575378418
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,3,109,COI,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 257, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 205, in _get_energies\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 215, in _eval_aux_operators\nAttributeError: 'list' object has no attribute 'coeff'\n",1,0.06252646446228027
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,4,112,COI,killed,test_ce_fail (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 57, in test_ce_fail\n    algo = NumPyEigensolver()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 79, in __init__\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 113, in aux_operators\nAttributeError: 'NoneType' object has no attribute 'num_qubits'\n",2,0.08475112915039062
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,5,151,COI,killed,test_ce_fail (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 57, in test_ce_fail\n    algo = NumPyEigensolver()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 78, in __init__\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 94, in operator\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 152, in _check_set_k\nAttributeError: 'NoneType' object has no attribute 'num_qubits'\n",2,0.0716252326965332
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,6,152,COI,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 42, in test_ce\n    self.assertEqual(len(result.eigenvalues), 1)\nAssertionError: 4 != 1\n",1,0.06645917892456055
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,7,163,COI,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 44, in test_ce\n    self.assertAlmostEqual(result.eigenvalues[0], -1.85727503 + 0j)\nAssertionError: (-1.8369679912029844+0j) != (-1.85727503+0j) within 7 places (0.020307038797015675 difference)\n",1,0.052367448806762695
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,8,171,COI,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 42, in test_ce\n    self.assertEqual(len(result.eigenvalues), 1)\nAssertionError: 4 != 1\n",1,0.06534695625305176
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,9,177,COI,killed,test_ce_k4 (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 53, in test_ce_k4\n    [-1.85727503, -1.24458455, -0.88272215, -0.22491125])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 1046, in assert_array_almost_equal\n    precision=decimal)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 842, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not almost equal to 6 decimals\n\nMismatched elements: 4 / 4 (100%)\nMax absolute difference: 1.63236378\nMax relative difference: 7.25781294\n x: array([-1.244585, -0.882722, -0.224911, -1.857275])\n y: array([-1.857275, -1.244585, -0.882722, -0.224911])\n",3,0.15320110321044922
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,10,185,COI,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 71, in test_ce_k4_filtered\n    self.assertEqual(len(result.eigenvalues), 2)\nAssertionError: 4 != 2\n",4,0.14110350608825684
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,11,187,COI,killed,test_ce_k4_filtered_empty (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 84, in test_ce_k4_filtered_empty\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 294, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 188, in _get_ground_state_energy\nIndexError: index 0 is out of bounds for axis 0 with size 0\n",5,0.14757990837097168
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,12,195,COI,survived,,,5,0.16314482688903809
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,13,202,COI,survived,,,5,0.11641216278076172
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,14,211,COI,survived,,,5,0.1466538906097412
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,15,215,COI,survived,,,5,0.1312425136566162
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,16,220,COI,survived,,,5,0.12374019622802734
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,17,245,COI,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 246, in _run\nqiskit.aqua.aqua_error.AquaError: 'Operator was never provided'\n",1,0.060767412185668945
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,18,249,COI,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 42, in test_ce\n    self.assertEqual(len(result.eigenvalues), 1)\nAssertionError: 4 != 1\n",1,0.0841822624206543
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,19,260,COI,timeout,,,,5.026354074478149
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,20,271,COI,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 70, in test_ce_k4_filtered\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 272, in _run\nKeyError: 'aux_ops'\n",4,0.12099123001098633
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,21,271,COI,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 70, in test_ce_k4_filtered\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 272, in _run\nKeyError: 'aux_ops'\n",4,0.12110042572021484
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,22,275,COI,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 73, in test_ce_k4_filtered\n    np.testing.assert_array_almost_equal(result.eigenvalues.real, [-0.88272215, -0.22491125])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 1046, in assert_array_almost_equal\n    precision=decimal)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 842, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not almost equal to 6 decimals\n\nMismatched elements: 2 / 2 (100%)\nMax absolute difference: 1.0196733\nMax relative difference: 4.53366961\n x: array([-1.857275, -1.244585])\n y: array([-0.882722, -0.224911])\n",4,0.16757726669311523
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,23,280,COI,survived,,,5,0.14256501197814941
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,24,280,COI,survived,,,5,0.12511682510375977
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,25,282,COI,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 71, in test_ce_k4_filtered\n    self.assertEqual(len(result.eigenvalues), 2)\nAssertionError: 0 != 2\n",4,0.11228108406066895
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,26,299,COI,timeout,,,,5.028061866760254
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,27,299,COI,timeout,,,,5.026913166046143
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,28,301,COI,timeout,,,,5.032327175140381
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,29,301,COI,timeout,,,,5.0225958824157715
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,30,303,COI,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 304, in _run\nKeyError: 'aux_ops'\n",1,0.08527255058288574
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08713722229003906,0.0579073429107666,0.2139415740966797,27.975616693496704,25.80973744392395,54.0572030544281,57.64544892311096,31,303,COI,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 304, in _run\nKeyError: 'aux_ops'\n",1,0.08034968376159668
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,1,49,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 42, in test_ce\n    self.assertEqual(len(result.eigenvalues), 1)\nAssertionError: 2 != 1\n",1,0.07056927680969238
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,2,70,CRP,survived,,,5,0.19482016563415527
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,3,70,CRP,survived,,,5,0.1308765411376953
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,4,70,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 40, in test_ce\n    algo = NumPyEigensolver(self.qubit_op, aux_operators=[])\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 70, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 43, in validate_min\n    raise ValueError('{} must have value >= {}, was {}'.format(name, minimum, value))\nValueError: k must have value >= 2, was 1\n",1,0.04824495315551758
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,5,113,CRP,survived,,,5,0.11573338508605957
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,6,118,CRP,survived,,,5,0.11215639114379883
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,7,130,CRP,survived,,,5,0.12833762168884277
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,8,130,CRP,survived,,,5,0.12653756141662598
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,9,130,CRP,survived,,,5,0.13422322273254395
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,10,152,CRP,survived,,,5,0.11412572860717773
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,11,153,CRP,survived,,,5,0.11406111717224121
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,12,154,CRP,survived,,,5,0.11982417106628418
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,13,154,CRP,survived,,,5,0.12649321556091309
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,14,167,CRP,survived,,,5,0.11464071273803711
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,15,169,CRP,survived,,,5,0.14200711250305176
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,16,171,CRP,timeout,,,,5.023625135421753
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,17,171,CRP,survived,,,5,0.23380446434020996
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,18,172,CRP,survived,,,5,0.16178035736083984
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,19,172,CRP,survived,,,5,0.16515088081359863
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,20,176,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 254, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 176, in _solve\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/sparse/linalg/eigen/arpack/arpack.py"", line 1342, in eigs\n    ncv, v0, maxiter, which, tol)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/sparse/linalg/eigen/arpack/arpack.py"", line 691, in __init__\n    % ' '.join(_NEUPD_WHICH))\nValueError: Parameter which must be one of LM SM LR SR LI SI\n",1,0.13535165786743164
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,21,176,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 254, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 176, in _solve\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/sparse/linalg/eigen/arpack/arpack.py"", line 1342, in eigs\n    ncv, v0, maxiter, which, tol)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/sparse/linalg/eigen/arpack/arpack.py"", line 691, in __init__\n    % ' '.join(_NEUPD_WHICH))\nValueError: Parameter which must be one of LM SM LR SR LI SI\n",1,0.06726741790771484
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,22,177,CRP,survived,,,5,0.22591471672058105
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,23,181,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 257, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 200, in _get_energies\nKeyError: 'eigvals'\n",1,0.17056870460510254
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,24,181,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 257, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 200, in _get_energies\nKeyError: 'eigvals'\n",1,0.07070255279541016
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,25,182,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 294, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 189, in _get_ground_state_energy\nKeyError: 'eigvecs'\n",1,0.0797109603881836
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,26,182,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 294, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 189, in _get_ground_state_energy\nKeyError: 'eigvecs'\n",1,0.11545777320861816
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,27,185,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 71, in test_ce_k4_filtered\n    self.assertEqual(len(result.eigenvalues), 2)\nAssertionError: 4 != 2\n",4,0.15028738975524902
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,28,185,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 71, in test_ce_k4_filtered\n    self.assertEqual(len(result.eigenvalues), 2)\nAssertionError: 4 != 2\n",4,0.1369462013244629
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,29,185,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 71, in test_ce_k4_filtered\n    self.assertEqual(len(result.eigenvalues), 2)\nAssertionError: 4 != 2\n",4,0.14796662330627441
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,30,185,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 71, in test_ce_k4_filtered\n    self.assertEqual(len(result.eigenvalues), 2)\nAssertionError: 4 != 2\n",4,0.13930606842041016
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,31,187,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 294, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 187, in _get_ground_state_energy\nKeyError: 'mutpy'\n",1,0.09757614135742188
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,32,187,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 294, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 187, in _get_ground_state_energy\nKeyError: ''\n",1,0.06470799446105957
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,33,187,CRP,survived,,,5,0.12035250663757324
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,34,188,CRP,survived,,,5,0.19930481910705566
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,35,188,CRP,survived,,,5,0.13481903076171875
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,36,188,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 294, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 188, in _get_ground_state_energy\nKeyError: 'mutpy'\n",1,0.0655977725982666
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,37,188,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 294, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 188, in _get_ground_state_energy\nKeyError: ''\n",1,0.14612388610839844
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,38,188,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 294, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 188, in _get_ground_state_energy\nIndexError: index 1 is out of bounds for axis 0 with size 1\n",1,0.055787086486816406
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,39,189,CRP,survived,,,5,0.16567063331604004
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,40,189,CRP,survived,,,5,0.11113095283508301
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,41,189,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 294, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 189, in _get_ground_state_energy\nKeyError: 'mutpy'\n",1,0.1595151424407959
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,42,189,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 294, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 189, in _get_ground_state_energy\nKeyError: ''\n",1,0.07967424392700195
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,43,191,CRP,survived,,,5,0.12051677703857422
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,44,191,CRP,survived,,,5,0.10999822616577148
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,45,192,CRP,survived,,,5,0.19130706787109375
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,46,192,CRP,survived,,,5,0.17253613471984863
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,47,195,CRP,survived,,,5,0.1491241455078125
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,48,195,CRP,survived,,,5,0.26958155632019043
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,49,195,CRP,survived,,,5,0.1608283519744873
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,50,195,CRP,survived,,,5,0.2376551628112793
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,51,200,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 257, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 200, in _get_energies\nKeyError: 'mutpy'\n",1,0.04871201515197754
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,52,200,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 257, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 200, in _get_energies\nKeyError: ''\n",1,0.05981040000915527
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,53,201,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 70, in test_ce_k4_filtered\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 270, in _run\nKeyError: 'energies'\n",4,0.12730193138122559
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,54,201,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 70, in test_ce_k4_filtered\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 270, in _run\nKeyError: 'energies'\n",4,0.14868497848510742
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,55,205,CRP,survived,,,5,0.15720105171203613
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,56,205,CRP,survived,,,5,0.16016721725463867
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,57,206,CRP,survived,,,5,0.1276249885559082
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,58,206,CRP,survived,,,5,0.1449589729309082
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,59,208,CRP,survived,,,5,0.2807738780975342
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,60,214,CRP,survived,,,5,0.18830013275146484
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,61,215,CRP,survived,,,5,0.18172526359558105
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,62,224,CRP,survived,,,5,0.12176370620727539
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,63,225,CRP,survived,,,5,0.12808799743652344
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,64,246,CRP,survived,,,5,0.19028830528259277
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,65,246,CRP,survived,,,5,0.13028264045715332
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,66,251,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 70, in test_ce_k4_filtered\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 257, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 200, in _get_energies\nIndexError: index 4 is out of bounds for axis 0 with size 4\n",4,0.10476279258728027
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,67,266,CRP,survived,,,5,0.12612509727478027
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,68,267,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 70, in test_ce_k4_filtered\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 267, in _run\nKeyError: 'mutpy'\n",4,0.10738849639892578
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,69,267,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 70, in test_ce_k4_filtered\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 267, in _run\nKeyError: ''\n",4,0.12090468406677246
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,70,268,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 70, in test_ce_k4_filtered\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 268, in _run\nKeyError: 'mutpy'\n",4,0.11681509017944336
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,71,268,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 70, in test_ce_k4_filtered\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 268, in _run\nKeyError: ''\n",4,0.14531517028808594
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,72,269,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 70, in test_ce_k4_filtered\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 269, in _run\nKeyError: 'mutpy'\n",4,0.10033893585205078
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,73,269,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 70, in test_ce_k4_filtered\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 269, in _run\nKeyError: ''\n",4,0.13666677474975586
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,74,270,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 70, in test_ce_k4_filtered\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 270, in _run\nKeyError: 'mutpy'\n",4,0.10895967483520508
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,75,270,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 70, in test_ce_k4_filtered\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 270, in _run\nKeyError: ''\n",4,0.10678625106811523
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,76,271,CRP,survived,,,5,0.11618304252624512
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,77,271,CRP,survived,,,5,0.10708355903625488
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,78,272,CRP,survived,,,5,0.3652520179748535
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,79,272,CRP,survived,,,5,0.13941216468811035
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,80,276,CRP,survived,,,5,0.146744966506958
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,81,280,CRP,survived,,,5,0.18227505683898926
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,82,280,CRP,survived,,,5,0.1981213092803955
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,83,285,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 72, in test_ce_k4_filtered\n    self.assertEqual(len(result.eigenstates), 2)\nAssertionError: 4 != 2\n",4,0.15253925323486328
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,84,285,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 72, in test_ce_k4_filtered\n    self.assertEqual(len(result.eigenstates), 2)\nAssertionError: 4 != 2\n",4,0.13397812843322754
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,85,286,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 71, in test_ce_k4_filtered\n    self.assertEqual(len(result.eigenvalues), 2)\nAssertionError: 4 != 2\n",4,0.3465859889984131
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,86,286,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 71, in test_ce_k4_filtered\n    self.assertEqual(len(result.eigenvalues), 2)\nAssertionError: 4 != 2\n",4,0.11013269424438477
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,87,287,CRP,survived,,,5,0.1128685474395752
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,88,287,CRP,survived,,,5,0.12431740760803223
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,89,289,CRP,survived,,,5,0.16593337059020996
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,90,289,CRP,survived,,,5,0.14740920066833496
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,91,296,CRP,survived,,,5,0.13756752014160156
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,92,296,CRP,survived,,,5,0.11241388320922852
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,93,297,CRP,survived,,,5,0.13710880279541016
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,94,299,CRP,timeout,,,,5.021646976470947
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,95,299,CRP,timeout,,,,5.029386758804321
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,96,300,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 300, in _run\nKeyError: 'mutpy'\n",1,0.05498504638671875
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,97,300,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 300, in _run\nKeyError: ''\n",1,0.06484556198120117
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,98,301,CRP,timeout,,,,5.029235601425171
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,99,301,CRP,timeout,,,,5.035935878753662
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,100,302,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 302, in _run\nKeyError: 'mutpy'\n",1,0.13625860214233398
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,101,302,CRP,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 302, in _run\nKeyError: ''\n",1,0.06003427505493164
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,102,303,CRP,survived,,,5,0.27799081802368164
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,103,303,CRP,survived,,,5,0.143096923828125
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,104,304,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 70, in test_ce_k4_filtered\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 304, in _run\nKeyError: 'mutpy'\n",4,0.31347012519836426
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,105,304,CRP,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 70, in test_ce_k4_filtered\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 304, in _run\nKeyError: ''\n",4,0.12874484062194824
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,106,306,CRP,survived,,,5,0.14066624641418457
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,107,306,CRP,survived,,,5,0.13741493225097656
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,108,307,CRP,survived,,,5,0.180100679397583
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,109,316,CRP,survived,,,5,0.12743401527404785
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,110,318,CRP,survived,,,5,0.1687300205230713
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,111,318,CRP,survived,,,5,0.11932373046875
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,112,318,CRP,survived,,,5,0.10563111305236816
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,113,318,CRP,survived,,,5,0.15042448043823242
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,114,319,CRP,survived,,,5,0.42877769470214844
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1123511791229248,0.06394767761230469,0.87941575050354,41.20772862434387,95.43005108833313,137.58114314079285,142.78878736495972,115,319,CRP,survived,,,5,0.13299298286437988
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.09254240989685059,0.049843549728393555,0.049417972564697266,0.5768797397613525,6.461452960968018,7.137594223022461,9.869493246078491,1,85,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.09254240989685059,0.049843549728393555,0.049417972564697266,0.5768797397613525,6.461452960968018,7.137594223022461,9.869493246078491,2,89,DDL,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 246, in _run\nqiskit.aqua.aqua_error.AquaError: 'Operator was never provided'\n",1,0.0539860725402832
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.09254240989685059,0.049843549728393555,0.049417972564697266,0.5768797397613525,6.461452960968018,7.137594223022461,9.869493246078491,3,96,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.09254240989685059,0.049843549728393555,0.049417972564697266,0.5768797397613525,6.461452960968018,7.137594223022461,9.869493246078491,4,100,DDL,survived,,,5,0.1329023838043213
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.09254240989685059,0.049843549728393555,0.049417972564697266,0.5768797397613525,6.461452960968018,7.137594223022461,9.869493246078491,5,122,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.09254240989685059,0.049843549728393555,0.049417972564697266,0.5768797397613525,6.461452960968018,7.137594223022461,9.869493246078491,6,127,DDL,survived,,,5,0.13250017166137695
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.09254240989685059,0.049843549728393555,0.049417972564697266,0.5768797397613525,6.461452960968018,7.137594223022461,9.869493246078491,7,134,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.09254240989685059,0.049843549728393555,0.049417972564697266,0.5768797397613525,6.461452960968018,7.137594223022461,9.869493246078491,8,140,DDL,survived,,,5,0.12609148025512695
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.09254240989685059,0.049843549728393555,0.049417972564697266,0.5768797397613525,6.461452960968018,7.137594223022461,9.869493246078491,9,146,DDL,survived,,,5,0.1225433349609375
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.0682060718536377,0.042908668518066406,NA,NA,NA,0.2263801097869873,2.856264114379883,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06526541709899902,0.045055389404296875,NA,NA,NA,0.2220931053161621,2.609225273132324,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06746196746826172,0.04790496826171875,NA,NA,NA,0.19174647331237793,3.313734769821167,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.05932188034057617,0.03531360626220703,0.045522451400756836,15.395999431610107,5.341646909713745,20.818482398986816,23.122756242752075,1,47,IOD,timeout,,,,5.04692268371582
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.05932188034057617,0.03531360626220703,0.045522451400756836,15.395999431610107,5.341646909713745,20.818482398986816,23.122756242752075,2,85,IOD,incompetent,,,0,0
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.05932188034057617,0.03531360626220703,0.045522451400756836,15.395999431610107,5.341646909713745,20.818482398986816,23.122756242752075,3,89,IOD,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 40, in test_ce\n    algo = NumPyEigensolver(self.qubit_op, aux_operators=[])\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 78, in __init__\nAttributeError: can't set attribute\n",1,0.024371862411499023
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.05932188034057617,0.03531360626220703,0.045522451400756836,15.395999431610107,5.341646909713745,20.818482398986816,23.122756242752075,4,96,IOD,incompetent,,,0,0
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.05932188034057617,0.03531360626220703,0.045522451400756836,15.395999431610107,5.341646909713745,20.818482398986816,23.122756242752075,5,100,IOD,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 40, in test_ce\n    algo = NumPyEigensolver(self.qubit_op, aux_operators=[])\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 79, in __init__\nAttributeError: can't set attribute\n",1,0.040161848068237305
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.05932188034057617,0.03531360626220703,0.045522451400756836,15.395999431610107,5.341646909713745,20.818482398986816,23.122756242752075,6,146,IOD,survived,,,5,0.08766007423400879
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.05932188034057617,0.03531360626220703,0.045522451400756836,15.395999431610107,5.341646909713745,20.818482398986816,23.122756242752075,7,228,IOD,timeout,,,,5.019834995269775
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.05932188034057617,0.03531360626220703,0.045522451400756836,15.395999431610107,5.341646909713745,20.818482398986816,23.122756242752075,8,237,IOD,timeout,,,,5.032236337661743
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.05932188034057617,0.03531360626220703,0.045522451400756836,15.395999431610107,5.341646909713745,20.818482398986816,23.122756242752075,9,316,IOD,survived,,,5,0.13372540473937988
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06357169151306152,0.047075748443603516,0.014244556427001953,0.2882089614868164,2.1040048599243164,2.4535341262817383,4.886644124984741,1,47,IOP,survived,,,5,0.09813094139099121
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06357169151306152,0.047075748443603516,0.014244556427001953,0.2882089614868164,2.1040048599243164,2.4535341262817383,4.886644124984741,2,228,IOP,survived,,,5,0.09846735000610352
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06357169151306152,0.047075748443603516,0.014244556427001953,0.2882089614868164,2.1040048599243164,2.4535341262817383,4.886644124984741,3,316,IOP,survived,,,5,0.08727574348449707
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.07056498527526855,0.044425249099731445,0.009240865707397461,0.25722813606262207,1.4125783443450928,1.7234725952148438,4.196856737136841,1,185,LCR,survived,,,5,0.1357574462890625
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.07056498527526855,0.044425249099731445,0.009240865707397461,0.25722813606262207,1.4125783443450928,1.7234725952148438,4.196856737136841,2,195,LCR,survived,,,5,0.1192476749420166
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1102294921875,0.16283965110778809,NA,NA,NA,0.32636570930480957,3.194812774658203,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08242464065551758,0.04483389854431152,NA,NA,NA,0.20680570602416992,3.4755361080169678,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.0732421875,0.04362130165100098,0.08291077613830566,1.510977029800415,10.578628301620483,12.216137409210205,15.429482460021973,1,118,ROR,survived,,,5,0.09142804145812988
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.0732421875,0.04362130165100098,0.08291077613830566,1.510977029800415,10.578628301620483,12.216137409210205,15.429482460021973,2,152,ROR,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 42, in test_ce\n    self.assertEqual(len(result.eigenvalues), 1)\nAssertionError: 4 != 1\n",1,0.05930471420288086
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.0732421875,0.04362130165100098,0.08291077613830566,1.510977029800415,10.578628301620483,12.216137409210205,15.429482460021973,3,152,ROR,survived,,,5,0.10093569755554199
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.0732421875,0.04362130165100098,0.08291077613830566,1.510977029800415,10.578628301620483,12.216137409210205,15.429482460021973,4,163,ROR,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 44, in test_ce\n    self.assertAlmostEqual(result.eigenvalues[0], -1.85727503 + 0j)\nAssertionError: (-1.8369679912029844+0j) != (-1.85727503+0j) within 7 places (0.020307038797015675 difference)\n",1,0.07760095596313477
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.0732421875,0.04362130165100098,0.08291077613830566,1.510977029800415,10.578628301620483,12.216137409210205,15.429482460021973,5,171,ROR,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 42, in test_ce\n    self.assertEqual(len(result.eigenvalues), 1)\nAssertionError: 4 != 1\n",1,0.0789799690246582
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.0732421875,0.04362130165100098,0.08291077613830566,1.510977029800415,10.578628301620483,12.216137409210205,15.429482460021973,6,171,ROR,survived,,,5,0.10719060897827148
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.0732421875,0.04362130165100098,0.08291077613830566,1.510977029800415,10.578628301620483,12.216137409210205,15.429482460021973,7,177,ROR,killed,test_ce_k4 (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 53, in test_ce_k4\n    [-1.85727503, -1.24458455, -0.88272215, -0.22491125])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 1046, in assert_array_almost_equal\n    precision=decimal)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 842, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not almost equal to 6 decimals\n\nMismatched elements: 4 / 4 (100%)\nMax absolute difference: 1.63236378\nMax relative difference: 7.25781294\n x: array([-1.244585, -0.882722, -0.224911, -1.857275])\n y: array([-1.857275, -1.244585, -0.882722, -0.224911])\n",3,0.10281586647033691
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.0732421875,0.04362130165100098,0.08291077613830566,1.510977029800415,10.578628301620483,12.216137409210205,15.429482460021973,8,177,ROR,survived,,,5,0.1121222972869873
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.0732421875,0.04362130165100098,0.08291077613830566,1.510977029800415,10.578628301620483,12.216137409210205,15.429482460021973,9,187,ROR,survived,,,5,0.09914851188659668
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.0732421875,0.04362130165100098,0.08291077613830566,1.510977029800415,10.578628301620483,12.216137409210205,15.429482460021973,10,187,ROR,killed,test_ce_k4_filtered_empty (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 84, in test_ce_k4_filtered_empty\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 294, in _run\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 188, in _get_ground_state_energy\nIndexError: index 0 is out of bounds for axis 0 with size 0\n",5,0.15146660804748535
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.0732421875,0.04362130165100098,0.08291077613830566,1.510977029800415,10.578628301620483,12.216137409210205,15.429482460021973,11,215,ROR,survived,,,5,0.11649441719055176
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.0732421875,0.04362130165100098,0.08291077613830566,1.510977029800415,10.578628301620483,12.216137409210205,15.429482460021973,12,224,ROR,survived,,,5,0.1153254508972168
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.0732421875,0.04362130165100098,0.08291077613830566,1.510977029800415,10.578628301620483,12.216137409210205,15.429482460021973,13,224,ROR,survived,,,5,0.1570594310760498
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.0732421875,0.04362130165100098,0.08291077613830566,1.510977029800415,10.578628301620483,12.216137409210205,15.429482460021973,14,282,ROR,killed,test_ce_k4_filtered (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 71, in test_ce_k4_filtered\n    self.assertEqual(len(result.eigenvalues), 2)\nAssertionError: 0 != 2\n",4,0.11608695983886719
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06246519088745117,0.04085898399353027,0.01520395278930664,0.33393383026123047,2.102489948272705,2.4924867153167725,4.973089933395386,1,47,SCD,survived,,,5,0.09654474258422852
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06246519088745117,0.04085898399353027,0.01520395278930664,0.33393383026123047,2.102489948272705,2.4924867153167725,4.973089933395386,2,228,SCD,survived,,,5,0.11348891258239746
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06246519088745117,0.04085898399353027,0.01520395278930664,0.33393383026123047,2.102489948272705,2.4924867153167725,4.973089933395386,3,316,SCD,survived,,,5,0.11995506286621094
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06606459617614746,0.043497562408447266,0.04535818099975586,0.5384547710418701,5.308531999588013,5.935842514038086,8.743651628494263,1,85,SCI,survived,,,5,0.14135289192199707
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06606459617614746,0.043497562408447266,0.04535818099975586,0.5384547710418701,5.308531999588013,5.935842514038086,8.743651628494263,2,89,SCI,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 40, in test_ce\n    algo = NumPyEigensolver(self.qubit_op, aux_operators=[])\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 78, in __init__\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 91, in operator\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py"", line 79, in operator\n    raise NotImplementedError\nNotImplementedError\n",1,0.04488086700439453
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06606459617614746,0.043497562408447266,0.04535818099975586,0.5384547710418701,5.308531999588013,5.935842514038086,8.743651628494263,3,96,SCI,survived,,,5,0.14651131629943848
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06606459617614746,0.043497562408447266,0.04535818099975586,0.5384547710418701,5.308531999588013,5.935842514038086,8.743651628494263,4,100,SCI,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 40, in test_ce\n    algo = NumPyEigensolver(self.qubit_op, aux_operators=[])\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 79, in __init__\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 107, in aux_operators\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py"", line 91, in aux_operators\n    raise NotImplementedError\nNotImplementedError\n",1,0.04412198066711426
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06606459617614746,0.043497562408447266,0.04535818099975586,0.5384547710418701,5.308531999588013,5.935842514038086,8.743651628494263,5,146,SCI,survived,,,5,0.11039900779724121
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06606459617614746,0.043497562408447266,0.04535818099975586,0.5384547710418701,5.308531999588013,5.935842514038086,8.743651628494263,6,237,SCI,killed,test_ce (test.aqua.test_numpy_eigen_solver.TestNumPyEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_eigen_solver.py"", line 41, in test_ce\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver"", line 244, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 47, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,0.038047075271606445
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06456303596496582,0.041805267333984375,0.009076356887817383,0.23810744285583496,1.587273120880127,1.8762621879577637,4.92191219329834,1,165,SIR,survived,,,5,0.12923240661621094
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06456303596496582,0.041805267333984375,0.009076356887817383,0.23810744285583496,1.587273120880127,1.8762621879577637,4.92191219329834,2,166,SIR,survived,,,5,0.10654377937316895
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.07892704010009766,0.04487419128417969,NA,NA,NA,7.352020978927612,10.209990978240967,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.1074070930480957,0.06370329856872559,NA,NA,NA,65.79378390312195,69.45132160186768,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.06178426742553711,0.03820371627807617,NA,NA,NA,55.08517265319824,58.07538056373596,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.08920526504516602,0.048467159271240234,NA,NA,NA,0.20077037811279297,2.9546215534210205,NA,NA,QMD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.eigen_solvers.numpy_eigen_solver,test.aqua.test_numpy_eigen_solver,5,0.0757594108581543,0.04403543472290039,NA,NA,NA,15.475895166397095,18.711660861968994,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,228.90549087524414,0.05684399604797363,0.020857572555541992,341.1313478946686,3.047741413116455,344.25679087638855,576.2546563148499,1,112,AOD,survived,,,13,181.23672795295715
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,228.90549087524414,0.05684399604797363,0.020857572555541992,341.1313478946686,3.047741413116455,344.25679087638855,576.2546563148499,2,114,AOD,survived,,,13,159.726881980896
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,228.90549087524414,0.05684399604797363,0.020857572555541992,341.1313478946686,3.047741413116455,344.25679087638855,576.2546563148499,3,170,AOD,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 185, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1013, in append\n    instructions.add(self._append(instruction, qarg, carg), qarg, carg)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1036, in _append\n    self._check_dups(qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1151, in _check_dups\n    raise CircuitError(""duplicate qubit arguments"")\nqiskit.circuit.exceptions.CircuitError: 'duplicate qubit arguments'\n",7,0.16253995895385742
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,1,81,AOR,survived,,,13,252.25424003601074
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,2,107,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 111, in _get_angles\nIndexError: string index out of range\n",7,0.05033373832702637
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,3,108,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 112, in _get_angles\nIndexError: index 4 is out of bounds for axis 0 with size 3\n",7,0.03733491897583008
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,4,109,AOR,survived,,,13,209.53984212875366
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,5,110,AOR,survived,,,13,134.65291810035706
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,6,112,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 112, in _get_angles\nIndexError: index 5 is out of bounds for axis 0 with size 5\n",7,0.07681393623352051
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,7,112,AOR,survived,,,13,226.58680629730225
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,8,112,AOR,survived,,,13,273.4126398563385
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,9,113,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 113, in _get_angles\nIndexError: index 5 is out of bounds for axis 0 with size 5\n",7,0.07094311714172363
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,10,114,AOR,survived,,,13,258.44646072387695
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,11,164,AOR,survived,,,13,245.51816725730896
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,12,166,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 191, in _controlled_multiple_mod_N\nIndexError: list index out of range\n",7,0.26736974716186523
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,13,167,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 143, in _double_controlled_phi_add_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 223, in broadcast_arguments\n    f'The amount of qubit({len(qargs)})/clbit({len(cargs)}) arguments does'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit(7)/clbit(0) arguments does not match the gate expectation (5).'\n",7,0.09892678260803223
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,14,168,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 178, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 413, in broadcast_arguments\n    f'The amount of qubit arguments {len(qargs)} does not match'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit arguments 3 does not match the instruction expectation (5).'\n",7,0.20018744468688965
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,15,170,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 185, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1013, in append\n    instructions.add(self._append(instruction, qarg, carg), qarg, carg)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1036, in _append\n    self._check_dups(qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1151, in _check_dups\n    raise CircuitError(""duplicate qubit arguments"")\nqiskit.circuit.exceptions.CircuitError: 'duplicate qubit arguments'\n",7,0.20433855056762695
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,16,172,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 139, in _double_controlled_phi_add_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2270, in p\n    return self.append(PhaseGate(theta), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 942, in _bit_argument_conversion\n    raise CircuitError('Index out of range.') from ex\nqiskit.circuit.exceptions.CircuitError: 'Index out of range.'\n",7,0.049216508865356445
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,17,174,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 139, in _double_controlled_phi_add_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2270, in p\n    return self.append(PhaseGate(theta), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 942, in _bit_argument_conversion\n    raise CircuitError('Index out of range.') from ex\nqiskit.circuit.exceptions.CircuitError: 'Index out of range.'\n",7,0.048366546630859375
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,18,182,AOR,survived,,,13,193.61074781417847
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,19,182,AOR,survived,,,13,126.31402134895325
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,20,182,AOR,survived,,,13,130.41905212402344
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,21,182,AOR,timeout,,,,1468.292631149292
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,22,182,AOR,survived,,,13,197.88679766654968
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,23,196,AOR,survived,,,13,171.15620160102844
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,24,196,AOR,survived,,,13,170.2187271118164
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,25,196,AOR,survived,,,13,181.06392574310303
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,26,196,AOR,survived,,,13,203.9998083114624
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,27,196,AOR,survived,,,13,195.13775539398193
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,28,216,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 148, in _double_controlled_phi_add_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 413, in broadcast_arguments\n    f'The amount of qubit arguments {len(qargs)} does not match'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit arguments 5 does not match the instruction expectation (3).'\n",7,0.0695350170135498
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,29,217,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 144, in _double_controlled_phi_add_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 223, in broadcast_arguments\n    f'The amount of qubit({len(qargs)})/clbit({len(cargs)}) arguments does'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit(5)/clbit(0) arguments does not match the gate expectation (3).'\n",7,0.08880472183227539
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,30,220,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 220, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 82, in __init__\n    % (type(size).__name__, size))\nqiskit.circuit.exceptions.CircuitError: ""Register size must be an integer. (float '0.5' was provided)""\n",7,0.03943204879760742
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,31,220,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 220, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 87, in __init__\n    % (type(size).__name__, size))\nqiskit.circuit.exceptions.CircuitError: ""Register size must be positive (int '0' was provided)""\n",7,0.034006595611572266
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,32,220,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 260, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 56, in measure\n    return self.append(Measure(), [qubit], [cbit])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 39, in broadcast_arguments\n    raise CircuitError('register size error')\nqiskit.circuit.exceptions.CircuitError: 'register size error'\n",7,6.7557289600372314
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,33,224,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2270, in p\n    return self.append(PhaseGate(theta), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 942, in _bit_argument_conversion\n    raise CircuitError('Index out of range.') from ex\nqiskit.circuit.exceptions.CircuitError: 'Index out of range.'\n",7,0.059180259704589844
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,34,233,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 143, in _double_controlled_phi_add_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 223, in broadcast_arguments\n    f'The amount of qubit({len(qargs)})/clbit({len(cargs)}) arguments does'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit(5)/clbit(0) arguments does not match the gate expectation (7).'\n",7,0.06893539428710938
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,35,247,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 164, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 191, in __init__\n    self.add_register(*regs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1089, in add_register\n    regs = (QuantumRegister(regs[0], 'q'),)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 87, in __init__\n    % (type(size).__name__, size))\nqiskit.circuit.exceptions.CircuitError: ""Register size must be positive (int '-1' was provided)""\n",7,0.04830574989318848
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,36,247,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 168, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 168, in <listcomp>\nIndexError: list index out of range\n",7,0.04813408851623535
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,37,258,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 258, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 82, in __init__\n    % (type(size).__name__, size))\nqiskit.circuit.exceptions.CircuitError: ""Register size must be an integer. (float '0.5' was provided)""\n",7,3.9113152027130127
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,38,258,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 258, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 87, in __init__\n    % (type(size).__name__, size))\nqiskit.circuit.exceptions.CircuitError: ""Register size must be positive (int '0' was provided)""\n",7,3.534176826477051
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,39,258,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 260, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 56, in measure\n    return self.append(Measure(), [qubit], [cbit])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 39, in broadcast_arguments\n    raise CircuitError('register size error')\nqiskit.circuit.exceptions.CircuitError: 'register size error'\n",7,4.342396259307861
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,40,273,AOR,timeout,,,,1468.3209850788116
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,41,274,AOR,killed,test_shor_modinv_1__2__15__8_ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 75, in test_shor_modinv\n    self.assertTrue(modinv == expected)\nAssertionError: False is not true\n",8,132.2882251739502
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,42,274,AOR,killed,test_shor_modinv_1__2__15__8_ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 75, in test_shor_modinv\n    self.assertTrue(modinv == expected)\nAssertionError: False is not true\n",8,130.45228624343872
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,43,274,AOR,killed,test_shor_modinv_1__2__15__8_ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 75, in test_shor_modinv\n    self.assertTrue(modinv == expected)\nAssertionError: False is not true\n",8,153.949609041214
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,44,274,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 194, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 276, in modinv\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 273, in egcd\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 274, in egcd\nZeroDivisionError: division by zero\n",7,0.614133358001709
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,45,274,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 194, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 276, in modinv\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 273, in egcd\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 274, in egcd\nZeroDivisionError: integer division or modulo by zero\n",7,0.2718648910522461
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,46,274,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 194, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 276, in modinv\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 274, in egcd\nZeroDivisionError: 0.0 cannot be raised to a negative power\n",7,1.5277514457702637
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,47,280,AOR,killed,test_shor_modinv_1__2__15__8_ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 75, in test_shor_modinv\n    self.assertTrue(modinv == expected)\nAssertionError: False is not true\n",8,94.13420033454895
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,48,296,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 314, in _get_factors\nZeroDivisionError: float division by zero\n",7,135.02900624275208
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,49,296,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 314, in _get_factors\nZeroDivisionError: float division by zero\n",7,143.4730076789856
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,50,307,AOR,survived,,,13,191.74534964561462
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,51,314,AOR,survived,,,13,155.14235711097717
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,52,314,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 318, in _get_factors\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 369, in _calculate_continued_fraction\nZeroDivisionError: division by zero\n",7,142.8550763130188
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,53,314,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 314, in _get_factors\nIndexError: array index out of range\n",7,125.03972959518433
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,54,315,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 314, in _get_factors\nZeroDivisionError: float division by zero\n",7,123.26647353172302
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,55,315,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 318, in _get_factors\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 369, in _calculate_continued_fraction\nZeroDivisionError: division by zero\n",7,129.22170424461365
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,56,315,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 315, in _get_factors\nIndexError: array index out of range\n",7,143.48775219917297
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,57,315,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 318, in _get_factors\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 369, in _calculate_continued_fraction\nZeroDivisionError: division by zero\n",7,160.77878427505493
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,58,323,AOR,survived,,,13,218.78399753570557
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,59,331,AOR,survived,,,13,175.1627492904663
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,60,331,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,187.3702199459076
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,61,339,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nAssertionError: Lists differ: [3, 3] != [3, 5]\n\nFirst differing element 1:\n3\n5\n\n- [3, 3]\n?     ^\n\n+ [3, 5]\n?     ^\n\n",7,167.4864718914032
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,62,340,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nAssertionError: Lists differ: [3, 3] != [3, 5]\n\nFirst differing element 1:\n3\n5\n\n- [3, 3]\n?     ^\n\n+ [3, 5]\n?     ^\n\n",7,147.92338490486145
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,63,349,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 349, in _get_factors\nIndexError: array index out of range\n",7,160.93058800697327
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,64,368,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 318, in _get_factors\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 369, in _calculate_continued_fraction\nIndexError: array index out of range\n",7,116.22498488426208
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,65,369,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,113.20060896873474
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,66,369,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,121.41541814804077
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,67,369,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 318, in _get_factors\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 369, in _calculate_continued_fraction\nZeroDivisionError: division by zero\n",7,163.79472064971924
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,68,369,AOR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 318, in _get_factors\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 369, in _calculate_continued_fraction\nZeroDivisionError: float division by zero\n",7,152.74816274642944
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,69,393,AOR,survived,,,13,179.647230386734
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,70,393,AOR,survived,,,13,151.47561955451965
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,71,393,AOR,survived,,,13,152.6189262866974
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,72,393,AOR,survived,,,13,189.54781579971313
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,73,393,AOR,survived,,,13,190.60390901565552
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,74,393,AOR,survived,,,13,149.86546921730042
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,75,393,AOR,survived,,,13,143.06028604507446
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,76,400,AOR,survived,,,13,142.32882285118103
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,77,400,AOR,survived,,,13,134.85900402069092
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,78,400,AOR,survived,,,13,160.04880261421204
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,293.6392729282379,0.057848215103149414,0.6282980442047119,11548.10751581192,85.96677613258362,11634.760438203812,11932.092151880264,79,400,AOR,survived,,,13,138.62936425209045
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,273.36742329597473,0.06994509696960449,0.06009173393249512,2651.9150471687317,9.65286135673523,2661.697945356369,2940.1997408866882,1,112,ASR,survived,,,13,249.68540382385254
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,273.36742329597473,0.06994509696960449,0.06009173393249512,2651.9150471687317,9.65286135673523,2661.697945356369,2940.1997408866882,2,113,ASR,survived,,,13,274.42409205436707
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,273.36742329597473,0.06994509696960449,0.06009173393249512,2651.9150471687317,9.65286135673523,2661.697945356369,2940.1997408866882,3,113,ASR,survived,,,13,54.76624250411987
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,273.36742329597473,0.06994509696960449,0.06009173393249512,2651.9150471687317,9.65286135673523,2661.697945356369,2940.1997408866882,4,113,ASR,survived,,,13,266.33532094955444
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,273.36742329597473,0.06994509696960449,0.06009173393249512,2651.9150471687317,9.65286135673523,2661.697945356369,2940.1997408866882,5,321,ASR,timeout,,,,1366.9576222896576
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,273.36742329597473,0.06994509696960449,0.06009173393249512,2651.9150471687317,9.65286135673523,2661.697945356369,2940.1997408866882,6,371,ASR,survived,,,13,225.89380168914795
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,273.36742329597473,0.06994509696960449,0.06009173393249512,2651.9150471687317,9.65286135673523,2661.697945356369,2940.1997408866882,7,419,ASR,survived,,,13,213.8354034423828
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,209.65716791152954,0.06630921363830566,0.0065708160400390625,269.90139055252075,1.878333330154419,271.8526039123535,484.20949625968933,1,325,BCR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,269.8996753692627
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,280.93780732154846,0.07098102569580078,0.036437034606933594,441.00556349754333,3.5833475589752197,444.6963291168213,729.2655193805695,1,381,COD,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,0.03902482986450195
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,280.93780732154846,0.07098102569580078,0.036437034606933594,441.00556349754333,3.5833475589752197,444.6963291168213,729.2655193805695,2,399,COD,survived,,,13,211.84884476661682
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,280.93780732154846,0.07098102569580078,0.036437034606933594,441.00556349754333,3.5833475589752197,444.6963291168213,729.2655193805695,3,420,COD,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,229.11244463920593
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,1,81,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 34, in test_shor_factoring\n    shor = Shor(n_v)\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 82, in __init__\nValueError: The input needs to be an odd integer greater than 1.\n",7,0.031409502029418945
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,2,86,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 34, in test_shor_factoring\n    shor = Shor(n_v)\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 87, in __init__\nValueError: The integer a needs to satisfy a < N and gcd(a, N) = 1.\n",7,0.030535221099853516
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,3,95,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nAssertionError: First sequence is not a list: 15\n",7,0.09041571617126465
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,4,111,COI,survived,,,13,230.57300233840942
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,5,257,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,153.93722319602966
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,6,270,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 194, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 279, in modinv\nValueError: The greatest common divisor of 2 and 15 is 15, so the modular inverse does not exist.\n",7,0.34403014183044434
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,7,277,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 194, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 279, in modinv\nValueError: The greatest common divisor of 2 and 15 is 1, so the modular inverse does not exist.\n",7,0.30062294006347656
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,8,287,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 314, in _get_factors\nZeroDivisionError: float division by zero\n",7,206.02348637580872
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,9,310,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 314, in _get_factors\nZeroDivisionError: float division by zero\n",7,181.8376760482788
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,10,313,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,157.2850522994995
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,11,323,COI,survived,,,13,210.42281484603882
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,12,330,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 331, in _get_factors\nOverflowError: (34, 'Numerical result out of range')\n",7,173.53180742263794
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,13,334,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,183.29319143295288
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,14,345,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nAssertionError: Lists differ: [1, 3] != [3, 5]\n\nFirst differing element 0:\n1\n3\n\n- [1, 3]\n+ [3, 5]\n",7,225.81523036956787
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,15,345,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nAssertionError: Lists differ: [1, 15] != [3, 5]\n\nFirst differing element 0:\n1\n3\n\n- [1, 15]\n?  ^  -\n\n+ [3, 5]\n?  ^\n\n",7,189.90876007080078
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,16,349,COI,survived,,,13,233.6105089187622
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,17,381,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,0.03630471229553223
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,18,384,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 305, in get_statevector\n    return postprocess.format_statevector(self.data(experiment)['statevector'],\nKeyError: 'statevector'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 389, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 308, in get_statevector\n    raise QiskitError(f'No statevector for experiment ""{repr(experiment)}""') from ex\nqiskit.exceptions.QiskitError: 'No statevector for experiment ""<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fe2abb59860>""'\n",7,184.98562955856323
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,19,399,COI,survived,,,13,246.34930300712585
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,20,414,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nAssertionError: First sequence is not a list: None\n",7,169.1059489250183
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,199.34426379203796,0.05191516876220703,0.19105172157287598,2909.2617852687836,25.262258529663086,2934.7670106887817,3137.6599946022034,21,420,COI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,161.69690251350403
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,1,56,CRP,survived,,,13,238.4367551803589
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,2,57,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 34, in test_shor_factoring\n    shor = Shor(n_v)\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 87, in __init__\nValueError: The integer a needs to satisfy a < N and gcd(a, N) = 1.\n",7,0.030484437942504883
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,3,69,CRP,survived,,,13,225.66469311714172
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,4,69,CRP,survived,,,13,243.0652539730072
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,5,70,CRP,survived,,,13,234.80137014389038
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,6,70,CRP,survived,,,13,194.17671537399292
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,7,71,CRP,survived,,,13,195.54832005500793
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,8,71,CRP,survived,,,13,200.71720242500305
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,9,72,CRP,survived,,,13,169.7384798526764
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,10,72,CRP,survived,,,13,163.10373902320862
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,11,72,CRP,survived,,,13,161.0636477470398
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,12,73,CRP,survived,,,13,176.36622190475464
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,13,73,CRP,survived,,,13,165.0946180820465
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,14,73,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 34, in test_shor_factoring\n    shor = Shor(n_v)\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 73, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 43, in validate_min\n    raise ValueError('{} must have value >= {}, was {}'.format(name, minimum, value))\nValueError: a must have value >= 3, was 2\n",7,0.051451921463012695
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,15,81,CRP,survived,,,13,168.13152265548706
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,16,81,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 34, in test_shor_factoring\n    shor = Shor(n_v)\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 82, in __init__\nValueError: The input needs to be an odd integer greater than 1.\n",7,0.02901458740234375
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,17,81,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 34, in test_shor_factoring\n    shor = Shor(n_v)\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 82, in __init__\nValueError: The input needs to be an odd integer greater than 1.\n",7,0.031449079513549805
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,18,82,CRP,survived,,,13,207.65747451782227
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,19,82,CRP,survived,,,13,176.81328463554382
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,20,86,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 34, in test_shor_factoring\n    shor = Shor(n_v)\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 87, in __init__\nValueError: The integer a needs to satisfy a < N and gcd(a, N) = 1.\n",7,0.03336286544799805
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,21,87,CRP,survived,,,13,186.15020990371704
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,22,87,CRP,survived,,,13,166.34002137184143
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,23,91,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 381, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'factors'\n",7,0.033643484115600586
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,24,91,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 381, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'factors'\n",7,0.030159711837768555
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,25,91,CRP,killed,test_shor_power_1__3__5_ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 62, in test_shor_power\n    self.assertTrue(ret[""total_counts""] >= ret[""successful_counts""])\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'total_counts'\n",12,184.09376525878906
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,26,91,CRP,killed,test_shor_power_1__3__5_ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 62, in test_shor_power\n    self.assertTrue(ret[""total_counts""] >= ret[""successful_counts""])\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'total_counts'\n",12,181.27367854118347
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,27,91,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 419, in _run\nKeyError: 'successful_counts'\n",7,156.91808795928955
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,28,91,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 419, in _run\nKeyError: 'successful_counts'\n",7,165.7172863483429
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,29,91,CRP,survived,,,13,180.10304737091064
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,30,91,CRP,killed,test_shor_no_factors_1_5 (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 47, in test_shor_no_factors\n    self.assertTrue(ret[""successful_counts""] == 0)\nAssertionError: False is not true\n",10,136.79878854751587
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,31,96,CRP,survived,,,13,197.5234317779541
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,32,96,CRP,survived,,,13,219.66822147369385
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,33,97,CRP,killed,test_shor_power_1__3__5_ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 57, in test_shor_power\n    shor = Shor(n_v)\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 97, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'mutpy'\n",12,230.3692181110382
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,34,97,CRP,killed,test_shor_power_1__3__5_ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 57, in test_shor_power\n    shor = Shor(n_v)\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 97, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: ''\n",12,205.38073015213013
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,35,107,CRP,survived,,,13,36.582919120788574
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,36,107,CRP,survived,,,13,170.5903251171112
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,37,108,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2270, in p\n    return self.append(PhaseGate(theta), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 942, in _bit_argument_conversion\n    raise CircuitError('Index out of range.') from ex\nqiskit.circuit.exceptions.CircuitError: 'Index out of range.'\n",7,0.03935384750366211
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,38,109,CRP,survived,,,13,126.57613849639893
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,39,109,CRP,survived,,,13,176.06961584091187
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,40,110,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 111, in _get_angles\nIndexError: string index out of range\n",7,0.06047511100769043
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,41,111,CRP,survived,,,13,35.70105051994324
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,42,111,CRP,survived,,,13,34.61322355270386
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,43,112,CRP,survived,,,13,185.05867791175842
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,44,114,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 184, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/utils/deprecation.py"", line 56, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2043, in assign_parameters\n    unrolled_param_dict = self._unroll_param_dict(parameters)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2100, in _unroll_param_dict\n    'len {}'.format(param, len(param), value, len(value)))\nqiskit.circuit.exceptions.CircuitError: ""ParameterVector angles, ['angles[0]', 'angles[1]', 'angles[2]', 'angles[3]', 'angles[4]'] has length 5, which differs from value list [0.39269908 1.57079633 0.        ] of len 3""\n",7,0.15207576751708984
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,45,119,CRP,survived,,,13,197.31566905975342
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,46,119,CRP,survived,,,13,223.68228149414062
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,47,129,CRP,survived,,,13,198.6160650253296
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,48,129,CRP,survived,,,13,170.93767142295837
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,49,131,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 142, in _double_controlled_phi_add_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1013, in append\n    instructions.add(self._append(instruction, qarg, carg), qarg, carg)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1036, in _append\n    self._check_dups(qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1151, in _check_dups\n    raise CircuitError(""duplicate qubit arguments"")\nqiskit.circuit.exceptions.CircuitError: 'duplicate qubit arguments'\n",7,0.07865500450134277
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,50,132,CRP,survived,,,13,219.19072365760803
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,51,133,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 146, in _double_controlled_phi_add_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2507, in cx\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1013, in append\n    instructions.add(self._append(instruction, qarg, carg), qarg, carg)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1036, in _append\n    self._check_dups(qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1151, in _check_dups\n    raise CircuitError(""duplicate qubit arguments"")\nqiskit.circuit.exceptions.CircuitError: 'duplicate qubit arguments'\n",7,0.08913087844848633
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,52,136,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 139, in _double_controlled_phi_add_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2270, in p\n    return self.append(PhaseGate(theta), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 942, in _bit_argument_conversion\n    raise CircuitError('Index out of range.') from ex\nqiskit.circuit.exceptions.CircuitError: 'Index out of range.'\n",7,0.044939279556274414
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,53,142,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 142, in _double_controlled_phi_add_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 223, in broadcast_arguments\n    f'The amount of qubit({len(qargs)})/clbit({len(cargs)}) arguments does'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit(7)/clbit(0) arguments does not match the gate expectation (8).'\n",7,0.07548117637634277
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,54,146,CRP,survived,,,13,191.2290108203888
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,55,150,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 150, in _double_controlled_phi_add_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 223, in broadcast_arguments\n    f'The amount of qubit({len(qargs)})/clbit({len(cargs)}) arguments does'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit(7)/clbit(0) arguments does not match the gate expectation (8).'\n",7,0.0979466438293457
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,56,153,CRP,survived,,,13,183.4147012233734
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,57,154,CRP,survived,,,13,165.50294756889343
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,58,155,CRP,survived,,,13,148.4497663974762
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,59,158,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 158, in _double_controlled_phi_add_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 223, in broadcast_arguments\n    f'The amount of qubit({len(qargs)})/clbit({len(cargs)}) arguments does'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit(7)/clbit(0) arguments does not match the gate expectation (8).'\n",7,0.09692907333374023
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,60,164,CRP,survived,,,13,154.5524456501007
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,61,164,CRP,survived,,,13,149.6261808872223
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,62,166,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 191, in _controlled_multiple_mod_N\nIndexError: list index out of range\n",7,0.6333181858062744
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,63,166,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 185, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1013, in append\n    instructions.add(self._append(instruction, qarg, carg), qarg, carg)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1036, in _append\n    self._check_dups(qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1151, in _check_dups\n    raise CircuitError(""duplicate qubit arguments"")\nqiskit.circuit.exceptions.CircuitError: 'duplicate qubit arguments'\n",7,0.2799544334411621
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,64,167,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 143, in _double_controlled_phi_add_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 223, in broadcast_arguments\n    f'The amount of qubit({len(qargs)})/clbit({len(cargs)}) arguments does'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit(4)/clbit(0) arguments does not match the gate expectation (5).'\n",7,0.062436580657958984
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,65,168,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 178, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 413, in broadcast_arguments\n    f'The amount of qubit arguments {len(qargs)} does not match'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit arguments 6 does not match the instruction expectation (5).'\n",7,0.13342523574829102
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,66,169,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 185, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1013, in append\n    instructions.add(self._append(instruction, qarg, carg), qarg, carg)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1036, in _append\n    self._check_dups(qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1151, in _check_dups\n    raise CircuitError(""duplicate qubit arguments"")\nqiskit.circuit.exceptions.CircuitError: 'duplicate qubit arguments'\n",7,0.13686323165893555
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,67,170,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 185, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1013, in append\n    instructions.add(self._append(instruction, qarg, carg), qarg, carg)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1036, in _append\n    self._check_dups(qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1151, in _check_dups\n    raise CircuitError(""duplicate qubit arguments"")\nqiskit.circuit.exceptions.CircuitError: 'duplicate qubit arguments'\n",7,0.15781903266906738
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,68,172,CRP,survived,,,13,157.31454420089722
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,69,172,CRP,survived,,,13,154.82584714889526
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,70,172,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 184, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/utils/deprecation.py"", line 56, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2043, in assign_parameters\n    unrolled_param_dict = self._unroll_param_dict(parameters)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2100, in _unroll_param_dict\n    'len {}'.format(param, len(param), value, len(value)))\nqiskit.circuit.exceptions.CircuitError: ""ParameterVector angles, ['angles[0]', 'angles[1]', 'angles[2]', 'angles[3]'] has length 4, which differs from value list [0.39269908 0.78539816 1.57079633 3.14159265 0.        ] of len 5""\n",7,0.11806797981262207
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,71,174,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 143, in _double_controlled_phi_add_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 223, in broadcast_arguments\n    f'The amount of qubit({len(qargs)})/clbit({len(cargs)}) arguments does'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit(6)/clbit(0) arguments does not match the gate expectation (5).'\n",7,0.07158994674682617
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,72,182,CRP,survived,,,13,155.9873926639557
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,73,196,CRP,survived,,,13,164.17145037651062
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,74,215,CRP,survived,,,13,21.08670687675476
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,75,216,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 148, in _double_controlled_phi_add_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 413, in broadcast_arguments\n    f'The amount of qubit arguments {len(qargs)} does not match'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit arguments 5 does not match the instruction expectation (6).'\n",7,0.05713963508605957
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,76,217,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 144, in _double_controlled_phi_add_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 223, in broadcast_arguments\n    f'The amount of qubit({len(qargs)})/clbit({len(cargs)}) arguments does'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit(5)/clbit(0) arguments does not match the gate expectation (6).'\n",7,0.07326817512512207
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,77,220,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 260, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 56, in measure\n    return self.append(Measure(), [qubit], [cbit])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 39, in broadcast_arguments\n    raise CircuitError('register size error')\nqiskit.circuit.exceptions.CircuitError: 'register size error'\n",7,5.148029565811157
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,78,220,CRP,survived,,,13,172.89299607276917
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,79,220,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 220, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",7,0.044180870056152344
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,80,222,CRP,survived,,,13,144.79324746131897
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,81,222,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 222, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",7,0.03391766548156738
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,82,224,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 144, in _double_controlled_phi_add_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 223, in broadcast_arguments\n    f'The amount of qubit({len(qargs)})/clbit({len(cargs)}) arguments does'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit(6)/clbit(0) arguments does not match the gate expectation (5).'\n",7,0.0905466079711914
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,83,224,CRP,survived,,,13,144.36516094207764
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,84,224,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 224, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",7,0.04858112335205078
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,85,230,CRP,survived,,,13,135.5448031425476
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,86,230,CRP,survived,,,13,136.79607629776
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,87,233,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nIndexError: list index out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2270, in p\n    return self.append(PhaseGate(theta), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 942, in _bit_argument_conversion\n    raise CircuitError('Index out of range.') from ex\nqiskit.circuit.exceptions.CircuitError: 'Index out of range.'\n",7,0.03444385528564453
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,88,240,CRP,survived,,,13,150.9310064315796
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,89,245,CRP,survived,,,13,161.57660102844238
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,90,247,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 143, in _double_controlled_phi_add_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 223, in broadcast_arguments\n    f'The amount of qubit({len(qargs)})/clbit({len(cargs)}) arguments does'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit(6)/clbit(0) arguments does not match the gate expectation (5).'\n",7,0.08460044860839844
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,91,258,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 260, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 56, in measure\n    return self.append(Measure(), [qubit], [cbit])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 39, in broadcast_arguments\n    raise CircuitError('register size error')\nqiskit.circuit.exceptions.CircuitError: 'register size error'\n",7,3.200500249862671
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,92,258,CRP,survived,,,13,184.4328532218933
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,93,258,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 258, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",7,3.6504323482513428
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,94,270,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 194, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 279, in modinv\nValueError: The greatest common divisor of 2 and 15 is 2, so the modular inverse does not exist.\n",7,0.2783973217010498
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,95,271,CRP,survived,,,13,165.07449007034302
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,96,271,CRP,killed,test_shor_modinv_1__2__15__8_ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 75, in test_shor_modinv\n    self.assertTrue(modinv == expected)\nAssertionError: False is not true\n",8,136.8949737548828
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,97,277,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 194, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 279, in modinv\nValueError: The greatest common divisor of 2 and 15 is 1, so the modular inverse does not exist.\n",7,0.5092613697052002
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,98,278,CRP,survived,,,13,170.9666302204132
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,99,278,CRP,survived,,,13,166.41720700263977
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,100,284,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 314, in _get_factors\nZeroDivisionError: float division by zero\n",7,132.88069772720337
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,101,285,CRP,survived,,,13,161.6527738571167
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,102,285,CRP,survived,,,13,173.76819896697998
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,103,287,CRP,survived,,,13,209.09106540679932
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,104,288,CRP,survived,,,13,191.26699447631836
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,105,288,CRP,survived,,,13,172.6054925918579
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,106,291,CRP,survived,,,13,167.358891248703
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,107,291,CRP,survived,,,13,193.82669591903687
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,108,295,CRP,survived,,,13,194.44374203681946
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,109,302,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 307, in _get_factors\nIndexError: array index out of range\n",7,156.67520785331726
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,110,303,CRP,timeout,,,,1305.412868976593
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,111,303,CRP,timeout,,,,1305.3528983592987
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,112,304,CRP,timeout,,,,1305.4280333518982
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,113,304,CRP,timeout,,,,1305.3407940864563
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,114,309,CRP,survived,,,13,210.97884559631348
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,115,313,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 314, in _get_factors\nIndexError: array index out of range\n",7,163.9845733642578
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,116,314,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 318, in _get_factors\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 369, in _calculate_continued_fraction\nZeroDivisionError: division by zero\n",7,199.45178270339966
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,117,314,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 318, in _get_factors\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 369, in _calculate_continued_fraction\nZeroDivisionError: division by zero\n",7,177.46753311157227
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,118,315,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 318, in _get_factors\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 369, in _calculate_continued_fraction\nZeroDivisionError: division by zero\n",7,156.59569120407104
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,119,315,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 318, in _get_factors\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 369, in _calculate_continued_fraction\nZeroDivisionError: division by zero\n",7,193.2050895690918
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,120,321,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 314, in _get_factors\nIndexError: array index out of range\n",7,152.74871397018433
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,121,323,CRP,survived,,,13,259.69048523902893
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,122,323,CRP,survived,,,13,183.90361833572388
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,123,324,CRP,survived,,,13,174.60651898384094
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,124,324,CRP,survived,,,13,171.7034683227539
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,125,330,CRP,survived,,,13,185.2706069946289
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,126,331,CRP,survived,,,13,203.48052740097046
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,127,334,CRP,survived,,,13,255.49990272521973
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,128,335,CRP,survived,,,13,263.0886082649231
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,129,335,CRP,survived,,,13,256.55424642562866
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,130,339,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nAssertionError: Lists differ: [3, 3] != [3, 5]\n\nFirst differing element 1:\n3\n5\n\n- [3, 3]\n?     ^\n\n+ [3, 5]\n?     ^\n\n",7,199.43539476394653
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,131,340,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nAssertionError: Lists differ: [3, 3] != [3, 5]\n\nFirst differing element 1:\n3\n5\n\n- [3, 3]\n?     ^\n\n+ [3, 5]\n?     ^\n\n",7,170.8491566181183
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,132,345,CRP,killed,test_shor_no_factors_1_5 (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 46, in test_shor_no_factors\n    self.assertTrue(ret['factors'] == [])\nAssertionError: False is not true\n",10,203.19318842887878
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,133,346,CRP,survived,,,13,234.90492510795593
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,134,346,CRP,survived,,,13,218.27954125404358
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,135,349,CRP,survived,,,13,229.56499195098877
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,136,349,CRP,survived,,,13,237.7873899936676
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,137,350,CRP,survived,,,13,256.98570585250854
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,138,350,CRP,survived,,,13,198.10326075553894
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,139,357,CRP,survived,,,13,190.07149720191956
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,140,357,CRP,survived,,,13,193.9318027496338
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,141,358,CRP,survived,,,13,212.88874769210815
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,142,358,CRP,survived,,,13,183.47331142425537
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,143,366,CRP,survived,,,13,172.51414942741394
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,144,368,CRP,survived,,,13,196.77252840995789
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,145,369,CRP,survived,,,13,155.92204022407532
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,146,369,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 318, in _get_factors\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 369, in _calculate_continued_fraction\nIndexError: array index out of range\n",7,132.86245036125183
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,147,371,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 318, in _get_factors\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 371, in _calculate_continued_fraction\nIndexError: array index out of range\n",7,123.40581560134888
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,148,376,CRP,survived,,,13,149.07722568511963
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,149,376,CRP,survived,,,13,152.3922266960144
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,150,377,CRP,survived,,,13,174.70472931861877
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,151,377,CRP,survived,,,13,204.18037843704224
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,152,381,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 381, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'mutpy'\n",7,0.04229402542114258
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,153,381,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 381, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: ''\n",7,0.047859907150268555
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,154,382,CRP,survived,,,13,223.6796360015869
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,155,382,CRP,survived,,,13,229.07880020141602
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,156,386,CRP,survived,,,13,177.02418684959412
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,157,386,CRP,survived,,,13,174.04650735855103
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,158,393,CRP,survived,,,13,215.20317244529724
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,159,393,CRP,survived,,,13,202.02631902694702
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,160,393,CRP,survived,,,13,177.32160353660583
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,161,399,CRP,survived,,,13,180.26405143737793
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,162,400,CRP,survived,,,13,196.52616930007935
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,163,400,CRP,survived,,,13,183.8509075641632
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,164,400,CRP,survived,,,13,182.55248045921326
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,165,405,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 37, in test_shor_factoring\n    self.assertTrue(result_dict[""total_counts""] >= result_dict[""successful_counts""])\nAssertionError: False is not true\n",7,165.50526404380798
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,166,405,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 37, in test_shor_factoring\n    self.assertTrue(result_dict[""total_counts""] >= result_dict[""successful_counts""])\nAssertionError: False is not true\n",7,194.24428725242615
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,167,411,CRP,survived,,,13,221.81979966163635
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,168,411,CRP,survived,,,13,198.70489144325256
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,169,416,CRP,survived,,,13,208.2677779197693
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,170,416,CRP,survived,,,13,212.4637734889984
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,171,419,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 419, in _run\nKeyError: 'mutpy'\n",7,166.7388837337494
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,172,419,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 419, in _run\nKeyError: ''\n",7,180.8876142501831
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,173,419,CRP,survived,,,13,196.36833596229553
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,174,420,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 420, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'mutpy'\n",7,166.12885975837708
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,175,420,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 420, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: ''\n",7,160.37032103538513
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,176,421,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 421, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: 'mutpy'\n",7,157.1987588405609
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,261.0623788833618,0.060452938079833984,1.391601324081421,29326.91299176216,185.7343475818634,29514.099393606186,29779.14998102188,177,421,CRP,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 421, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/collections/__init__.py"", line 1025, in __getitem__\n    raise KeyError(key)\nKeyError: ''\n",7,143.17941617965698
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,193.28386044502258,0.05038738250732422,0.0197908878326416,2899.4668748378754,3.806575059890747,2903.343628168106,3099.964038848877,1,116,DDL,timeout,,,,966.5258500576019
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,193.28386044502258,0.05038738250732422,0.0197908878326416,2899.4668748378754,3.806575059890747,2903.343628168106,3099.964038848877,2,266,DDL,timeout,,,,966.4385716915131
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,193.28386044502258,0.05038738250732422,0.0197908878326416,2899.4668748378754,3.806575059890747,2903.343628168106,3099.964038848877,3,362,DDL,timeout,,,,966.4976081848145
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,207.30063104629517,0.0565028190612793,NA,NA,NA,0.2905147075653076,210.13526272773743,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,191.41898775100708,0.050737619400024414,NA,NA,NA,0.24309897422790527,194.345196723938,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,172.83035373687744,0.04930901527404785,NA,NA,NA,0.24194788932800293,175.57592725753784,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,145.97348189353943,0.05623030662536621,0.008431434631347656,1459.9621908664703,1.7838006019592285,1461.8106532096863,1609.9270853996277,1,55,IOD,timeout,,,,729.9801614284515
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,145.97348189353943,0.05623030662536621,0.008431434631347656,1459.9621908664703,1.7838006019592285,1461.8106532096863,1609.9270853996277,2,380,IOD,timeout,,,,729.9799065589905
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,148.0102035999298,0.057697296142578125,0.0058209896087646484,171.12088584899902,1.2413432598114014,172.42574739456177,322.9460208415985,1,55,IOP,survived,,,13,171.11943697929382
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,206.71910119056702,0.04658985137939453,0.028975725173950195,734.8458099365234,4.7883076667785645,739.7096831798553,949.3529288768768,1,81,LCR,survived,,,13,189.51080322265625
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,206.71910119056702,0.04658985137939453,0.028975725173950195,734.8458099365234,4.7883076667785645,739.7096831798553,949.3529288768768,2,86,LCR,survived,,,13,187.40013194084167
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,206.71910119056702,0.04658985137939453,0.028975725173950195,734.8458099365234,4.7883076667785645,739.7096831798553,949.3529288768768,3,310,LCR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 314, in _get_factors\nZeroDivisionError: float division by zero\n",7,169.44718265533447
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,206.71910119056702,0.04658985137939453,0.028975725173950195,734.8458099365234,4.7883076667785645,739.7096831798553,949.3529288768768,4,358,LCR,survived,,,13,188.48067784309387
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,185.72766757011414,0.04912066459655762,NA,NA,NA,0.24032878875732422,188.57782077789307,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,166.77260565757751,0.04961657524108887,NA,NA,NA,0.23846006393432617,169.3925976753235,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,1,81,ROR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 34, in test_shor_factoring\n    shor = Shor(n_v)\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 82, in __init__\nValueError: The input needs to be an odd integer greater than 1.\n",7,0.028944730758666992
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,2,81,ROR,survived,,,13,196.64649939537048
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,3,81,ROR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 34, in test_shor_factoring\n    shor = Shor(n_v)\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 82, in __init__\nValueError: The input needs to be an odd integer greater than 1.\n",7,0.04965662956237793
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,4,86,ROR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 34, in test_shor_factoring\n    shor = Shor(n_v)\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 87, in __init__\nValueError: The integer a needs to satisfy a < N and gcd(a, N) = 1.\n",7,0.02514338493347168
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,5,86,ROR,survived,,,13,147.2060272693634
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,6,86,ROR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 34, in test_shor_factoring\n    shor = Shor(n_v)\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 87, in __init__\nValueError: The integer a needs to satisfy a < N and gcd(a, N) = 1.\n",7,0.07365703582763672
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,7,111,ROR,survived,,,13,208.317720413208
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,8,270,ROR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 194, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 279, in modinv\nValueError: The greatest common divisor of 2 and 15 is 15, so the modular inverse does not exist.\n",7,0.2826223373413086
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,9,277,ROR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 194, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 279, in modinv\nValueError: The greatest common divisor of 2 and 15 is 1, so the modular inverse does not exist.\n",7,0.2776985168457031
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,10,287,ROR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,173.22344636917114
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,11,287,ROR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 314, in _get_factors\nZeroDivisionError: float division by zero\n",7,164.05012273788452
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,12,310,ROR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,137.75516819953918
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,13,310,ROR,survived,,,13,157.58065915107727
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,14,313,ROR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,142.4650981426239
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,15,313,ROR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 318, in _get_factors\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 369, in _calculate_continued_fraction\nZeroDivisionError: division by zero\n",7,123.03470754623413
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,16,323,ROR,survived,,,13,187.41323971748352
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,17,330,ROR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 412, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 331, in _get_factors\nOverflowError: (34, 'Numerical result out of range')\n",7,129.06506395339966
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,18,330,ROR,survived,,,13,151.3291962146759
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,19,334,ROR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,132.10025238990784
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,20,334,ROR,survived,,,13,157.7583384513855
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,21,349,ROR,survived,,,13,149.34113335609436
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,170.95165705680847,0.05041027069091797,0.13506197929382324,2515.8207173347473,22.360977172851562,2538.3671667575836,2712.1048398017883,22,399,ROR,survived,,,13,157.75902223587036
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,168.60866284370422,0.051723480224609375,0.006847858428955078,159.10847449302673,1.3358614444732666,160.50290727615356,331.4873924255371,1,55,SCD,survived,,,13,159.10656309127808
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,209.1919882297516,0.06793546676635742,0.005797863006591797,0.04303550720214844,1.8509619235992432,1.9677307605743408,213.92890548706055,1,380,SCI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 381, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 75, in _run\n    raise NotImplementedError()\nNotImplementedError\n",7,0.04128694534301758
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,204.58301520347595,0.07399153709411621,0.05467653274536133,713.15709233284,7.602745771408081,720.8885061740875,928.267644405365,1,107,SIR,survived,,,13,260.1994173526764
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,204.58301520347595,0.07399153709411621,0.05467653274536133,713.15709233284,7.602745771408081,720.8885061740875,928.267644405365,2,114,SIR,survived,,,13,244.8818166255951
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,204.58301520347595,0.07399153709411621,0.05467653274536133,713.15709233284,7.602745771408081,720.8885061740875,928.267644405365,3,166,SIR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 185, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1013, in append\n    instructions.add(self._append(instruction, qarg, carg), qarg, carg)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1036, in _append\n    self._check_dups(qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1151, in _check_dups\n    raise CircuitError(""duplicate qubit arguments"")\nqiskit.circuit.exceptions.CircuitError: 'duplicate qubit arguments'\n",7,0.2059309482574463
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,204.58301520347595,0.07399153709411621,0.05467653274536133,713.15709233284,7.602745771408081,720.8885061740875,928.267644405365,4,166,SIR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 185, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1013, in append\n    instructions.add(self._append(instruction, qarg, carg), qarg, carg)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1036, in _append\n    self._check_dups(qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1151, in _check_dups\n    raise CircuitError(""duplicate qubit arguments"")\nqiskit.circuit.exceptions.CircuitError: 'duplicate qubit arguments'\n",7,0.41801977157592773
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,204.58301520347595,0.07399153709411621,0.05467653274536133,713.15709233284,7.602745771408081,720.8885061740875,928.267644405365,5,167,SIR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 174, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 143, in _double_controlled_phi_add_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 223, in broadcast_arguments\n    f'The amount of qubit({len(qargs)})/clbit({len(cargs)}) arguments does'\nqiskit.circuit.exceptions.CircuitError: 'The amount of qubit(10)/clbit(0) arguments does not match the gate expectation (5).'\n",7,0.10739278793334961
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,204.58301520347595,0.07399153709411621,0.05467653274536133,713.15709233284,7.602745771408081,720.8885061740875,928.267644405365,6,400,SIR,survived,,,13,207.33237481117249
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,218.56508469581604,0.058287620544433594,0.06924128532409668,1532.910106420517,26.422940492630005,1559.4605758190155,1781.090392589569,1,121,QGD,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 184, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/utils/deprecation.py"", line 56, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2051, in assign_parameters\n    ', '.join(map(str, params_not_in_circuit))))\nqiskit.circuit.exceptions.CircuitError: 'Cannot bind parameters (angles[0], angles[1], angles[2], angles[3], angles[4]) not present in the circuit.'\n",7,0.07071995735168457
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,218.56508469581604,0.058287620544433594,0.06924128532409668,1532.910106420517,26.422940492630005,1559.4605758190155,1781.090392589569,2,146,QGD,survived,,,13,263.46849727630615
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,218.56508469581604,0.058287620544433594,0.06924128532409668,1532.910106420517,26.422940492630005,1559.4605758190155,1781.090392589569,3,153,QGD,survived,,,13,251.87056469917297
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,218.56508469581604,0.058287620544433594,0.06924128532409668,1532.910106420517,26.422940492630005,1559.4605758190155,1781.090392589569,4,154,QGD,survived,,,13,237.3957006931305
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,218.56508469581604,0.058287620544433594,0.06924128532409668,1532.910106420517,26.422940492630005,1559.4605758190155,1781.090392589569,5,155,QGD,survived,,,13,234.23125410079956
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,218.56508469581604,0.058287620544433594,0.06924128532409668,1532.910106420517,26.422940492630005,1559.4605758190155,1781.090392589569,6,191,QGD,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,167.488525390625
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,218.56508469581604,0.058287620544433594,0.06924128532409668,1532.910106420517,26.422940492630005,1559.4605758190155,1781.090392589569,7,237,QGD,survived,,,13,228.2934262752533
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,218.56508469581604,0.058287620544433594,0.06924128532409668,1532.910106420517,26.422940492630005,1559.4605758190155,1781.090392589569,8,240,QGD,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,150.07340121269226
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,1,121,QGI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2507, in cx\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.04959583282470703
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,2,121,QGI,survived,,,13,488.1583001613617
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,3,121,QGI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2250, in ch\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.044663429260253906
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,4,121,QGI,survived,,,13,377.55359077453613
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,5,121,QGI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2610, in cz\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.04675889015197754
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,6,121,QGI,survived,,,13,335.09330892562866
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,7,121,QGI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2598, in cy\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.043411970138549805
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,8,121,QGI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2516, in dcx\n    return self.append(DCXGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.03614544868469238
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,9,121,QGI,timeout,,,,1171.83757686615
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,10,121,QGI,survived,,,13,346.0134382247925
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,11,121,QGI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2409, in csx\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.05523347854614258
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,12,121,QGI,survived,,,13,293.643985748291
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,13,121,QGI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2383, in iswap\n    return self.append(iSwapGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.04736900329589844
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,14,121,QGI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2378, in swap\n    return self.append(SwapGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.05170464515686035
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,15,146,QGI,survived,,,13,219.9443964958191
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,16,146,QGI,survived,,,13,206.07757806777954
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,17,146,QGI,survived,,,13,183.28958582878113
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,18,146,QGI,survived,,,13,192.2993757724762
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,19,146,QGI,survived,,,13,180.12682247161865
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,20,146,QGI,survived,,,13,176.65660095214844
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,21,146,QGI,survived,,,13,203.23740458488464
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,22,146,QGI,survived,,,13,200.09283781051636
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,23,146,QGI,timeout,,,,1171.731862783432
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,24,146,QGI,survived,,,13,208.4032599925995
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,25,146,QGI,survived,,,13,215.28629231452942
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,26,146,QGI,survived,,,13,199.82382655143738
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,27,146,QGI,survived,,,13,197.99656558036804
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,28,146,QGI,survived,,,13,188.29478526115417
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,29,153,QGI,survived,,,13,173.4914665222168
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,30,153,QGI,survived,,,13,182.41646146774292
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,31,153,QGI,survived,,,13,170.65144562721252
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,32,153,QGI,survived,,,13,144.91975331306458
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,33,153,QGI,survived,,,13,133.69783782958984
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,34,153,QGI,survived,,,13,155.89085459709167
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,35,153,QGI,survived,,,13,131.00949215888977
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,36,153,QGI,survived,,,13,135.8925507068634
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,37,153,QGI,survived,,,13,151.42813229560852
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,38,153,QGI,survived,,,13,131.5821602344513
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,39,153,QGI,survived,,,13,131.25087022781372
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,40,154,QGI,survived,,,13,132.43019342422485
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,41,154,QGI,survived,,,13,121.49238610267639
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,42,154,QGI,survived,,,13,120.70619916915894
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,43,154,QGI,survived,,,13,119.53531837463379
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,44,154,QGI,survived,,,13,141.8778097629547
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,45,154,QGI,survived,,,13,169.33270454406738
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,46,154,QGI,survived,,,13,162.14869904518127
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,47,154,QGI,survived,,,13,137.20178604125977
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,48,154,QGI,timeout,,,,1171.8288788795471
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,49,154,QGI,survived,,,13,128.04802131652832
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,50,154,QGI,survived,,,13,129.87828636169434
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,51,154,QGI,survived,,,13,121.16570377349854
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,52,154,QGI,survived,,,13,134.05691576004028
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,53,154,QGI,survived,,,13,121.66881561279297
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,54,155,QGI,survived,,,13,114.14252924919128
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,55,155,QGI,survived,,,13,132.29682636260986
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,56,155,QGI,survived,,,13,118.55457425117493
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,57,155,QGI,survived,,,13,131.27696776390076
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,58,155,QGI,survived,,,13,125.79649662971497
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,59,155,QGI,survived,,,13,119.89373517036438
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,60,155,QGI,survived,,,13,117.49254703521729
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,61,155,QGI,survived,,,13,108.56274056434631
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,62,155,QGI,survived,,,13,115.11778211593628
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,63,155,QGI,survived,,,13,121.87872123718262
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,64,155,QGI,survived,,,13,119.58822250366211
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,65,191,QGI,survived,,,13,127.0747766494751
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,66,191,QGI,survived,,,13,115.73099613189697
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,67,191,QGI,survived,,,13,119.93454599380493
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,68,191,QGI,survived,,,13,124.77499318122864
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,69,191,QGI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 191, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/utils/deprecation.py"", line 78, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2475, in u2\n    return self.append(U2Gate(phi, lam), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/standard_gates/u2.py"", line 63, in __init__\n    super().__init__('u2', 1, [phi, lam], label=label)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 40, in __init__\n    super().__init__(name, num_qubits, 0, params)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 88, in __init__\n    self.params = params\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 191, in params\n    self._params.append(self.validate_parameter(single_param))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 259, in validate_parameter\n    self.name))\nqiskit.circuit.exceptions.CircuitError: ""Invalid param type <class 'qiskit.circuit.quantumregister.Qubit'> for gate u2.""\n",7,0.45481061935424805
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,70,191,QGI,survived,,,13,122.53925728797913
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,71,191,QGI,survived,,,13,117.17389750480652
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,72,191,QGI,survived,,,13,108.51345658302307
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,73,191,QGI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,106.1611897945404
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,74,191,QGI,survived,,,13,105.5158200263977
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,75,191,QGI,survived,,,13,116.26645064353943
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,76,191,QGI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 191, in _controlled_multiple_mod_N\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2288, in r\n    return self.append(RGate(theta, phi), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/standard_gates/r.py"", line 48, in __init__\n    super().__init__('r', 1, [theta, phi])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 40, in __init__\n    super().__init__(name, num_qubits, 0, params)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 88, in __init__\n    self.params = params\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 191, in params\n    self._params.append(self.validate_parameter(single_param))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 259, in validate_parameter\n    self.name))\nqiskit.circuit.exceptions.CircuitError: ""Invalid param type <class 'qiskit.circuit.quantumregister.Qubit'> for gate r.""\n",7,0.2899947166442871
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,77,191,QGI,survived,,,13,122.13389563560486
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,78,237,QGI,survived,,,13,119.2008752822876
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,79,237,QGI,survived,,,13,112.66462802886963
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,80,237,QGI,survived,,,13,120.62352848052979
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,81,237,QGI,survived,,,13,120.2049491405487
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,82,237,QGI,survived,,,13,124.77875208854675
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,83,237,QGI,survived,,,13,132.16315627098083
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,84,237,QGI,survived,,,13,128.67610692977905
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,85,237,QGI,survived,,,13,119.9297924041748
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,86,237,QGI,survived,,,13,125.0014488697052
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,87,237,QGI,survived,,,13,119.22654700279236
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,88,237,QGI,survived,,,13,122.65706396102905
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,89,240,QGI,survived,,,13,124.92162322998047
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,90,240,QGI,survived,,,13,120.91350507736206
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,91,240,QGI,survived,,,13,120.10595679283142
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,92,240,QGI,survived,,,13,120.8922860622406
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,93,240,QGI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,106.35492467880249
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,94,240,QGI,survived,,,13,133.53698778152466
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,95,240,QGI,survived,,,13,143.44508337974548
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,96,240,QGI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,107.04282736778259
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,97,240,QGI,survived,,,13,132.10113310813904
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,98,240,QGI,survived,,,13,120.1593017578125
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,234.34262561798096,0.09022927284240723,0.6240029335021973,16614.241164445877,7429.253340482712,24044.208737134933,24281.475060224533,99,240,QGI,survived,,,13,118.76467370986938
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,1,121,QGR,timeout,,,,1095.234792470932
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,2,121,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2516, in dcx\n    return self.append(DCXGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.04305219650268555
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,3,121,QGR,survived,,,13,215.62877702713013
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,4,121,QGR,survived,,,13,193.6545329093933
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,5,121,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2507, in cx\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.04447531700134277
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,6,121,QGR,survived,,,13,193.73729634284973
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,7,121,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2409, in csx\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.0497889518737793
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,8,121,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2378, in swap\n    return self.append(SwapGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.05567574501037598
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,9,121,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2250, in ch\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.045506954193115234
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,10,121,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2598, in cy\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.0442049503326416
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,11,121,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2383, in iswap\n    return self.append(iSwapGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.04379105567932129
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,12,121,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2610, in cz\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.057814598083496094
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,13,121,QGR,survived,,,13,246.2287814617157
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,14,146,QGR,timeout,,,,1095.2419464588165
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,15,146,QGR,survived,,,13,214.72056436538696
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,16,146,QGR,survived,,,13,176.7538878917694
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,17,146,QGR,survived,,,13,162.25780940055847
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,18,146,QGR,survived,,,13,155.9223244190216
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,19,146,QGR,survived,,,13,138.50821590423584
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,20,146,QGR,survived,,,13,164.1663601398468
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,21,146,QGR,survived,,,13,166.10231041908264
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,22,146,QGR,survived,,,13,140.84750843048096
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,23,146,QGR,survived,,,13,129.3531894683838
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,24,146,QGR,survived,,,13,131.53331851959229
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,25,146,QGR,survived,,,13,127.73397397994995
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,26,146,QGR,survived,,,13,128.00795197486877
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,27,153,QGR,survived,,,13,121.52597332000732
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,28,153,QGR,survived,,,13,127.62552618980408
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,29,153,QGR,survived,,,13,116.60774159431458
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,30,153,QGR,survived,,,13,125.3604462146759
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,31,153,QGR,survived,,,13,131.4131760597229
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,32,153,QGR,survived,,,13,118.06535196304321
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,33,153,QGR,survived,,,13,140.41711831092834
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,34,153,QGR,survived,,,13,175.15454363822937
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,35,153,QGR,survived,,,13,169.84067726135254
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,36,153,QGR,survived,,,13,145.8048071861267
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,37,154,QGR,timeout,,,,1095.245325088501
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,38,154,QGR,survived,,,13,124.05028510093689
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,39,154,QGR,survived,,,13,130.12354731559753
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,40,154,QGR,survived,,,13,118.25616312026978
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,41,154,QGR,survived,,,13,118.65152359008789
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,42,154,QGR,survived,,,13,106.86476540565491
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,43,154,QGR,survived,,,13,121.19570660591125
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,44,154,QGR,survived,,,13,120.13932728767395
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,45,154,QGR,survived,,,13,131.99994564056396
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,46,154,QGR,survived,,,13,132.07493019104004
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,47,154,QGR,survived,,,13,129.00385332107544
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,48,154,QGR,survived,,,13,119.30622339248657
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,49,154,QGR,survived,,,13,116.98704838752747
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,50,155,QGR,survived,,,13,126.03823852539062
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,51,155,QGR,survived,,,13,125.98627018928528
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,52,155,QGR,survived,,,13,105.01844668388367
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,53,155,QGR,survived,,,13,133.8350977897644
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,54,155,QGR,survived,,,13,116.0739107131958
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,55,155,QGR,survived,,,13,107.06909537315369
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,56,155,QGR,survived,,,13,121.43413496017456
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,57,155,QGR,survived,,,13,117.82764315605164
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,58,155,QGR,survived,,,13,115.53395700454712
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,59,155,QGR,survived,,,13,116.41425371170044
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,60,191,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,97.16524481773376
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,61,191,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,93.79403162002563
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,62,191,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,90.07192420959473
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,63,191,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,94.0245566368103
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,64,191,QGR,survived,,,13,121.26674747467041
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,65,191,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,85.7857255935669
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,66,191,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,97.63788747787476
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,67,191,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,89.08870315551758
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,68,191,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,87.40558314323425
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,69,191,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 191, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2288, in r\n    return self.append(RGate(theta, phi), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/standard_gates/r.py"", line 48, in __init__\n    super().__init__('r', 1, [theta, phi])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 40, in __init__\n    super().__init__(name, num_qubits, 0, params)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 88, in __init__\n    self.params = params\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 191, in params\n    self._params.append(self.validate_parameter(single_param))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 259, in validate_parameter\n    self.name))\nqiskit.circuit.exceptions.CircuitError: ""Invalid param type <class 'qiskit.circuit.quantumregister.Qubit'> for gate r.""\n",7,0.20113849639892578
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,70,191,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 191, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/utils/deprecation.py"", line 78, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2475, in u2\n    return self.append(U2Gate(phi, lam), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/standard_gates/u2.py"", line 63, in __init__\n    super().__init__('u2', 1, [phi, lam], label=label)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 40, in __init__\n    super().__init__(name, num_qubits, 0, params)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 88, in __init__\n    self.params = params\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 191, in params\n    self._params.append(self.validate_parameter(single_param))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 259, in validate_parameter\n    self.name))\nqiskit.circuit.exceptions.CircuitError: ""Invalid param type <class 'qiskit.circuit.quantumregister.Qubit'> for gate u2.""\n",7,0.2110903263092041
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,71,191,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,86.92223834991455
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,72,237,QGR,survived,,,13,128.21140456199646
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,73,237,QGR,survived,,,13,118.89144730567932
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,74,237,QGR,survived,,,13,124.1957106590271
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,75,237,QGR,survived,,,13,117.0649790763855
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,76,237,QGR,survived,,,13,133.5245702266693
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,77,237,QGR,survived,,,13,134.49726176261902
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,78,237,QGR,survived,,,13,133.45229244232178
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,79,237,QGR,survived,,,13,119.99212837219238
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,80,237,QGR,survived,,,13,126.34209370613098
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,81,237,QGR,survived,,,13,127.69913053512573
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,82,240,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,104.04804182052612
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,83,240,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,102.86600303649902
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,84,240,QGR,survived,,,13,114.57095098495483
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,85,240,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,105.12157940864563
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,86,240,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,106.04209542274475
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,87,240,QGR,survived,,,13,130.16468024253845
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,88,240,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,106.259024143219
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,89,240,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,116.31399822235107
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,90,240,QGR,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,111.40983819961548
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,219.02346396446228,0.07381415367126465,0.5619549751281738,13327.572853803635,5563.084147930145,18891.29277086258,19112.986211776733,91,240,QGR,survived,,,13,126.22311449050903
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,177.42048597335815,0.04874730110168457,0.006044626235961914,178.06118059158325,1.2806780338287354,179.39665055274963,359.3879222869873,1,260,QMD,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 36, in test_shor_factoring\n    self.assertListEqual(result_dict['factors'][0], factors)\nIndexError: list index out of range\n",7,178.05976963043213
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,198.4474310874939,0.05228686332702637,0.053241729736328125,998.5736825466156,44.87598156929016,1043.5551927089691,1245.5735907554626,1,121,QMI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 233, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 121, in _phi_add_gate\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2500, in x\n    return self.append(XGate(label=label), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 2.945243112740431 (<class 'numpy.float64'>)""\n",7,0.04245424270629883
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,198.4474310874939,0.05228686332702637,0.053241729736328125,998.5736825466156,44.87598156929016,1043.5551927089691,1245.5735907554626,2,146,QMI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 176, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 447, in inverse\n    inverse_circ._append(inst.inverse(), qargs, cargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 322, in inverse\n    raise CircuitError(""inverse() not implemented for %s."" % self.name)\nqiskit.circuit.exceptions.CircuitError: 'inverse() not implemented for measure.'\n",7,0.1376638412475586
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,198.4474310874939,0.05228686332702637,0.053241729736328125,998.5736825466156,44.87598156929016,1043.5551927089691,1245.5735907554626,3,153,QMI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 176, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 447, in inverse\n    inverse_circ._append(inst.inverse(), qargs, cargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 322, in inverse\n    raise CircuitError(""inverse() not implemented for %s."" % self.name)\nqiskit.circuit.exceptions.CircuitError: 'inverse() not implemented for measure.'\n",7,0.12896156311035156
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,198.4474310874939,0.05228686332702637,0.053241729736328125,998.5736825466156,44.87598156929016,1043.5551927089691,1245.5735907554626,4,154,QMI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 176, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 447, in inverse\n    inverse_circ._append(inst.inverse(), qargs, cargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 322, in inverse\n    raise CircuitError(""inverse() not implemented for %s."" % self.name)\nqiskit.circuit.exceptions.CircuitError: 'inverse() not implemented for measure.'\n",7,0.170013427734375
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,198.4474310874939,0.05228686332702637,0.053241729736328125,998.5736825466156,44.87598156929016,1043.5551927089691,1245.5735907554626,5,155,QMI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 247, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 176, in _controlled_multiple_mod_N\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 447, in inverse\n    inverse_circ._append(inst.inverse(), qargs, cargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 322, in inverse\n    raise CircuitError(""inverse() not implemented for %s."" % self.name)\nqiskit.circuit.exceptions.CircuitError: 'inverse() not implemented for measure.'\n",7,0.1798720359802246
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,198.4474310874939,0.05228686332702637,0.053241729736328125,998.5736825466156,44.87598156929016,1043.5551927089691,1245.5735907554626,6,191,QMI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 403, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 305, in execute\n    circuits = self.transpile(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 264, in transpile\n    **self._compile_config)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 245, in transpile\n    circuits = parallel_map(_transpile_circuit, list(zip(circuits, transpile_args)))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 128, in parallel_map\n    return [task(values[0], *task_args, **task_kwargs)]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 329, in _transpile_circuit\n    output_name=transpile_config['output_name'])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 216, in run\n    return self._run_single_circuit(circuits, output_name, callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 277, in _run_single_circuit\n    result = running_passmanager.run(circuit, output_name=output_name, callback=callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 122, in run\n    dag = self._do_pass(pass_, dag, passset.options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 153, in _do_pass\n    dag = self._run_this_pass(pass_, dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 165, in _run_this_pass\n    new_dag = pass_.run(dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passes/basis/unroll_custom_definitions.py"", line 94, in run\n    dag.substitute_node_with_dag(node, unrolled_dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/dagcircuit/dagcircuit.py"", line 997, in substitute_node_with_dag\n    self._check_wires_list(wires, node)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/dagcircuit/dagcircuit.py"", line 829, in _check_wires_list\n    % (wire_tot, len(wires)))\nqiskit.dagcircuit.exceptions.DAGCircuitError: 'expected 11 wires, got 55'\n",7,5.490197658538818
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,198.4474310874939,0.05228686332702637,0.053241729736328125,998.5736825466156,44.87598156929016,1043.5551927089691,1245.5735907554626,7,237,QMI,killed,test_shor_factoring_1__15___qasm_simulator____3__5__ (test.aqua.test_shor.TestShor),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_shor.py"", line 35, in test_shor_factoring\n    result_dict = shor.run(QuantumInstance(BasicAer.get_backend(backend), shots=1000))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 402, in _run\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 237, in construct_circuit\n  File ""qiskit.aqua.algorithms.factorizers.shor"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 56, in measure\n    return self.append(Measure(), [qubit], [cbit])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 39, in broadcast_arguments\n    raise CircuitError('register size error')\nqiskit.circuit.exceptions.CircuitError: 'register size error'\n",7,0.06518030166625977
qiskit.aqua.algorithms.factorizers.shor,test.aqua.test_shor,13,198.4474310874939,0.05228686332702637,0.053241729736328125,998.5736825466156,44.87598156929016,1043.5551927089691,1245.5735907554626,8,240,QMI,timeout,,,,992.3454570770264
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,591.8865857124329,0.06706380844116211,0.01689624786376953,1385.0295464992523,2.8603668212890625,1387.9738733768463,1982.086387872696,1,381,AOD,survived,,,21,705.3429701328278
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,591.8865857124329,0.06706380844116211,0.01689624786376953,1385.0295464992523,2.8603668212890625,1387.9738733768463,1982.086387872696,2,406,AOD,survived,,,21,679.6819684505463
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,1,125,AOR,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 95, in test_hhl_diagonal\n    init_state, reci, num_q, num_a, orig_size)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 126, in __init__\nValueError: Input matrix dimension must be 2**n!\n",1,1.0836939811706543
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,2,178,AOR,survived,,,21,684.5082037448883
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,3,256,AOR,killed,test_hhl_diagonal_other_dim_2__5__5_ (test.aqua.test_hhl.TestHHL),"concurrent.futures.process._RemoteTraceback: \n""""""\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 232, in _process_worker\n    r = call_item.fn(*call_item.args, **call_item.kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 191, in _process_chunk\n    return [fn(*args) for args in chunk]\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 191, in <listcomp>\n    return [fn(*args) for args in chunk]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 90, in _task_wrapper\n    return task(value, *task_args, **task_kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/legacy/op_converter.py"", line 37, in _conversion\n    trace_value = np.sum(matrix.dot(pauli.to_matrix(sparse=True)).diagonal())\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/sparse/base.py"", line 359, in dot\n    return self * other\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/sparse/base.py"", line 479, in __mul__\n    raise ValueError('dimension mismatch')\nValueError: dimension mismatch\n""""""\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 269, in test_hhl_diagonal_other_dim\n    eigs = TestHHL._create_eigs(matrix, num_ancillary, True)\n  File ""./test/aqua/test_hhl.py"", line 62, in _create_eigs\n    ne_qfts=ne_qfts)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/eigs/eigs_qpe.py"", line 67, in __init__\n    self._operator = op_converter.to_weighted_pauli_operator(operator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/legacy/op_converter.py"", line 90, in to_weighted_pauli_operator\n    num_processes=aqua_globals.num_processes)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 157, in parallel_map\n    raise error\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 147, in parallel_map\n    results = list(future)\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 476, in _chain_from_iterable_of_lists\n    for element in iterable:\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 586, in result_iterator\n    yield fs.pop().result()\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 425, in result\n    return self.__get_result()\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 384, in __get_result\n    raise self._exception\nValueError: dimension mismatch\n",13,500.32843470573425
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,4,260,AOR,killed,test_hhl_diagonal_other_dim_2__5__5_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 275, in test_hhl_diagonal_other_dim\n    init_state = Custom(num_q, state_vector=vector)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/initial_states/custom.py"", line 111, in __init__\n    len(state_vector), self._num_qubits))\nqiskit.aqua.aqua_error.AquaError: 'The state vector length 6 is incompatible with the number of qubits 3'\n",13,435.4986951351166
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,5,280,AOR,timeout,,,,3640.2978780269623
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,6,280,AOR,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 283, in expand_to_hermitian\nValueError: could not broadcast input array from shape (2,2) into shape (1,0)\n",20,491.1765789985657
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,7,280,AOR,survived,,,21,516.7528412342072
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,8,295,AOR,survived,,,21,486.29830741882324
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,9,295,AOR,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 423, in test_hhl_non_hermitian\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 411, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 329, in _statevector_simulation\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 402, in _hhl_results\nValueError: shapes (2,2) and (4,) not aligned: 2 (dim 1) != 4 (dim 0)\n",20,485.6384699344635
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,10,304,AOR,survived,,,21,487.8700170516968
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,11,304,AOR,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 423, in test_hhl_non_hermitian\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 411, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 329, in _statevector_simulation\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 399, in _hhl_results\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 306, in _resize_matrix\nValueError: could not broadcast input array from shape (4,0) into shape (8,8)\n",20,490.28291368484497
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,12,328,AOR,killed,test_hhl_diagonal_3__1__0_1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 104, in test_hhl_diagonal\n    fidelity = state_fidelity(ref_normed, hhl_normed)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/measures.py"", line 52, in state_fidelity\n    state2 = _format_state(state2, validate=validate)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 134, in _format_state\n    raise QiskitError(""Input quantum state is not a valid"")\nqiskit.exceptions.QiskitError: 'Input quantum state is not a valid'\n",3,4.31883430480957
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,13,328,AOR,survived,,,21,498.97640585899353
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,14,358,AOR,survived,,,21,542.526064157486
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,15,358,AOR,survived,,,21,559.2987339496613
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,16,358,AOR,survived,,,21,548.6314797401428
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,17,381,AOR,survived,,,21,475.5426731109619
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,18,383,AOR,killed,test_hhl_diagonal_qasm_1___0__1__ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 243, in test_hhl_diagonal_qasm\n    np.testing.assert_approx_equal(fidelity, 1, significant=1)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 1 significant digits:\n ACTUAL: 0.21132486540518675\n DESIRED: 1.0\n",14,343.9984350204468
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,19,403,AOR,killed,test_hhl_negative_eigs (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 340, in test_hhl_negative_eigs\n    fidelity = state_fidelity(ref_normed, hhl_normed)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/measures.py"", line 52, in state_fidelity\n    state2 = _format_state(state2, validate=validate)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 134, in _format_state\n    raise QiskitError(""Input quantum state is not a valid"")\nqiskit.exceptions.QiskitError: 'Input quantum state is not a valid'\n",19,330.6216175556183
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,20,403,AOR,survived,,,21,456.9112331867218
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,21,405,AOR,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 104, in test_hhl_diagonal\n    fidelity = state_fidelity(ref_normed, hhl_normed)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/measures.py"", line 52, in state_fidelity\n    state2 = _format_state(state2, validate=validate)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 134, in _format_state\n    raise QiskitError(""Input quantum state is not a valid"")\nqiskit.exceptions.QiskitError: 'Input quantum state is not a valid'\n",1,1.5730116367340088
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,22,405,AOR,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 104, in test_hhl_diagonal\n    fidelity = state_fidelity(ref_normed, hhl_normed)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/measures.py"", line 52, in state_fidelity\n    state2 = _format_state(state2, validate=validate)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 134, in _format_state\n    raise QiskitError(""Input quantum state is not a valid"")\nqiskit.exceptions.QiskitError: 'Input quantum state is not a valid'\n",1,1.040165901184082
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,23,405,AOR,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 428, in test_hhl_non_hermitian\n    fidelity = state_fidelity(ref_normed, hhl_normed)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/measures.py"", line 52, in state_fidelity\n    state2 = _format_state(state2, validate=validate)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 134, in _format_state\n    raise QiskitError(""Input quantum state is not a valid"")\nqiskit.exceptions.QiskitError: 'Input quantum state is not a valid'\n",20,417.77435064315796
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,24,405,AOR,survived,,,21,428.2253828048706
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,25,405,AOR,survived,,,21,446.3437647819519
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,26,405,AOR,survived,,,21,494.6225392818451
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,27,405,AOR,survived,,,21,460.8750853538513
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,28,406,AOR,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 104, in test_hhl_diagonal\n    fidelity = state_fidelity(ref_normed, hhl_normed)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/measures.py"", line 52, in state_fidelity\n    state2 = _format_state(state2, validate=validate)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 134, in _format_state\n    raise QiskitError(""Input quantum state is not a valid"")\nqiskit.exceptions.QiskitError: 'Input quantum state is not a valid'\n",1,1.1881699562072754
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,29,406,AOR,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 104, in test_hhl_diagonal\n    fidelity = state_fidelity(ref_normed, hhl_normed)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/measures.py"", line 52, in state_fidelity\n    state2 = _format_state(state2, validate=validate)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 134, in _format_state\n    raise QiskitError(""Input quantum state is not a valid"")\nqiskit.exceptions.QiskitError: 'Input quantum state is not a valid'\n",1,1.1197502613067627
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,30,406,AOR,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 105, in test_hhl_diagonal\n    np.testing.assert_approx_equal(fidelity, 1, significant=5)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 5 significant digits:\n ACTUAL: 0.4999999999999999\n DESIRED: 1.0\n",1,1.1338932514190674
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,31,406,AOR,survived,,,21,513.375645160675
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,32,406,AOR,killed,test_hhl_diagonal_3__1__0_1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 105, in test_hhl_diagonal\n    np.testing.assert_approx_equal(fidelity, 1, significant=5)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 5 significant digits:\n ACTUAL: 0.9900990099009903\n DESIRED: 1.0\n",3,3.5123066902160645
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,33,406,AOR,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 104, in test_hhl_diagonal\n    fidelity = state_fidelity(ref_normed, hhl_normed)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/measures.py"", line 52, in state_fidelity\n    state2 = _format_state(state2, validate=validate)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 134, in _format_state\n    raise QiskitError(""Input quantum state is not a valid"")\nqiskit.exceptions.QiskitError: 'Input quantum state is not a valid'\n",1,1.3636128902435303
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,34,406,AOR,survived,,,21,518.5470712184906
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,35,406,AOR,killed,test_hhl_diagonal_qasm_1___0__1__ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 237, in test_hhl_diagonal_qasm\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 414, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 368, in _state_tomography\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 406, in _hhl_results\nZeroDivisionError: complex division by zero\n",14,405.2306697368622
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,36,406,AOR,timeout,,,,3640.2945091724396
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,728.035736322403,0.05958437919616699,0.30674076080322266,19738.97762989998,42.550504207611084,19781.89445924759,20514.59953379631,37,406,AOR,survived,,,21,422.11562609672546
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,747.7151775360107,0.08034181594848633,0.051661014556884766,6205.4325206279755,7.371641397476196,6212.936164855957,6965.125284910202,1,355,ASR,survived,,,21,787.3110866546631
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,747.7151775360107,0.08034181594848633,0.051661014556884766,6205.4325206279755,7.371641397476196,6212.936164855957,6965.125284910202,2,357,ASR,survived,,,21,623.5874807834625
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,747.7151775360107,0.08034181594848633,0.051661014556884766,6205.4325206279755,7.371641397476196,6212.936164855957,6965.125284910202,3,498,ASR,timeout,,,,3738.651959657669
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,747.7151775360107,0.08034181594848633,0.051661014556884766,6205.4325206279755,7.371641397476196,6212.936164855957,6965.125284910202,4,503,ASR,survived,,,21,573.0206000804901
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,747.7151775360107,0.08034181594848633,0.051661014556884766,6205.4325206279755,7.371641397476196,6212.936164855957,6965.125284910202,5,513,ASR,survived,,,21,482.8468198776245
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,723.2349126338959,0.0943143367767334,NA,NA,NA,0.40058398246765137,727.2635488510132,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,710.6970880031586,0.06819653511047363,0.057665109634399414,2165.812198638916,9.636392831802368,2175.5744531154633,2890.5538499355316,1,123,COD,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 95, in test_hhl_diagonal\n    init_state, reci, num_q, num_a, orig_size)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 124, in __init__\nValueError: Input matrix must be hermitian!\n",1,1.198535680770874
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,710.6970880031586,0.06819653511047363,0.057665109634399414,2165.812198638916,9.636392831802368,2175.5744531154633,2890.5538499355316,2,161,COD,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 80, in test_hhl_diagonal\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 166, in matrix_resize\nAttributeError: 'list' object has no attribute 'shape'\n",1,0.03853321075439453
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,710.6970880031586,0.06819653511047363,0.057665109634399414,2165.812198638916,9.636392831802368,2175.5744531154633,2890.5538499355316,3,163,COD,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 288, in expand_to_hermitian\nAttributeError: 'list' object has no attribute 'conj'\n",20,477.8556649684906
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,710.6970880031586,0.06819653511047363,0.057665109634399414,2165.812198638916,9.636392831802368,2175.5744531154633,2890.5538499355316,4,179,COD,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"concurrent.futures.process._RemoteTraceback: \n""""""\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 232, in _process_worker\n    r = call_item.fn(*call_item.args, **call_item.kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 191, in _process_chunk\n    return [fn(*args) for args in chunk]\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 191, in <listcomp>\n    return [fn(*args) for args in chunk]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 90, in _task_wrapper\n    return task(value, *task_args, **task_kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/legacy/op_converter.py"", line 37, in _conversion\n    trace_value = np.sum(matrix.dot(pauli.to_matrix(sparse=True)).diagonal())\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/sparse/base.py"", line 359, in dot\n    return self * other\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/sparse/base.py"", line 479, in __mul__\n    raise ValueError('dimension mismatch')\nValueError: dimension mismatch\n""""""\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 269, in test_hhl_diagonal_other_dim\n    eigs = TestHHL._create_eigs(matrix, num_ancillary, True)\n  File ""./test/aqua/test_hhl.py"", line 62, in _create_eigs\n    ne_qfts=ne_qfts)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/eigs/eigs_qpe.py"", line 67, in __init__\n    self._operator = op_converter.to_weighted_pauli_operator(operator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/legacy/op_converter.py"", line 90, in to_weighted_pauli_operator\n    num_processes=aqua_globals.num_processes)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 157, in parallel_map\n    raise error\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 147, in parallel_map\n    results = list(future)\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 476, in _chain_from_iterable_of_lists\n    for element in iterable:\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 586, in result_iterator\n    yield fs.pop().result()\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 425, in result\n    return self.__get_result()\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 384, in __get_result\n    raise self._exception\nValueError: dimension mismatch\n",12,423.48307752609253
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,710.6970880031586,0.06819653511047363,0.057665109634399414,2165.812198638916,9.636392831802368,2175.5744531154633,2890.5538499355316,5,186,COD,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 291, in test_hhl_diagonal_other_dim\n    np.testing.assert_approx_equal(fidelity, 1.0, significant=1)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 1 significant digits:\n ACTUAL: 0.8441333728098872\n DESIRED: 1.0\n",12,737.8955471515656
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,710.6970880031586,0.06819653511047363,0.057665109634399414,2165.812198638916,9.636392831802368,2175.5744531154633,2890.5538499355316,6,496,COD,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 410, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 218, in construct_circuit\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 512, in _append_by_qreg\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1037, in _append\n    self._check_qargs(qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1158, in _check_qargs\n    raise CircuitError(""qargs not in this circuit"")\nqiskit.circuit.exceptions.CircuitError: 'qargs not in this circuit'\n",1,1.0801949501037598
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,710.6970880031586,0.06819653511047363,0.057665109634399414,2165.812198638916,9.636392831802368,2175.5744531154633,2890.5538499355316,7,501,COD,survived,,,21,524.2430937290192
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,1,118,COI,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 95, in test_hhl_diagonal\n    init_state, reci, num_q, num_a, orig_size)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 119, in __init__\nValueError: Input matrix must be square!\n",1,1.172060251235962
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,2,120,COI,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 95, in test_hhl_diagonal\n    init_state, reci, num_q, num_a, orig_size)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 121, in __init__\nValueError: Input vector dimension does not match input matrix dimension!\n",1,1.3862717151641846
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,3,123,COI,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 95, in test_hhl_diagonal\n    init_state, reci, num_q, num_a, orig_size)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 124, in __init__\nValueError: Input matrix must be hermitian!\n",1,1.7718825340270996
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,4,125,COI,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 95, in test_hhl_diagonal\n    init_state, reci, num_q, num_a, orig_size)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 126, in __init__\nValueError: Input matrix dimension must be 2**n!\n",1,1.0901167392730713
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,5,127,COI,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 95, in test_hhl_diagonal\n    init_state, reci, num_q, num_a, orig_size)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 129, in __init__\nValueError: Truncation to 2 dimensions is not possible!\n",1,1.4226317405700684
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,6,161,COI,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 80, in test_hhl_diagonal\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 166, in matrix_resize\nAttributeError: 'list' object has no attribute 'shape'\n",1,0.07243943214416504
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,7,163,COI,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 288, in expand_to_hermitian\nAttributeError: 'list' object has no attribute 'conj'\n",20,493.64220905303955
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,8,166,COI,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 80, in test_hhl_diagonal\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 167, in matrix_resize\nValueError: Input matrix must be square!\n",1,0.044380903244018555
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,9,168,COI,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 80, in test_hhl_diagonal\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 169, in matrix_resize\nValueError: Input vector dimension does not match input matrix dimension!\n",1,0.04230642318725586
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,10,175,COI,survived,,,21,603.7839820384979
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,11,179,COI,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"concurrent.futures.process._RemoteTraceback: \n""""""\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 232, in _process_worker\n    r = call_item.fn(*call_item.args, **call_item.kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 191, in _process_chunk\n    return [fn(*args) for args in chunk]\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 191, in <listcomp>\n    return [fn(*args) for args in chunk]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 90, in _task_wrapper\n    return task(value, *task_args, **task_kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/legacy/op_converter.py"", line 37, in _conversion\n    trace_value = np.sum(matrix.dot(pauli.to_matrix(sparse=True)).diagonal())\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/sparse/base.py"", line 359, in dot\n    return self * other\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/sparse/base.py"", line 479, in __mul__\n    raise ValueError('dimension mismatch')\nValueError: dimension mismatch\n""""""\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 269, in test_hhl_diagonal_other_dim\n    eigs = TestHHL._create_eigs(matrix, num_ancillary, True)\n  File ""./test/aqua/test_hhl.py"", line 62, in _create_eigs\n    ne_qfts=ne_qfts)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/eigs/eigs_qpe.py"", line 67, in __init__\n    self._operator = op_converter.to_weighted_pauli_operator(operator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/legacy/op_converter.py"", line 90, in to_weighted_pauli_operator\n    num_processes=aqua_globals.num_processes)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 157, in parallel_map\n    raise error\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 147, in parallel_map\n    results = list(future)\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 476, in _chain_from_iterable_of_lists\n    for element in iterable:\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 586, in result_iterator\n    yield fs.pop().result()\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 425, in result\n    return self.__get_result()\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 384, in __get_result\n    raise self._exception\nValueError: dimension mismatch\n",12,410.2329089641571
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,12,186,COI,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 291, in test_hhl_diagonal_other_dim\n    np.testing.assert_approx_equal(fidelity, 1.0, significant=1)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 1 significant digits:\n ACTUAL: 0.8441333728098872\n DESIRED: 1.0\n",12,808.6486394405365
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,13,210,COI,timeout,,,,3035.7244980335236
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,14,212,COI,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 105, in test_hhl_diagonal\n    np.testing.assert_approx_equal(fidelity, 1, significant=5)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 5 significant digits:\n ACTUAL: 0.0\n DESIRED: 1.0\n",1,1.2693934440612793
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,15,229,COI,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 104, in test_hhl_diagonal\n    fidelity = state_fidelity(ref_normed, hhl_normed)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/measures.py"", line 52, in state_fidelity\n    state2 = _format_state(state2, validate=validate)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 134, in _format_state\n    raise QiskitError(""Input quantum state is not a valid"")\nqiskit.exceptions.QiskitError: 'Input quantum state is not a valid'\n",1,1.2178723812103271
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,16,294,COI,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 411, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 329, in _statevector_simulation\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 402, in _hhl_results\nValueError: shapes (2,2) and (1,) not aligned: 2 (dim 1) != 1 (dim 0)\n",1,1.1241745948791504
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,17,297,COI,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 284, in test_hhl_diagonal_other_dim\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 411, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 329, in _statevector_simulation\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 402, in _hhl_results\nValueError: shapes (3,3) and (4,) not aligned: 3 (dim 1) != 4 (dim 0)\n",12,397.76664638519287
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,18,302,COI,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 411, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 329, in _statevector_simulation\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 402, in _hhl_results\nValueError: shapes (1,1) and (2,) not aligned: 1 (dim 1) != 2 (dim 0)\n",1,1.4001898765563965
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,19,308,COI,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 284, in test_hhl_diagonal_other_dim\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 411, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 329, in _statevector_simulation\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 402, in _hhl_results\nValueError: shapes (4,4) and (3,) not aligned: 4 (dim 1) != 3 (dim 0)\n",12,432.7244186401367
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,20,354,COI,survived,,,21,505.6585192680359
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,21,387,COI,survived,,,21,501.4893867969513
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,22,409,COI,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 414, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 366, in _state_tomography\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/state_fitter.py"", line 123, in fit\n    trace=1, psd=True, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/base_fitter.py"", line 224, in fit\n    **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/lstsq_fit.py"", line 100, in lstsq_fit\n    rho_fit, _, _, _ = lstsq(meas_matrix, exp_values)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/linalg/basic.py"", line 1142, in lstsq\n    b1 = _asarray_validated(b, check_finite=check_finite)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/_lib/_util.py"", line 262, in _asarray_validated\n    a = toarray(a)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/lib/function_base.py"", line 489, in asarray_chkfinite\n    ""array must not contain infs or NaNs"")\nValueError: array must not contain infs or NaNs\n",1,3.479475498199463
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,23,496,COI,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 410, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 218, in construct_circuit\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 512, in _append_by_qreg\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1037, in _append\n    self._check_qargs(qargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1158, in _check_qargs\n    raise CircuitError(""qargs not in this circuit"")\nqiskit.circuit.exceptions.CircuitError: 'qargs not in this circuit'\n",1,0.9574887752532959
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,607.1203382015228,0.06194710731506348,0.21010971069335938,7754.2159831523895,31.61219310760498,7786.100233078003,8396.530282258987,24,501,COI,survived,,,21,548.0336811542511
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,1,96,CRP,survived,,,21,584.9525699615479
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,2,97,CRP,survived,,,21,568.8979339599609
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,3,118,CRP,survived,,,21,547.5158667564392
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,4,118,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 95, in test_hhl_diagonal\n    init_state, reci, num_q, num_a, orig_size)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 118, in __init__\nIndexError: tuple index out of range\n",1,1.0659728050231934
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,5,119,CRP,survived,,,21,560.0566339492798
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,6,119,CRP,survived,,,21,520.6368596553802
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,7,120,CRP,survived,,,21,528.5725967884064
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,8,121,CRP,survived,,,21,551.2626585960388
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,9,121,CRP,survived,,,21,535.5764338970184
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,10,124,CRP,survived,,,21,574.1080913543701
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,11,124,CRP,survived,,,21,533.1057758331299
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,12,125,CRP,survived,,,21,559.5211915969849
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,13,125,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 95, in test_hhl_diagonal\n    init_state, reci, num_q, num_a, orig_size)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 126, in __init__\nValueError: Input matrix dimension must be 2**n!\n",1,0.8473618030548096
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,14,125,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 95, in test_hhl_diagonal\n    init_state, reci, num_q, num_a, orig_size)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 126, in __init__\nValueError: Input matrix dimension must be 2**n!\n",1,0.8136081695556641
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,15,126,CRP,survived,,,21,529.2380483150482
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,16,126,CRP,survived,,,21,497.3201551437378
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,17,128,CRP,survived,,,21,446.18226385116577
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,18,128,CRP,survived,,,21,434.4083800315857
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,19,166,CRP,survived,,,21,446.8368630409241
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,20,166,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 80, in test_hhl_diagonal\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 166, in matrix_resize\nIndexError: tuple index out of range\n",1,0.032034873962402344
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,21,167,CRP,survived,,,21,411.0555958747864
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,22,167,CRP,survived,,,21,432.9753153324127
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,23,168,CRP,survived,,,21,455.18250846862793
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,24,169,CRP,survived,,,21,459.41075134277344
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,25,169,CRP,survived,,,21,467.2494044303894
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,26,178,CRP,survived,,,21,549.5159401893616
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,27,178,CRP,survived,,,21,538.8430964946747
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,28,178,CRP,survived,,,21,547.2233893871307
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,29,180,CRP,survived,,,21,541.6645109653473
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,30,180,CRP,survived,,,21,616.0960412025452
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,31,187,CRP,survived,,,21,540.7868876457214
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,32,187,CRP,survived,,,21,505.5472619533539
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,33,205,CRP,survived,,,21,483.873663187027
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,34,205,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 410, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 205, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",1,0.6812617778778076
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,35,213,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 410, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 213, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/initial_states/custom.py"", line 163, in construct_circuit\n    raise AquaError('Mode should be either ""vector"" or ""circuit""')\nqiskit.aqua.aqua_error.AquaError: 'Mode should be either ""vector"" or ""circuit""'\n",1,0.8951702117919922
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,36,213,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 410, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 213, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/initial_states/custom.py"", line 163, in construct_circuit\n    raise AquaError('Mode should be either ""vector"" or ""circuit""')\nqiskit.aqua.aqua_error.AquaError: 'Mode should be either ""vector"" or ""circuit""'\n",1,0.7880635261535645
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,37,216,CRP,survived,,,21,471.1879041194916
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,38,216,CRP,survived,,,21,453.19271779060364
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,39,221,CRP,survived,,,21,451.03225803375244
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,40,221,CRP,survived,,,21,511.91883754730225
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,41,226,CRP,survived,,,21,580.5907166004181
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,42,226,CRP,survived,,,21,603.5864491462708
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,43,230,CRP,survived,,,21,639.3017313480377
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,44,254,CRP,survived,,,21,621.543408870697
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,45,256,CRP,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"concurrent.futures.process._RemoteTraceback: \n""""""\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 232, in _process_worker\n    r = call_item.fn(*call_item.args, **call_item.kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 191, in _process_chunk\n    return [fn(*args) for args in chunk]\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 191, in <listcomp>\n    return [fn(*args) for args in chunk]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 90, in _task_wrapper\n    return task(value, *task_args, **task_kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/legacy/op_converter.py"", line 37, in _conversion\n    trace_value = np.sum(matrix.dot(pauli.to_matrix(sparse=True)).diagonal())\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/sparse/base.py"", line 359, in dot\n    return self * other\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/sparse/base.py"", line 479, in __mul__\n    raise ValueError('dimension mismatch')\nValueError: dimension mismatch\n""""""\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 269, in test_hhl_diagonal_other_dim\n    eigs = TestHHL._create_eigs(matrix, num_ancillary, True)\n  File ""./test/aqua/test_hhl.py"", line 62, in _create_eigs\n    ne_qfts=ne_qfts)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/eigs/eigs_qpe.py"", line 67, in __init__\n    self._operator = op_converter.to_weighted_pauli_operator(operator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/legacy/op_converter.py"", line 90, in to_weighted_pauli_operator\n    num_processes=aqua_globals.num_processes)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 157, in parallel_map\n    raise error\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 147, in parallel_map\n    results = list(future)\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 476, in _chain_from_iterable_of_lists\n    for element in iterable:\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 586, in result_iterator\n    yield fs.pop().result()\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 425, in result\n    return self.__get_result()\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 384, in __get_result\n    raise self._exception\nValueError: dimension mismatch\n",12,458.6496455669403
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,46,260,CRP,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 266, in test_hhl_diagonal_other_dim\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 182, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 262, in expand_to_powerdim\nValueError: cannot reshape array of size 8 into shape (4,)\n",12,497.94048047065735
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,47,260,CRP,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 275, in test_hhl_diagonal_other_dim\n    init_state = Custom(num_q, state_vector=vector)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/initial_states/custom.py"", line 111, in __init__\n    len(state_vector), self._num_qubits))\nqiskit.aqua.aqua_error.AquaError: 'The state vector length 9 is incompatible with the number of qubits 2'\n",12,382.7573776245117
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,48,261,CRP,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 266, in test_hhl_diagonal_other_dim\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 182, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 261, in expand_to_powerdim\nIndexError: index 1 is out of bounds for axis 0 with size 1\n",12,432.2778558731079
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,49,261,CRP,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 266, in test_hhl_diagonal_other_dim\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 182, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 261, in expand_to_powerdim\nIndexError: tuple index out of range\n",12,453.7654106616974
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,50,262,CRP,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 266, in test_hhl_diagonal_other_dim\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 182, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 262, in expand_to_powerdim\nIndexError: tuple index out of range\n",12,494.6272313594818
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,51,279,CRP,survived,,,21,647.3456933498383
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,52,280,CRP,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 283, in expand_to_hermitian\nValueError: could not broadcast input array from shape (2,2) into shape (2,4)\n",20,527.9475703239441
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,53,283,CRP,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 283, in expand_to_hermitian\nValueError: could not broadcast input array from shape (2,2) into shape (1,2)\n",20,425.58233094215393
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,54,284,CRP,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 284, in expand_to_hermitian\nValueError: could not broadcast input array from shape (2,2) into shape (2,1)\n",20,406.45222306251526
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,55,286,CRP,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 290, in expand_to_hermitian\nValueError: cannot reshape array of size 8 into shape (4,)\n",20,430.47202253341675
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,56,288,CRP,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 288, in expand_to_hermitian\nIndexError: index 1 is out of bounds for axis 0 with size 1\n",20,454.97524881362915
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,57,288,CRP,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 288, in expand_to_hermitian\nIndexError: tuple index out of range\n",20,428.92782831192017
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,58,289,CRP,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 289, in expand_to_hermitian\nIndexError: index 1 is out of bounds for axis 0 with size 1\n",20,459.502970457077
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,59,289,CRP,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 289, in expand_to_hermitian\nIndexError: tuple index out of range\n",20,423.6071832180023
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,60,290,CRP,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 290, in expand_to_hermitian\nIndexError: tuple index out of range\n",20,409.3813157081604
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,61,295,CRP,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 423, in test_hhl_non_hermitian\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 411, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 327, in _statevector_simulation\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 295, in _resize_vector\nIndexError: tuple index out of range\n",20,568.5587940216064
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,62,295,CRP,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 423, in test_hhl_non_hermitian\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 411, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 329, in _statevector_simulation\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 402, in _hhl_results\nValueError: shapes (2,2) and (1,) not aligned: 2 (dim 1) != 1 (dim 0)\n",20,552.8745865821838
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,63,303,CRP,survived,,,21,589.192563533783
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,64,304,CRP,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 423, in test_hhl_non_hermitian\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 411, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 329, in _statevector_simulation\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 399, in _hhl_results\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 306, in _resize_matrix\nValueError: could not broadcast input array from shape (1,3) into shape (1,1)\n",20,473.07721996307373
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,65,306,CRP,survived,,,21,434.0958831310272
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,66,326,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 425, in _run\nKeyError: 'probability_result'\n",1,1.057974100112915
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,67,326,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 425, in _run\nKeyError: 'probability_result'\n",1,0.973278284072876
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,68,342,CRP,killed,test_hhl_diagonal_qasm_1___0__1__ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 237, in test_hhl_diagonal_qasm\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 414, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 366, in _state_tomography\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/state_fitter.py"", line 123, in fit\n    trace=1, psd=True, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/base_fitter.py"", line 224, in fit\n    **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/lstsq_fit.py"", line 100, in lstsq_fit\n    rho_fit, _, _, _ = lstsq(meas_matrix, exp_values)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/linalg/basic.py"", line 1142, in lstsq\n    b1 = _asarray_validated(b, check_finite=check_finite)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/_lib/_util.py"", line 262, in _asarray_validated\n    a = toarray(a)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/lib/function_base.py"", line 489, in asarray_chkfinite\n    ""array must not contain infs or NaNs"")\nValueError: array must not contain infs or NaNs\n",14,334.3762128353119
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,69,345,CRP,killed,test_hhl_diagonal_qasm_1___0__1__ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 237, in test_hhl_diagonal_qasm\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 414, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 345, in _state_tomography\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 158, in __getitem__\n    return self._bits[key]\nIndexError: list index out of range\n",14,336.8767628669739
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,70,352,CRP,survived,,,21,366.898060798645
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,71,352,CRP,survived,,,21,372.6634042263031
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,72,354,CRP,survived,,,21,481.9424715042114
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,73,354,CRP,survived,,,21,353.87828040122986
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,74,354,CRP,survived,,,21,350.40572929382324
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,75,360,CRP,killed,test_hhl_diagonal_qasm_1___0__1__ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 237, in test_hhl_diagonal_qasm\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 425, in _run\nKeyError: 'probability_result'\n",14,288.10678791999817
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,76,360,CRP,killed,test_hhl_diagonal_qasm_1___0__1__ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 237, in test_hhl_diagonal_qasm\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 425, in _run\nKeyError: 'probability_result'\n",14,279.53708124160767
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,77,366,CRP,killed,test_hhl_diagonal_qasm_1___0__1__ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 237, in test_hhl_diagonal_qasm\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 414, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 366, in _state_tomography\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/state_fitter.py"", line 123, in fit\n    trace=1, psd=True, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/base_fitter.py"", line 234, in fit\n    raise QiskitError('Unrecognized fit method {}'.format(method))\nqiskit.exceptions.QiskitError: 'Unrecognized fit method mutpy'\n",14,289.4432065486908
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,78,366,CRP,killed,test_hhl_diagonal_qasm_1___0__1__ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 237, in test_hhl_diagonal_qasm\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 414, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 366, in _state_tomography\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/state_fitter.py"", line 123, in fit\n    trace=1, psd=True, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/base_fitter.py"", line 234, in fit\n    raise QiskitError('Unrecognized fit method {}'.format(method))\nqiskit.exceptions.QiskitError: 'Unrecognized fit method '\n",14,273.70110177993774
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,79,379,CRP,survived,,,21,372.796701669693
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,80,381,CRP,survived,,,21,365.178936958313
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,81,381,CRP,survived,,,21,354.13626885414124
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,82,383,CRP,survived,,,21,353.95494413375854
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,83,386,CRP,killed,test_hhl_diagonal_qasm_1___0__1__ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 237, in test_hhl_diagonal_qasm\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 414, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 366, in _state_tomography\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/state_fitter.py"", line 123, in fit\n    trace=1, psd=True, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/base_fitter.py"", line 224, in fit\n    **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/lstsq_fit.py"", line 100, in lstsq_fit\n    rho_fit, _, _, _ = lstsq(meas_matrix, exp_values)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/linalg/basic.py"", line 1142, in lstsq\n    b1 = _asarray_validated(b, check_finite=check_finite)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/_lib/_util.py"", line 262, in _asarray_validated\n    a = toarray(a)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/lib/function_base.py"", line 489, in asarray_chkfinite\n    ""array must not contain infs or NaNs"")\nValueError: array must not contain infs or NaNs\n",14,285.569331407547
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,84,386,CRP,killed,test_hhl_diagonal_qasm_1___0__1__ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 237, in test_hhl_diagonal_qasm\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 414, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 364, in _state_tomography\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 386, in _tomo_postselect\nValueError: empty separator\n",14,278.66288709640503
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,85,387,CRP,killed,test_hhl_diagonal_qasm_1___0__1__ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 243, in test_hhl_diagonal_qasm\n    np.testing.assert_approx_equal(fidelity, 1, significant=1)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 1 significant digits:\n ACTUAL: 0.7886751345948123\n DESIRED: 1.0\n",14,279.8837308883667
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,86,387,CRP,killed,test_hhl_diagonal_qasm_1___0__1__ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 237, in test_hhl_diagonal_qasm\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 414, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 366, in _state_tomography\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/state_fitter.py"", line 123, in fit\n    trace=1, psd=True, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/base_fitter.py"", line 224, in fit\n    **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/lstsq_fit.py"", line 100, in lstsq_fit\n    rho_fit, _, _, _ = lstsq(meas_matrix, exp_values)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/linalg/basic.py"", line 1142, in lstsq\n    b1 = _asarray_validated(b, check_finite=check_finite)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/_lib/_util.py"", line 262, in _asarray_validated\n    a = toarray(a)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/lib/function_base.py"", line 489, in asarray_chkfinite\n    ""array must not contain infs or NaNs"")\nValueError: array must not contain infs or NaNs\n",14,277.4751806259155
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,87,387,CRP,killed,test_hhl_diagonal_qasm_1___0__1__ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 237, in test_hhl_diagonal_qasm\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 414, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 366, in _state_tomography\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/state_fitter.py"", line 123, in fit\n    trace=1, psd=True, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/base_fitter.py"", line 224, in fit\n    **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/lstsq_fit.py"", line 100, in lstsq_fit\n    rho_fit, _, _, _ = lstsq(meas_matrix, exp_values)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/linalg/basic.py"", line 1142, in lstsq\n    b1 = _asarray_validated(b, check_finite=check_finite)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/_lib/_util.py"", line 262, in _asarray_validated\n    a = toarray(a)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/lib/function_base.py"", line 489, in asarray_chkfinite\n    ""array must not contain infs or NaNs"")\nValueError: array must not contain infs or NaNs\n",14,277.15137577056885
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,88,388,CRP,killed,test_hhl_diagonal_qasm_1___0__1__ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 237, in test_hhl_diagonal_qasm\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 414, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 364, in _state_tomography\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 388, in _tomo_postselect\nIndexError: list index out of range\n",14,281.0580303668976
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,89,400,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 426, in _run\nKeyError: 'output'\n",1,0.8388252258300781
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,90,400,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 426, in _run\nKeyError: 'output'\n",1,1.2906334400177002
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,91,405,CRP,survived,,,21,380.7443308830261
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,92,405,CRP,survived,,,21,396.10069966316223
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,93,405,CRP,survived,,,21,409.1611123085022
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,94,406,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 421, in _run\nKeyError: 'solution'\n",1,0.9109351634979248
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,95,406,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 421, in _run\nKeyError: 'solution'\n",1,1.081679105758667
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,96,406,CRP,survived,,,21,389.4653947353363
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,97,416,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 427, in _run\nKeyError: 'matrix'\n",1,1.293548583984375
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,98,416,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 427, in _run\nKeyError: 'matrix'\n",1,0.9451873302459717
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,99,417,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 428, in _run\nKeyError: 'vector'\n",1,1.1143467426300049
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,100,417,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 428, in _run\nKeyError: 'vector'\n",1,1.0331785678863525
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,101,418,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 429, in _run\nKeyError: 'circuit_info'\n",1,1.1604647636413574
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,102,418,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 429, in _run\nKeyError: 'circuit_info'\n",1,1.0458426475524902
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,103,421,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 421, in _run\nKeyError: 'mutpy'\n",1,1.05179762840271
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,104,421,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 421, in _run\nKeyError: ''\n",1,1.4832348823547363
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,105,425,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 425, in _run\nKeyError: 'mutpy'\n",1,1.0477800369262695
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,106,425,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 425, in _run\nKeyError: ''\n",1,1.0541181564331055
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,107,426,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 426, in _run\nKeyError: 'mutpy'\n",1,1.0109822750091553
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,108,426,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 426, in _run\nKeyError: ''\n",1,1.0449519157409668
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,109,427,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 427, in _run\nKeyError: 'mutpy'\n",1,1.0948240756988525
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,110,427,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 427, in _run\nKeyError: ''\n",1,1.0198004245758057
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,111,428,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 428, in _run\nKeyError: 'mutpy'\n",1,1.4418625831604004
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,112,428,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 428, in _run\nKeyError: ''\n",1,1.061464786529541
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,113,429,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 429, in _run\nKeyError: 'mutpy'\n",1,1.0313787460327148
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,114,429,CRP,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 429, in _run\nKeyError: ''\n",1,1.0166125297546387
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,115,408,CRP,survived,,,21,384.0458126068115
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,116,408,CRP,survived,,,21,364.57425117492676
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,117,439,CRP,survived,,,21,368.1388490200043
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,118,439,CRP,survived,,,21,382.0272786617279
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,119,444,CRP,survived,,,21,378.2628479003906
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,120,444,CRP,survived,,,21,375.8406271934509
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,121,449,CRP,survived,,,21,367.87321424484253
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,122,449,CRP,survived,,,21,360.35558009147644
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,123,454,CRP,survived,,,21,371.8943202495575
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,124,454,CRP,survived,,,21,351.3021647930145
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,125,459,CRP,survived,,,21,349.9914348125458
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,126,459,CRP,survived,,,21,354.3477795124054
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,127,464,CRP,survived,,,21,381.5861315727234
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,128,464,CRP,survived,,,21,364.10057377815247
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,129,469,CRP,survived,,,21,361.9937517642975
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,130,469,CRP,survived,,,21,363.5588252544403
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,131,474,CRP,survived,,,21,389.465309381485
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,132,474,CRP,survived,,,21,368.5176417827606
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,133,479,CRP,survived,,,21,380.9500529766083
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,134,479,CRP,survived,,,21,366.17303442955017
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,135,484,CRP,survived,,,21,372.08913469314575
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,136,484,CRP,survived,,,21,369.30694460868835
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,137,487,CRP,survived,,,21,356.0055024623871
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,633.8099050521851,0.06690573692321777,0.9702527523040771,46547.97028517723,147.4918246269226,46696.49926829338,47333.16624712944,138,487,CRP,survived,,,21,352.914662361145
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,549.7174150943756,0.05345892906188965,0.0967564582824707,4632.896594762802,16.50279998779297,4649.549610137939,5202.600325345993,1,148,DDL,survived,,,21,480.3074469566345
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,549.7174150943756,0.05345892906188965,0.0967564582824707,4632.896594762802,16.50279998779297,4649.549610137939,5202.600325345993,2,241,DDL,survived,,,21,526.0913822650909
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,549.7174150943756,0.05345892906188965,0.0967564582824707,4632.896594762802,16.50279998779297,4649.549610137939,5202.600325345993,3,265,DDL,survived,,,21,525.861088514328
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,549.7174150943756,0.05345892906188965,0.0967564582824707,4632.896594762802,16.50279998779297,4649.549610137939,5202.600325345993,4,436,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,549.7174150943756,0.05345892906188965,0.0967564582824707,4632.896594762802,16.50279998779297,4649.549610137939,5202.600325345993,5,441,DDL,survived,,,21,535.4008576869965
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,549.7174150943756,0.05345892906188965,0.0967564582824707,4632.896594762802,16.50279998779297,4649.549610137939,5202.600325345993,6,446,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,549.7174150943756,0.05345892906188965,0.0967564582824707,4632.896594762802,16.50279998779297,4649.549610137939,5202.600325345993,7,451,DDL,survived,,,21,472.5681939125061
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,549.7174150943756,0.05345892906188965,0.0967564582824707,4632.896594762802,16.50279998779297,4649.549610137939,5202.600325345993,8,456,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,549.7174150943756,0.05345892906188965,0.0967564582824707,4632.896594762802,16.50279998779297,4649.549610137939,5202.600325345993,9,461,DDL,survived,,,21,535.4665386676788
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,549.7174150943756,0.05345892906188965,0.0967564582824707,4632.896594762802,16.50279998779297,4649.549610137939,5202.600325345993,10,466,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,549.7174150943756,0.05345892906188965,0.0967564582824707,4632.896594762802,16.50279998779297,4649.549610137939,5202.600325345993,11,471,DDL,survived,,,21,504.9111158847809
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,549.7174150943756,0.05345892906188965,0.0967564582824707,4632.896594762802,16.50279998779297,4649.549610137939,5202.600325345993,12,476,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,549.7174150943756,0.05345892906188965,0.0967564582824707,4632.896594762802,16.50279998779297,4649.549610137939,5202.600325345993,13,481,DDL,survived,,,21,555.298460483551
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,549.7174150943756,0.05345892906188965,0.0967564582824707,4632.896594762802,16.50279998779297,4649.549610137939,5202.600325345993,14,486,DDL,survived,,,21,496.9672465324402
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,598.1091206073761,0.07289576530456543,NA,NA,NA,0.29592275619506836,601.6895778179169,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,499.61271715164185,0.05938243865966797,NA,NA,NA,0.3205084800720215,502.4179756641388,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,544.7949945926666,0.056043148040771484,NA,NA,NA,0.27104949951171875,547.4891657829285,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,422.2125062942505,0.05335664749145508,0.015280961990356445,4742.325976610184,2.9662601947784424,4745.360874414444,5170.041392087936,1,87,IOD,timeout,,,,2111.1767728328705
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,422.2125062942505,0.05335664749145508,0.015280961990356445,4742.325976610184,2.9662601947784424,4745.360874414444,5170.041392087936,2,408,IOD,timeout,,,,2111.151907682419
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,422.2125062942505,0.05335664749145508,0.015280961990356445,4742.325976610184,2.9662601947784424,4745.360874414444,5170.041392087936,3,486,IOD,survived,,,21,519.9932675361633
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,490.03830909729004,0.050362348556518555,0.005423784255981445,498.6140568256378,1.4464735984802246,500.11631655693054,992.5874571800232,1,87,IOP,survived,,,21,498.61281156539917
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,562.3309977054596,0.05966043472290039,0.0071713924407958984,367.32420468330383,1.149648904800415,368.54068541526794,933.2597002983093,1,127,LCR,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 281, in test_hhl_diagonal_other_dim\n    init_state, reci, num_q, num_a, orig_size)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 129, in __init__\nValueError: Truncation to 3 dimensions is not possible!\n",12,367.32266640663147
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,554.0244331359863,0.09501266479492188,NA,NA,NA,0.2887239456176758,557.0790324211121,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,536.3044054508209,0.06278872489929199,NA,NA,NA,0.2762877941131592,538.875167131424,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,553.0438501834869,0.05570816993713379,0.08410024642944336,1356.8886978626251,10.119534492492676,1367.1480407714844,1922.9526484012604,1,118,ROR,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 95, in test_hhl_diagonal\n    init_state, reci, num_q, num_a, orig_size)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 119, in __init__\nValueError: Input matrix must be square!\n",1,0.9542088508605957
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,553.0438501834869,0.05570816993713379,0.08410024642944336,1356.8886978626251,10.119534492492676,1367.1480407714844,1922.9526484012604,2,120,ROR,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 95, in test_hhl_diagonal\n    init_state, reci, num_q, num_a, orig_size)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 121, in __init__\nValueError: Input vector dimension does not match input matrix dimension!\n",1,0.9022481441497803
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,553.0438501834869,0.05570816993713379,0.08410024642944336,1356.8886978626251,10.119534492492676,1367.1480407714844,1922.9526484012604,3,125,ROR,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 95, in test_hhl_diagonal\n    init_state, reci, num_q, num_a, orig_size)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 126, in __init__\nValueError: Input matrix dimension must be 2**n!\n",1,0.9465060234069824
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,553.0438501834869,0.05570816993713379,0.08410024642944336,1356.8886978626251,10.119534492492676,1367.1480407714844,1922.9526484012604,4,166,ROR,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 80, in test_hhl_diagonal\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 167, in matrix_resize\nValueError: Input matrix must be square!\n",1,0.03588414192199707
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,553.0438501834869,0.05570816993713379,0.08410024642944336,1356.8886978626251,10.119534492492676,1367.1480407714844,1922.9526484012604,5,168,ROR,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 80, in test_hhl_diagonal\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 169, in matrix_resize\nValueError: Input vector dimension does not match input matrix dimension!\n",1,0.03712058067321777
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,553.0438501834869,0.05570816993713379,0.08410024642944336,1356.8886978626251,10.119534492492676,1367.1480407714844,1922.9526484012604,6,178,ROR,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"concurrent.futures.process._RemoteTraceback: \n""""""\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 232, in _process_worker\n    r = call_item.fn(*call_item.args, **call_item.kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 191, in _process_chunk\n    return [fn(*args) for args in chunk]\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 191, in <listcomp>\n    return [fn(*args) for args in chunk]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 90, in _task_wrapper\n    return task(value, *task_args, **task_kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/legacy/op_converter.py"", line 37, in _conversion\n    trace_value = np.sum(matrix.dot(pauli.to_matrix(sparse=True)).diagonal())\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/sparse/base.py"", line 359, in dot\n    return self * other\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/sparse/base.py"", line 479, in __mul__\n    raise ValueError('dimension mismatch')\nValueError: dimension mismatch\n""""""\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 269, in test_hhl_diagonal_other_dim\n    eigs = TestHHL._create_eigs(matrix, num_ancillary, True)\n  File ""./test/aqua/test_hhl.py"", line 62, in _create_eigs\n    ne_qfts=ne_qfts)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/eigs/eigs_qpe.py"", line 67, in __init__\n    self._operator = op_converter.to_weighted_pauli_operator(operator)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/legacy/op_converter.py"", line 90, in to_weighted_pauli_operator\n    num_processes=aqua_globals.num_processes)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 157, in parallel_map\n    raise error\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 147, in parallel_map\n    results = list(future)\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/process.py"", line 476, in _chain_from_iterable_of_lists\n    for element in iterable:\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 586, in result_iterator\n    yield fs.pop().result()\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 425, in result\n    return self.__get_result()\n  File ""/home/swarm/qmutpy-experiments/tools/pyenv/versions/3.7.0/lib/python3.7/concurrent/futures/_base.py"", line 384, in __get_result\n    raise self._exception\nValueError: dimension mismatch\n",12,389.4077134132385
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,553.0438501834869,0.05570816993713379,0.08410024642944336,1356.8886978626251,10.119534492492676,1367.1480407714844,1922.9526484012604,7,354,ROR,survived,,,21,503.88261556625366
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,553.0438501834869,0.05570816993713379,0.08410024642944336,1356.8886978626251,10.119534492492676,1367.1480407714844,1922.9526484012604,8,387,ROR,survived,,,21,460.7044789791107
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,477.3891236782074,0.0662233829498291,0.006093025207519531,602.0774714946747,1.5463306903839111,603.6961185932159,1083.5419707298279,1,87,SCD,survived,,,21,602.0758414268494
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,542.5237414836884,0.056879281997680664,0.018011808395385742,536.4963855743408,3.073507308959961,539.6447839736938,1084.951559305191,1,408,SCI,killed,test_hhl_diagonal_1__0__1_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 98, in test_hhl_diagonal\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 409, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 75, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,1.565528154373169
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,542.5237414836884,0.056879281997680664,0.018011808395385742,536.4963855743408,3.073507308959961,539.6447839736938,1084.951559305191,2,486,SCI,survived,,,21,534.9259104728699
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,1,258,SIR,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 266, in test_hhl_diagonal_other_dim\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 182, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 258, in expand_to_powerdim\nValueError: could not broadcast input array from shape (3,3) into shape (4,3)\n",12,345.18530678749084
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,2,258,SIR,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 266, in test_hhl_diagonal_other_dim\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 182, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 258, in expand_to_powerdim\nValueError: could not broadcast input array from shape (3,3) into shape (3,4)\n",12,409.94534850120544
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,3,261,SIR,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 266, in test_hhl_diagonal_other_dim\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 182, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 261, in expand_to_powerdim\nValueError: could not broadcast input array from shape (3,) into shape (4,)\n",12,418.0774302482605
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,4,283,SIR,survived,,,21,634.5061480998993
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,5,283,SIR,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 283, in expand_to_hermitian\nValueError: could not broadcast input array from shape (2,2) into shape (4,2)\n",20,460.3666527271271
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,6,283,SIR,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 283, in expand_to_hermitian\nValueError: could not broadcast input array from shape (2,2) into shape (2,4)\n",20,549.0735471248627
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,7,283,SIR,survived,,,21,576.9051520824432
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,8,284,SIR,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 284, in expand_to_hermitian\nValueError: could not broadcast input array from shape (2,2) into shape (4,2)\n",20,461.0923058986664
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,9,284,SIR,survived,,,21,557.1941158771515
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,10,284,SIR,survived,,,21,599.3718085289001
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,11,284,SIR,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 284, in expand_to_hermitian\nValueError: could not broadcast input array from shape (2,2) into shape (2,4)\n",20,443.24431014060974
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,12,288,SIR,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 288, in expand_to_hermitian\nValueError: could not broadcast input array from shape (2,) into shape (4,)\n",20,462.9465615749359
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,13,289,SIR,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 406, in test_hhl_non_hermitian\n    matrix, vector, truncate_powerdim, truncate_hermitian = HHL.matrix_resize(matrix, vector)\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 189, in matrix_resize\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 289, in expand_to_hermitian\nValueError: could not broadcast input array from shape (2,) into shape (4,)\n",20,523.4906098842621
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,14,296,SIR,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 423, in test_hhl_non_hermitian\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 411, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 329, in _statevector_simulation\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 402, in _hhl_results\nValueError: shapes (2,2) and (4,) not aligned: 2 (dim 1) != 4 (dim 0)\n",20,583.813633441925
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,15,298,SIR,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 284, in test_hhl_diagonal_other_dim\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 411, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 329, in _statevector_simulation\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 402, in _hhl_results\nValueError: shapes (3,3) and (4,) not aligned: 3 (dim 1) != 4 (dim 0)\n",12,363.1048789024353
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,16,306,SIR,survived,,,21,506.9776496887207
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,17,306,SIR,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 423, in test_hhl_non_hermitian\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 411, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 329, in _statevector_simulation\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 399, in _hhl_results\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 306, in _resize_matrix\nValueError: could not broadcast input array from shape (4,2) into shape (2,2)\n",20,532.0113019943237
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,18,306,SIR,killed,test_hhl_non_hermitian (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""./test/aqua/test_hhl.py"", line 423, in test_hhl_non_hermitian\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 411, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 329, in _statevector_simulation\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 399, in _hhl_results\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 306, in _resize_matrix\nValueError: could not broadcast input array from shape (2,4) into shape (2,2)\n",20,592.090833902359
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,19,306,SIR,survived,,,21,635.8036522865295
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,20,311,SIR,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 284, in test_hhl_diagonal_other_dim\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 411, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 329, in _statevector_simulation\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 399, in _hhl_results\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 311, in _resize_matrix\nValueError: could not broadcast input array from shape (4,3) into shape (3,3)\n",12,357.89005422592163
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,21,311,SIR,killed,test_hhl_diagonal_other_dim_1__3__4_ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 284, in test_hhl_diagonal_other_dim\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 411, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 329, in _statevector_simulation\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 399, in _hhl_results\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 311, in _resize_matrix\nValueError: could not broadcast input array from shape (3,4) into shape (3,3)\n",12,369.49102330207825
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,22,381,SIR,survived,,,21,437.7539801597595
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,649.2151546478271,0.07844734191894531,0.18012571334838867,11255.87656879425,28.654903650283813,11284.790045499802,11936.83107805252,23,381,SIR,survived,,,21,435.4919936656952
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,682.8974616527557,0.05820655822753906,NA,NA,NA,12.538168907165527,698.9394471645355,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,719.741617679596,0.05462360382080078,NA,NA,NA,906.0227077007294,1628.9259395599365,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,591.1927080154419,0.07319974899291992,NA,NA,NA,673.771092414856,1268.133362531662,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,598.7711293697357,0.06933999061584473,0.011466264724731445,1034.7493934631348,2.460244655609131,1037.2904443740845,1638.744356393814,1,232,QMD,survived,,,21,552.0021417140961
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,598.7711293697357,0.06933999061584473,0.011466264724731445,1034.7493934631348,2.460244655609131,1037.2904443740845,1638.744356393814,2,345,QMD,killed,test_hhl_diagonal_qasm_1___0__1__ (test.aqua.test_hhl.TestHHL),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_hhl.py"", line 237, in test_hhl_diagonal_qasm\n    seed_transpiler=aqua_globals.random_seed))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 414, in _run\n  File ""qiskit.aqua.algorithms.linear_solvers.hhl"", line 366, in _state_tomography\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/state_fitter.py"", line 123, in fit\n    trace=1, psd=True, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/base_fitter.py"", line 224, in fit\n    **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_ignis-0.6.0-py3.7.egg/qiskit/ignis/verification/tomography/fitters/lstsq_fit.py"", line 100, in lstsq_fit\n    rho_fit, _, _, _ = lstsq(meas_matrix, exp_values)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/linalg/basic.py"", line 1142, in lstsq\n    b1 = _asarray_validated(b, check_finite=check_finite)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/_lib/_util.py"", line 262, in _asarray_validated\n    a = toarray(a)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/lib/function_base.py"", line 489, in asarray_chkfinite\n    ""array must not contain infs or NaNs"")\nValueError: array must not contain infs or NaNs\n",14,482.7444038391113
qiskit.aqua.algorithms.linear_solvers.hhl,test.aqua.test_hhl,21,594.604640007019,0.07356452941894531,NA,NA,NA,30.031606197357178,627.271562576294,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0024187564849853516,0.008879423141479492,NA,NA,NA,0.04363656044006348,2.651688814163208,NA,NA,AOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.002874612808227539,0.011203527450561523,NA,NA,NA,0.053978919982910156,3.9114835262298584,NA,NA,AOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.004182100296020508,0.010944843292236328,NA,NA,NA,0.060296058654785156,4.5168616771698,NA,NA,ASR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.002351522445678711,0.00827932357788086,NA,NA,NA,0.0413966178894043,2.7422125339508057,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.003416776657104492,0.010205268859863281,NA,NA,NA,0.061808109283447266,4.377275705337524,NA,NA,COD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.003650188446044922,0.00832819938659668,NA,NA,NA,0.04540228843688965,3.169874429702759,NA,NA,COI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,1,50,CRP,killed,test_els (test.aqua.test_numpy_ls_solver.TestNumPyLSsolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_ls_solver.py"", line 31, in test_els\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver"", line 66, in _run\nKeyError: 'eigvals'\n",1,0.03929758071899414
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,2,50,CRP,killed,test_els (test.aqua.test_numpy_ls_solver.TestNumPyLSsolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_ls_solver.py"", line 31, in test_els\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver"", line 66, in _run\nKeyError: 'eigvals'\n",1,0.029886245727539062
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,3,50,CRP,killed,test_els (test.aqua.test_numpy_ls_solver.TestNumPyLSsolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_ls_solver.py"", line 33, in test_els\n    np.testing.assert_array_almost_equal(result.eigvals, [3, -1])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 1046, in assert_array_almost_equal\n    precision=decimal)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 761, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not almost equal to 6 decimals\n\n(shapes (2, 2), (2,) mismatch)\n x: array([[ 0.707107, -0.707107],\n       [ 0.707107,  0.707107]])\n y: array([ 3, -1])\n",1,0.07887434959411621
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,4,51,CRP,killed,test_els (test.aqua.test_numpy_ls_solver.TestNumPyLSsolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_ls_solver.py"", line 31, in test_els\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver"", line 62, in _run\nKeyError: 'solution'\n",1,0.031087160110473633
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,5,51,CRP,killed,test_els (test.aqua.test_numpy_ls_solver.TestNumPyLSsolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_ls_solver.py"", line 31, in test_els\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver"", line 62, in _run\nKeyError: 'solution'\n",1,0.05026102066040039
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,6,62,CRP,killed,test_els (test.aqua.test_numpy_ls_solver.TestNumPyLSsolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_ls_solver.py"", line 31, in test_els\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver"", line 62, in _run\nKeyError: 'mutpy'\n",1,0.03130459785461426
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,7,62,CRP,killed,test_els (test.aqua.test_numpy_ls_solver.TestNumPyLSsolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_ls_solver.py"", line 31, in test_els\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver"", line 62, in _run\nKeyError: ''\n",1,0.06737303733825684
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,8,66,CRP,killed,test_els (test.aqua.test_numpy_ls_solver.TestNumPyLSsolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_ls_solver.py"", line 31, in test_els\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver"", line 66, in _run\nKeyError: 'mutpy'\n",1,0.04289841651916504
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,9,66,CRP,killed,test_els (test.aqua.test_numpy_ls_solver.TestNumPyLSsolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_ls_solver.py"", line 31, in test_els\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver"", line 66, in _run\nKeyError: ''\n",1,0.05963325500488281
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,10,53,CRP,survived,,,1,0.036622047424316406
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,11,53,CRP,survived,,,1,0.0353243350982666
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,12,76,CRP,timeout,,,,5.02404260635376
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,13,76,CRP,timeout,,,,5.029494285583496
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,14,81,CRP,timeout,,,,5.02692985534668
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,15,81,CRP,timeout,,,,5.0220606327056885
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,16,84,CRP,survived,,,1,0.031174421310424805
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,17,84,CRP,survived,,,1,0.0428166389465332
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,18,96,CRP,survived,,,1,0.051537513732910156
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,19,96,CRP,survived,,,1,0.036725759506225586
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,20,96,CRP,survived,,,1,0.04501080513000488
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,21,96,CRP,survived,,,1,0.034516096115112305
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,22,96,CRP,survived,,,1,0.030638933181762695
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0032591819763183594,0.009653329849243164,0.05475759506225586,20.960322618484497,2.7982099056243896,23.822943449020386,26.467665433883667,23,96,CRP,survived,,,1,0.04614853858947754
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0026564598083496094,0.01004338264465332,0.006055593490600586,0.0737922191619873,0.34468722343444824,0.43457841873168945,4.239251375198364,1,73,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0026564598083496094,0.01004338264465332,0.006055593490600586,0.0737922191619873,0.34468722343444824,0.43457841873168945,4.239251375198364,2,78,DDL,survived,,,1,0.03474879264831543
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0026564598083496094,0.01004338264465332,0.006055593490600586,0.0737922191619873,0.34468722343444824,0.43457841873168945,4.239251375198364,3,83,DDL,survived,,,1,0.03611874580383301
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0020301342010498047,0.007843732833862305,NA,NA,NA,0.0408787727355957,2.7691545486450195,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.002715587615966797,0.008248567581176758,NA,NA,NA,0.04310178756713867,2.4045650959014893,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0025243759155273438,0.007954835891723633,NA,NA,NA,0.041437387466430664,2.570594549179077,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0020613670349121094,0.007451057434082031,0.006608724594116211,10.109065771102905,0.3932228088378906,10.516348361968994,12.790625810623169,1,37,IOD,timeout,,,,5.020761489868164
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0020613670349121094,0.007451057434082031,0.006608724594116211,10.109065771102905,0.3932228088378906,10.516348361968994,12.790625810623169,2,53,IOD,timeout,,,,5.0231053829193115
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0020613670349121094,0.007451057434082031,0.006608724594116211,10.109065771102905,0.3932228088378906,10.516348361968994,12.790625810623169,3,83,IOD,survived,,,1,0.03236055374145508
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0020613670349121094,0.007451057434082031,0.006608724594116211,10.109065771102905,0.3932228088378906,10.516348361968994,12.790625810623169,4,94,IOD,survived,,,1,0.027939558029174805
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.002042531967163086,0.00678706169128418,0.0029447078704833984,0.0592036247253418,0.20372724533081055,0.2726626396179199,2.7171614170074463,1,37,IOP,survived,,,1,0.026947021484375
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.002042531967163086,0.00678706169128418,0.0029447078704833984,0.0592036247253418,0.20372724533081055,0.2726626396179199,2.7171614170074463,2,94,IOP,survived,,,1,0.030248641967773438
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0020973682403564453,0.007328510284423828,NA,NA,NA,0.03953695297241211,2.866328001022339,NA,NA,LCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.005960702896118164,0.011248588562011719,NA,NA,NA,0.05076122283935547,2.6112735271453857,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.002129793167114258,0.00864553451538086,NA,NA,NA,0.04369807243347168,2.806058168411255,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0035169124603271484,0.01038670539855957,NA,NA,NA,0.05488085746765137,2.809877872467041,NA,NA,ROR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.002373933792114258,0.009385824203491211,0.005045652389526367,0.0824441909790039,0.2944927215576172,0.39136838912963867,2.6524128913879395,1,37,SCD,survived,,,1,0.04855966567993164
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.002373933792114258,0.009385824203491211,0.005045652389526367,0.0824441909790039,0.2944927215576172,0.39136838912963867,2.6524128913879395,2,94,SCD,survived,,,1,0.030896425247192383
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0025005340576171875,0.009131193161010742,0.004371166229248047,0.07994985580444336,0.34911417961120605,0.4425663948059082,3.3731653690338135,1,53,SCI,killed,test_els (test.aqua.test_numpy_ls_solver.TestNumPyLSsolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_ls_solver.py"", line 31, in test_els\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver"", line 58, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 47, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,0.034571170806884766
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0025005340576171875,0.009131193161010742,0.004371166229248047,0.07994985580444336,0.34911417961120605,0.4425663948059082,3.3731653690338135,2,83,SCI,survived,,,1,0.04252982139587402
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.003519296646118164,0.012981414794921875,NA,NA,NA,0.05618143081665039,3.359288454055786,NA,NA,SIR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0031890869140625,0.021076440811157227,NA,NA,NA,3.461544990539551,7.009502172470093,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0036225318908691406,0.009908676147460938,NA,NA,NA,16.89620280265808,20.148956298828125,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.004280805587768555,0.012488603591918945,NA,NA,NA,13.836147785186768,17.039947271347046,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0023233890533447266,0.0077474117279052734,NA,NA,NA,0.04149770736694336,2.6550261974334717,NA,NA,QMD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.linear_solvers.numpy_ls_solver,test.aqua.test_numpy_ls_solver,1,0.0026144981384277344,0.007923126220703125,NA,NA,NA,3.3054637908935547,6.026479959487915,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011288166046142578,0.06700301170349121,0.03771042823791504,0.2154226303100586,3.6368467807769775,3.9569828510284424,11.222520112991333,1,147,AOD,survived,,,-1,0.04547905921936035
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011288166046142578,0.06700301170349121,0.03771042823791504,0.2154226303100586,3.6368467807769775,3.9569828510284424,11.222520112991333,2,213,AOD,survived,,,-1,0.05752253532409668
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011288166046142578,0.06700301170349121,0.03771042823791504,0.2154226303100586,3.6368467807769775,3.9569828510284424,11.222520112991333,3,219,AOD,survived,,,-1,0.05357670783996582
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011288166046142578,0.06700301170349121,0.03771042823791504,0.2154226303100586,3.6368467807769775,3.9569828510284424,11.222520112991333,4,220,AOD,survived,,,-1,0.047525644302368164
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,1,147,AOR,survived,,,-1,0.047025442123413086
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,2,213,AOR,survived,,,-1,0.05960869789123535
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,3,213,AOR,survived,,,-1,0.04880213737487793
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,4,213,AOR,survived,,,-1,0.06414031982421875
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,5,213,AOR,survived,,,-1,0.03966331481933594
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,6,219,AOR,survived,,,-1,0.03889107704162598
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,7,219,AOR,survived,,,-1,0.08508110046386719
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,8,219,AOR,survived,,,-1,0.13402104377746582
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,9,219,AOR,survived,,,-1,0.11571073532104492
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,10,220,AOR,survived,,,-1,0.08200192451477051
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,11,220,AOR,survived,,,-1,0.059381961822509766
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,12,220,AOR,survived,,,-1,0.0927731990814209
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,13,220,AOR,survived,,,-1,0.06904363632202148
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,14,222,AOR,survived,,,-1,0.08101367950439453
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,15,222,AOR,survived,,,-1,0.10581707954406738
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,16,222,AOR,survived,,,-1,0.06421351432800293
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,17,225,AOR,survived,,,-1,0.06572198867797852
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,18,225,AOR,survived,,,-1,0.05243730545043945
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,19,236,AOR,survived,,,-1,0.15831351280212402
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,20,256,AOR,survived,,,-1,0.09596657752990723
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,21,256,AOR,survived,,,-1,0.06670761108398438
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,22,256,AOR,survived,,,-1,0.147536039352417
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,23,256,AOR,survived,,,-1,0.1323530673980713
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,24,269,AOR,survived,,,-1,0.07550883293151855
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,25,269,AOR,survived,,,-1,0.08764886856079102
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,26,269,AOR,survived,,,-1,0.07198071479797363
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,27,269,AOR,survived,,,-1,0.14643311500549316
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,28,270,AOR,survived,,,-1,0.05943870544433594
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,29,270,AOR,survived,,,-1,0.04645395278930664
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,30,270,AOR,survived,,,-1,0.1008298397064209
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.011562347412109375,0.05438852310180664,0.32801103591918945,2.6823079586029053,34.45425820350647,37.51896572113037,42.8650643825531,31,270,AOR,survived,,,-1,0.07816839218139648
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.007905006408691406,0.0432276725769043,0.027771472930908203,0.18286728858947754,2.544609308242798,2.798475742340088,9.02730107307434,1,219,ASR,survived,,,-1,0.056593894958496094
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.007905006408691406,0.0432276725769043,0.027771472930908203,0.18286728858947754,2.544609308242798,2.798475742340088,9.02730107307434,2,220,ASR,survived,,,-1,0.0406336784362793
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.007905006408691406,0.0432276725769043,0.027771472930908203,0.18286728858947754,2.544609308242798,2.798475742340088,9.02730107307434,3,269,ASR,survived,,,-1,0.07825255393981934
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.007093191146850586,0.03808188438415527,0.016689777374267578,0.1684105396270752,2.2938380241394043,2.5170202255249023,7.240214824676514,1,146,BCR,survived,,,-1,0.06910252571105957
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.007093191146850586,0.03808188438415527,0.016689777374267578,0.1684105396270752,2.2938380241394043,2.5170202255249023,7.240214824676514,2,151,BCR,survived,,,-1,0.0485837459564209
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.007093191146850586,0.03808188438415527,0.016689777374267578,0.1684105396270752,2.2938380241394043,2.5170202255249023,7.240214824676514,3,156,BCR,survived,,,-1,0.0466313362121582
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.012029647827148438,0.07285118103027344,0.02172684669494629,0.17523956298828125,3.027327060699463,3.297144651412964,9.132272243499756,1,164,COD,survived,,,-1,0.05183601379394531
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.012029647827148438,0.07285118103027344,0.02172684669494629,0.17523956298828125,3.027327060699463,3.297144651412964,9.132272243499756,2,215,COD,survived,,,-1,0.048564910888671875
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.012029647827148438,0.07285118103027344,0.02172684669494629,0.17523956298828125,3.027327060699463,3.297144651412964,9.132272243499756,3,217,COD,survived,,,-1,0.06902265548706055
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,1,141,COI,survived,,,-1,0.04826474189758301
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,2,143,COI,survived,,,-1,0.041057586669921875
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,3,148,COI,survived,,,-1,0.04875636100769043
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,4,148,COI,survived,,,-1,0.05121970176696777
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,5,153,COI,survived,,,-1,0.04582357406616211
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,6,153,COI,survived,,,-1,0.05348920822143555
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,7,153,COI,survived,,,-1,0.06438302993774414
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,8,159,COI,survived,,,-1,0.041986942291259766
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,9,163,COI,survived,,,-1,0.05086040496826172
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,10,164,COI,survived,,,-1,0.05361509323120117
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,11,168,COI,survived,,,-1,0.056238412857055664
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,12,170,COI,survived,,,-1,0.047782182693481445
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,13,170,COI,survived,,,-1,0.07361936569213867
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,14,174,COI,survived,,,-1,0.048807621002197266
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,15,176,COI,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 178, in parse\nKeyError: (0, 1)\n",1,0.07713460922241211
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,16,176,COI,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 178, in parse\nKeyError: (0, 1)\n",1,0.044797658920288086
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,17,215,COI,survived,,,-1,0.08146095275878906
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009410858154296875,0.04676103591918945,0.15204739570617676,1.050837755203247,14.8417227268219,16.091368913650513,20.788306951522827,18,217,COI,survived,,,-1,0.0733952522277832
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,1,45,CRP,survived,,,-1,0.0678403377532959
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,2,45,CRP,survived,,,-1,0.03603482246398926
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,3,46,CRP,survived,,,-1,0.04294562339782715
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,4,58,CRP,survived,,,-1,0.038075923919677734
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,5,58,CRP,survived,,,-1,0.044069528579711914
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,6,58,CRP,survived,,,-1,0.05229496955871582
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,7,59,CRP,survived,,,-1,0.05149579048156738
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,8,59,CRP,survived,,,-1,0.04065060615539551
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,9,59,CRP,survived,,,-1,0.04398751258850098
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,10,60,CRP,survived,,,-1,0.031113862991333008
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,11,60,CRP,survived,,,-1,0.03257489204406738
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,12,60,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 60, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 97, in validate_range\n    '{} must have value >= {} and <= {}, was {}'.format(name, minimum, maximum, value))\nValueError: display must have value >= 1 and <= 5, was 0\n",1,0.05043196678161621
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,13,60,CRP,survived,,,-1,0.0428617000579834
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,14,63,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\nKeyError: 'mutpy'\n",1,0.044278621673583984
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,15,63,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\nKeyError: ''\n",1,0.0435948371887207
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,16,73,CRP,survived,,,-1,0.039835214614868164
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,17,73,CRP,survived,,,-1,0.14084744453430176
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,18,73,CRP,survived,,,-1,0.054842233657836914
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,19,73,CRP,survived,,,-1,0.03830409049987793
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,20,74,CRP,survived,,,-1,0.047446489334106445
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,21,74,CRP,survived,,,-1,0.07749295234680176
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,22,74,CRP,survived,,,-1,0.05856680870056152
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,23,74,CRP,survived,,,-1,0.04081153869628906
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,24,75,CRP,survived,,,-1,0.03691267967224121
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,25,75,CRP,survived,,,-1,0.07553815841674805
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,26,89,CRP,survived,,,-1,0.125274658203125
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,27,89,CRP,survived,,,-1,0.04987359046936035
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,28,90,CRP,survived,,,-1,0.0483851432800293
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,29,91,CRP,survived,,,-1,0.03865790367126465
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,30,91,CRP,survived,,,-1,0.04499340057373047
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,31,91,CRP,survived,,,-1,0.03664970397949219
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,32,91,CRP,survived,,,-1,0.047086477279663086
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,33,91,CRP,survived,,,-1,0.03476524353027344
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,34,91,CRP,survived,,,-1,0.047476768493652344
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,35,96,CRP,survived,,,-1,0.04552054405212402
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,36,96,CRP,survived,,,-1,0.0394291877746582
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,37,96,CRP,survived,,,-1,0.03470754623413086
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,38,104,CRP,survived,,,-1,0.0559840202331543
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,39,105,CRP,survived,,,-1,0.036855220794677734
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,40,113,CRP,survived,,,-1,0.046236276626586914
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,41,114,CRP,survived,,,-1,0.07855892181396484
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,42,141,CRP,survived,,,-1,0.06605672836303711
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,43,142,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 142, in parse\nKeyError: 'mutpy'\n",1,0.04947543144226074
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,44,142,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 142, in parse\nKeyError: ''\n",1,0.04783058166503906
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,45,143,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 143, in parse\nKeyError: 'mutpy'\n",1,0.03838992118835449
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,46,143,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 143, in parse\nKeyError: ''\n",1,0.04024386405944824
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,47,144,CRP,survived,,,-1,0.04672098159790039
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,48,144,CRP,survived,,,-1,0.05302309989929199
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,49,145,CRP,survived,,,-1,0.038230180740356445
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,50,145,CRP,survived,,,-1,0.03756546974182129
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,51,147,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 147, in parse\nKeyError: 'mutpy'\n",1,0.039447784423828125
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,52,147,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 147, in parse\nKeyError: ''\n",1,0.044179439544677734
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,53,147,CRP,survived,,,-1,0.054746150970458984
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,54,148,CRP,survived,,,-1,0.03862953186035156
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,55,148,CRP,survived,,,-1,0.08962559700012207
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,56,148,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 148, in parse\nKeyError: 'mutpy'\n",1,0.04939532279968262
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,57,148,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 148, in parse\nKeyError: ''\n",1,0.045084238052368164
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,58,148,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 148, in parse\nKeyError: 'mutpy'\n",1,0.04882311820983887
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,59,148,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 148, in parse\nKeyError: ''\n",1,0.04538750648498535
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,60,148,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 148, in parse\nKeyError: 'mutpy'\n",1,0.04251456260681152
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,61,148,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 148, in parse\nKeyError: ''\n",1,0.03448224067687988
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,62,148,CRP,survived,,,-1,0.04520153999328613
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,63,150,CRP,survived,,,-1,0.04686713218688965
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,64,150,CRP,survived,,,-1,0.053559064865112305
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,65,152,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 152, in parse\nKeyError: 'mutpy'\n",1,0.04181194305419922
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,66,152,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 152, in parse\nKeyError: ''\n",1,0.05457282066345215
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,67,152,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 152, in parse\nKeyError: 'mutpy'\n",1,0.04617619514465332
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,68,152,CRP,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 37, in test_cplex_ising\n    algo = ClassicalCPLEX(self.qubit_op, display=0)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 63, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 152, in parse\nKeyError: ''\n",1,0.052100419998168945
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,69,153,CRP,survived,,,-1,0.042147159576416016
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,70,153,CRP,survived,,,-1,0.050225019454956055
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,71,153,CRP,survived,,,-1,0.04162740707397461
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,72,153,CRP,survived,,,-1,0.049523115158081055
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,73,155,CRP,survived,,,-1,0.05029106140136719
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,74,155,CRP,survived,,,-1,0.0476992130279541
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,75,159,CRP,survived,,,-1,0.039017438888549805
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,76,159,CRP,survived,,,-1,0.12220501899719238
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,77,163,CRP,survived,,,-1,0.04985857009887695
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,78,166,CRP,survived,,,-1,0.05470561981201172
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,79,166,CRP,survived,,,-1,0.060974836349487305
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,80,168,CRP,survived,,,-1,0.07737016677856445
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,81,169,CRP,survived,,,-1,0.04643392562866211
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,82,171,CRP,survived,,,-1,0.04853940010070801
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,83,171,CRP,survived,,,-1,0.04709291458129883
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,84,174,CRP,survived,,,-1,0.03591799736022949
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,85,177,CRP,survived,,,-1,0.0477147102355957
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,86,177,CRP,survived,,,-1,0.04316592216491699
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,87,182,CRP,survived,,,-1,0.050579071044921875
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,88,182,CRP,survived,,,-1,0.050449371337890625
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,89,209,CRP,survived,,,-1,0.040936946868896484
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,90,209,CRP,survived,,,-1,0.043382883071899414
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,91,213,CRP,survived,,,-1,0.033107757568359375
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,92,216,CRP,survived,,,-1,0.048091888427734375
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,93,218,CRP,survived,,,-1,0.047563791275024414
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,94,219,CRP,survived,,,-1,0.041971445083618164
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,95,220,CRP,survived,,,-1,0.03705286979675293
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,96,222,CRP,survived,,,-1,0.043190956115722656
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,97,239,CRP,survived,,,-1,0.04053997993469238
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,98,239,CRP,survived,,,-1,0.047258853912353516
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,99,241,CRP,survived,,,-1,0.044913291931152344
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,100,241,CRP,survived,,,-1,0.039305686950683594
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,101,251,CRP,survived,,,-1,0.05882883071899414
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,102,251,CRP,survived,,,-1,0.06412649154663086
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,103,256,CRP,survived,,,-1,0.04948997497558594
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,104,256,CRP,survived,,,-1,0.05727529525756836
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,105,267,CRP,survived,,,-1,0.0649406909942627
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,106,269,CRP,survived,,,-1,0.039034128189086914
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,107,270,CRP,survived,,,-1,0.04428243637084961
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,108,270,CRP,survived,,,-1,0.04018425941467285
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,109,271,CRP,survived,,,-1,0.04891252517700195
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,110,291,CRP,survived,,,-1,0.04068160057067871
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,111,291,CRP,survived,,,-1,0.04689836502075195
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,112,292,CRP,survived,,,-1,0.03948712348937988
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,113,292,CRP,survived,,,-1,0.06771087646484375
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,114,293,CRP,survived,,,-1,0.04034614562988281
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,115,293,CRP,survived,,,-1,0.04244875907897949
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,116,295,CRP,survived,,,-1,0.04460597038269043
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,117,295,CRP,survived,,,-1,0.034264564514160156
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,118,295,CRP,survived,,,-1,0.03957653045654297
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006323575973510742,0.035683631896972656,0.8828902244567871,6.082849740982056,87.28454971313477,94.28597331047058,98.451833486557,119,295,CRP,survived,,,-1,0.034464359283447266
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00676727294921875,0.03846120834350586,0.08465933799743652,0.6612987518310547,9.517345905303955,10.301765203475952,14.295036554336548,1,77,DDL,survived,,,-1,0.05301547050476074
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00676727294921875,0.03846120834350586,0.08465933799743652,0.6612987518310547,9.517345905303955,10.301765203475952,14.295036554336548,2,118,DDL,survived,,,-1,0.05216670036315918
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00676727294921875,0.03846120834350586,0.08465933799743652,0.6612987518310547,9.517345905303955,10.301765203475952,14.295036554336548,3,123,DDL,survived,,,-1,0.035074710845947266
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00676727294921875,0.03846120834350586,0.08465933799743652,0.6612987518310547,9.517345905303955,10.301765203475952,14.295036554336548,4,128,DDL,survived,,,-1,0.042754411697387695
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00676727294921875,0.03846120834350586,0.08465933799743652,0.6612987518310547,9.517345905303955,10.301765203475952,14.295036554336548,5,133,DDL,survived,,,-1,0.06003570556640625
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00676727294921875,0.03846120834350586,0.08465933799743652,0.6612987518310547,9.517345905303955,10.301765203475952,14.295036554336548,6,197,DDL,survived,,,-1,0.047345638275146484
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00676727294921875,0.03846120834350586,0.08465933799743652,0.6612987518310547,9.517345905303955,10.301765203475952,14.295036554336548,7,202,DDL,survived,,,-1,0.044324636459350586
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00676727294921875,0.03846120834350586,0.08465933799743652,0.6612987518310547,9.517345905303955,10.301765203475952,14.295036554336548,8,265,DDL,survived,,,-1,0.06039547920227051
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00676727294921875,0.03846120834350586,0.08465933799743652,0.6612987518310547,9.517345905303955,10.301765203475952,14.295036554336548,9,274,DDL,survived,,,-1,0.039804697036743164
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00676727294921875,0.03846120834350586,0.08465933799743652,0.6612987518310547,9.517345905303955,10.301765203475952,14.295036554336548,10,279,DDL,survived,,,-1,0.07676434516906738
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00676727294921875,0.03846120834350586,0.08465933799743652,0.6612987518310547,9.517345905303955,10.301765203475952,14.295036554336548,11,284,DDL,survived,,,-1,0.032463788986206055
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00676727294921875,0.03846120834350586,0.08465933799743652,0.6612987518310547,9.517345905303955,10.301765203475952,14.295036554336548,12,299,DDL,survived,,,-1,0.03800702095031738
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00676727294921875,0.03846120834350586,0.08465933799743652,0.6612987518310547,9.517345905303955,10.301765203475952,14.295036554336548,13,304,DDL,survived,,,-1,0.05493307113647461
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009854793548583984,0.04401969909667969,NA,NA,NA,0.22229266166687012,4.845444917678833,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.007271289825439453,0.04142498970031738,NA,NA,NA,0.18846964836120605,3.8050696849823,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.008752584457397461,0.052895307540893555,NA,NA,NA,0.2378542423248291,4.336062908172607,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.0061419010162353516,0.031282901763916016,0.010978460311889648,10.082233905792236,1.664111852645874,11.788607120513916,15.655802488327026,1,44,IOD,timeout,,,,5.0193030834198
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.0061419010162353516,0.031282901763916016,0.010978460311889648,10.082233905792236,1.664111852645874,11.788607120513916,15.655802488327026,2,69,IOD,timeout,,,,5.0173797607421875
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.0061419010162353516,0.031282901763916016,0.010978460311889648,10.082233905792236,1.664111852645874,11.788607120513916,15.655802488327026,3,88,IOD,survived,,,-1,0.042401790618896484
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.008254051208496094,0.03477287292480469,0.011644124984741211,0.13181185722351074,1.3878512382507324,1.566080093383789,5.432828903198242,1,44,IOP,survived,,,-1,0.03706550598144531
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.008254051208496094,0.03477287292480469,0.011644124984741211,0.13181185722351074,1.3878512382507324,1.566080093383789,5.432828903198242,2,88,IOP,survived,,,-1,0.09171438217163086
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.0066068172454833984,0.035599470138549805,0.010897636413574219,0.08060932159423828,1.4887139797210693,1.6158204078674316,5.495734691619873,1,148,LCR,survived,,,-1,0.042981624603271484
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.0066068172454833984,0.035599470138549805,0.010897636413574219,0.08060932159423828,1.4887139797210693,1.6158204078674316,5.495734691619873,2,153,LCR,survived,,,-1,0.035202980041503906
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.008812189102172852,0.0477449893951416,NA,NA,NA,0.23555946350097656,4.226373910903931,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.007163524627685547,0.038294076919555664,NA,NA,NA,0.18540048599243164,4.342638254165649,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00754094123840332,0.04039812088012695,0.035643815994262695,0.3194286823272705,5.213907480239868,5.609378099441528,9.749845027923584,1,141,ROR,survived,,,-1,0.038234710693359375
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00754094123840332,0.04039812088012695,0.035643815994262695,0.3194286823272705,5.213907480239868,5.609378099441528,9.749845027923584,2,143,ROR,survived,,,-1,0.03830575942993164
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00754094123840332,0.04039812088012695,0.035643815994262695,0.3194286823272705,5.213907480239868,5.609378099441528,9.749845027923584,3,148,ROR,survived,,,-1,0.05980324745178223
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00754094123840332,0.04039812088012695,0.035643815994262695,0.3194286823272705,5.213907480239868,5.609378099441528,9.749845027923584,4,159,ROR,survived,,,-1,0.04618692398071289
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00754094123840332,0.04039812088012695,0.035643815994262695,0.3194286823272705,5.213907480239868,5.609378099441528,9.749845027923584,5,163,ROR,survived,,,-1,0.03768467903137207
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00754094123840332,0.04039812088012695,0.035643815994262695,0.3194286823272705,5.213907480239868,5.609378099441528,9.749845027923584,6,168,ROR,survived,,,-1,0.04745841026306152
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.00754094123840332,0.04039812088012695,0.035643815994262695,0.3194286823272705,5.213907480239868,5.609378099441528,9.749845027923584,7,174,ROR,survived,,,-1,0.041385650634765625
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.01059103012084961,0.07934808731079102,0.009200334548950195,0.08343029022216797,1.4518301486968994,1.6238088607788086,5.017446041107178,1,44,SCD,survived,,,-1,0.04030346870422363
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.01059103012084961,0.07934808731079102,0.009200334548950195,0.08343029022216797,1.4518301486968994,1.6238088607788086,5.017446041107178,2,88,SCD,survived,,,-1,0.04097890853881836
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.007521629333496094,0.039346933364868164,0.0063283443450927734,0.044682979583740234,1.2315008640289307,1.3218591213226318,5.609260559082031,1,69,SCI,killed,test_cplex_ising (test.optimization.test_classical_cplex.TestClassicalCplex),"Traceback (most recent call last):\n  File ""./test/optimization/test_classical_cplex.py"", line 38, in test_cplex_ising\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex"", line 70, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 47, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,0.04310345649719238
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.008842229843139648,0.039182424545288086,0.004712820053100586,0.033709049224853516,0.7374401092529297,0.8150444030761719,5.166930437088013,1,147,SIR,survived,,,-1,0.032624244689941406
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.0064890384674072266,0.041959285736083984,NA,NA,NA,15.456292629241943,20.627634048461914,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.007082223892211914,0.03670239448547363,NA,NA,NA,1522.1974833011627,1526.701832294464,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.009077787399291992,0.039577484130859375,NA,NA,NA,1131.253428220749,1135.3100571632385,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.006849527359008789,0.034566402435302734,NA,NA,NA,0.17692184448242188,4.090429306030273,NA,NA,QMD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.cplex.classical_cplex,test.optimization.test_classical_cplex,0,0.010298013687133789,0.04602336883544922,NA,NA,NA,19.13020396232605,24.095357179641724,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,24.805999755859375,0.05858802795410156,0.06220388412475586,43.396230936050415,5.00307297706604,48.52009582519531,75.95104146003723,1,204,AOD,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -0.75\n DESIRED: 2.7320508075688767\n",1,6.852437734603882
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,24.805999755859375,0.05858802795410156,0.06220388412475586,43.396230936050415,5.00307297706604,48.52009582519531,75.95104146003723,2,244,AOD,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -4.0\n DESIRED: 2.7320508075688767\n",1,1.2534985542297363
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,24.805999755859375,0.05858802795410156,0.06220388412475586,43.396230936050415,5.00307297706604,48.52009582519531,75.95104146003723,3,247,AOD,killed,test_iqpe_00003___QUBIT_OP_H2_WITH_2_QUBIT_REDUCTION____statevector_simulator___1__6__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 1.8491663307965913\n DESIRED: -1.8572750302023806\n",3,27.147658348083496
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,24.805999755859375,0.05858802795410156,0.06220388412475586,43.396230936050415,5.00307297706604,48.52009582519531,75.95104146003723,4,259,AOD,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -2.75\n DESIRED: 2.7320508075688767\n",1,8.135510683059692
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,1,115,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 688, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: nan\n DESIRED: 2.7320508075688767\n",1,6.035536289215088
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,2,115,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -3.609375\n DESIRED: 2.7320508075688767\n",1,6.746640682220459
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,3,134,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 2.25\n DESIRED: 2.7320508075688767\n",1,8.558380842208862
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,4,134,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 2.25\n DESIRED: 2.7320508075688767\n",1,8.186288595199585
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,5,134,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,7.318175315856934
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,6,204,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -0.75\n DESIRED: 2.7320508075688767\n",1,7.6553826332092285
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,7,204,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 1.25\n DESIRED: 2.7320508075688767\n",1,7.495446681976318
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,8,204,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 1.25\n DESIRED: 2.7320508075688767\n",1,6.820553302764893
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,9,204,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.25\n DESIRED: 2.7320508075688767\n",1,7.503479719161987
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,10,206,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 207, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/legacy/common.py"", line 259, in evolution_instruction\n    raise AquaError(""power must be an integer and greater or equal to 1."")\nqiskit.aqua.aqua_error.AquaError: 'power must be an integer and greater or equal to 1.'\n",1,5.610469818115234
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,11,206,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 0.0\n DESIRED: 2.7320508075688767\n",1,25.967648029327393
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,12,210,AOR,timeout,,,,129.2611973285675
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,13,213,AOR,survived,,,3,23.67414379119873
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,14,215,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -1.75\n DESIRED: 2.7320508075688767\n",1,8.78977918624878
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,15,215,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -2.25\n DESIRED: 2.7320508075688767\n",1,6.956531763076782
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,16,215,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -3.25\n DESIRED: 2.7320508075688767\n",1,7.562872409820557
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,17,215,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 2.5\n DESIRED: 2.7320508075688767\n",1,8.390845775604248
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,18,215,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 2.5\n DESIRED: 2.7320508075688767\n",1,7.6692023277282715
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,19,215,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 1.75\n DESIRED: 2.7320508075688767\n",1,8.001384735107422
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,20,215,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.75\n DESIRED: 2.7320508075688767\n",1,6.329364061355591
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,21,215,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 1.75\n DESIRED: 2.7320508075688767\n",1,6.190293550491333
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,22,215,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.75\n DESIRED: 2.7320508075688767\n",1,6.171951532363892
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,23,215,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -1.75\n DESIRED: 2.7320508075688767\n",1,6.763580322265625
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,24,215,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 1.75\n DESIRED: 2.7320508075688767\n",1,5.584222316741943
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,25,244,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -4.0\n DESIRED: 2.7320508075688767\n",1,0.9286136627197266
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,26,247,AOR,killed,test_iqpe_00003___QUBIT_OP_H2_WITH_2_QUBIT_REDUCTION____statevector_simulator___1__6__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 1.8491663307965913\n DESIRED: -1.8572750302023806\n",3,23.913771390914917
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,27,247,AOR,killed,test_iqpe_00003___QUBIT_OP_H2_WITH_2_QUBIT_REDUCTION____statevector_simulator___1__6__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -1.5941089058591305\n DESIRED: -1.8572750302023806\n",3,19.96506094932556
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,28,247,AOR,killed,test_iqpe_00003___QUBIT_OP_H2_WITH_2_QUBIT_REDUCTION____statevector_simulator___1__6__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -1.5941089058591305\n DESIRED: -1.8572750302023806\n",3,19.81514024734497
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,29,247,AOR,killed,test_iqpe_00002___QUBIT_OP_ZZ____statevector_simulator___1__1__False_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 247, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2270, in p\n    return self.append(PhaseGate(theta), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/standard_gates/p.py"", line 74, in __init__\n    super().__init__('p', 1, [theta], label=label)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 40, in __init__\n    super().__init__(name, num_qubits, 0, params)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 88, in __init__\n    self.params = params\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 191, in params\n    self._params.append(self.validate_parameter(single_param))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 259, in validate_parameter\n    self.name))\nqiskit.circuit.exceptions.CircuitError: ""Invalid param type <class 'complex'> for gate p.""\n",2,6.458157539367676
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,30,247,AOR,killed,test_iqpe_00002___QUBIT_OP_ZZ____statevector_simulator___1__1__False_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 247, in _estimate_phase_iteratively\nZeroDivisionError: float division by zero\n",2,7.370296478271484
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,31,247,AOR,killed,test_iqpe_00002___QUBIT_OP_ZZ____statevector_simulator___1__1__False_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 247, in _estimate_phase_iteratively\nZeroDivisionError: float divmod()\n",2,6.695414066314697
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,32,247,AOR,killed,test_iqpe_00003___QUBIT_OP_H2_WITH_2_QUBIT_REDUCTION____statevector_simulator___1__6__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 248, in _estimate_phase_iteratively\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 305, in execute\n    circuits = self.transpile(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 264, in transpile\n    **self._compile_config)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 245, in transpile\n    circuits = parallel_map(_transpile_circuit, list(zip(circuits, transpile_args)))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/tools/parallel.py"", line 128, in parallel_map\n    return [task(values[0], *task_args, **task_kwargs)]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 329, in _transpile_circuit\n    output_name=transpile_config['output_name'])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 216, in run\n    return self._run_single_circuit(circuits, output_name, callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passmanager.py"", line 277, in _run_single_circuit\n    result = running_passmanager.run(circuit, output_name=output_name, callback=callback)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 122, in run\n    dag = self._do_pass(pass_, dag, passset.options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 153, in _do_pass\n    dag = self._run_this_pass(pass_, dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/runningpassmanager.py"", line 165, in _run_this_pass\n    new_dag = pass_.run(dag)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/transpiler/passes/basis/basis_translator.py"", line 158, in run\n    inplace=True)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/utils/deprecation.py"", line 56, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2055, in assign_parameters\n    bound_circuit._assign_parameter(parameter, value)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2122, in _assign_parameter\n    instr.params[param_index] = instr.validate_parameter(new_param)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 245, in validate_parameter\n    self.name))\nqiskit.circuit.exceptions.CircuitError: 'Bound parameter expression is complex in gate u1'\n",3,17.53714394569397
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,33,259,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -2.75\n DESIRED: 2.7320508075688767\n",1,7.489922761917114
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,34,259,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -0.25\n DESIRED: 2.7320508075688767\n",1,6.04137110710144
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,35,259,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -0.25\n DESIRED: 2.7320508075688767\n",1,5.355927228927612
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,36,259,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2270, in p\n    return self.append(PhaseGate(theta), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/standard_gates/p.py"", line 74, in __init__\n    super().__init__('p', 1, [theta], label=label)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 40, in __init__\n    super().__init__(name, num_qubits, 0, params)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 88, in __init__\n    self.params = params\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 191, in params\n    self._params.append(self.validate_parameter(single_param))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 259, in validate_parameter\n    self.name))\nqiskit.circuit.exceptions.CircuitError: ""Invalid param type <class 'complex'> for gate p.""\n",1,1.4967701435089111
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,37,259,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\nZeroDivisionError: float division by zero\n",1,1.2996478080749512
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,38,259,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\nZeroDivisionError: float divmod()\n",1,1.200850009918213
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,39,259,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2270, in p\n    return self.append(PhaseGate(theta), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/standard_gates/p.py"", line 74, in __init__\n    super().__init__('p', 1, [theta], label=label)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 40, in __init__\n    super().__init__(name, num_qubits, 0, params)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 88, in __init__\n    self.params = params\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 191, in params\n    self._params.append(self.validate_parameter(single_param))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 259, in validate_parameter\n    self.name))\nqiskit.circuit.exceptions.CircuitError: ""Invalid param type <class 'complex'> for gate p.""\n",1,3.6226446628570557
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,40,274,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -5.25\n DESIRED: 2.7320508075688767\n",1,6.848276615142822
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,41,274,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -4.0\n DESIRED: 2.7320508075688767\n",1,6.569177150726318
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,42,274,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 15.0\n DESIRED: 2.7320508075688767\n",1,6.114121675491333
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,43,291,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 293, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 291, in <listcomp>\nZeroDivisionError: float division by zero\n",1,5.882595062255859
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,44,291,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 293, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 291, in <listcomp>\nZeroDivisionError: float divmod()\n",1,6.105440139770508
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,45,291,AOR,survived,,,3,19.13091492652893
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,46,292,AOR,survived,,,3,19.53557538986206
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,47,292,AOR,survived,,,3,17.993807554244995
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,48,292,AOR,survived,,,3,18.826273441314697
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,49,292,AOR,survived,,,3,19.979137897491455
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,50,295,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 2.0\n DESIRED: 2.7320508075688767\n",1,6.5490193367004395
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,51,295,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -3.89453125\n DESIRED: 2.7320508075688767\n",1,7.685442686080933
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,25.826995849609375,0.04986405372619629,0.4183385372161865,607.0856592655182,45.71363568305969,653.2674975395203,683.473822593689,52,295,AOR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 10.75\n DESIRED: 2.7320508075688767\n",1,7.307257890701294
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,24.75518798828125,0.049001216888427734,0.03380441665649414,188.00521087646484,5.581054925918579,193.66907143592834,222.93398809432983,1,129,ASR,survived,,,3,25.143921375274658
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,24.75518798828125,0.049001216888427734,0.03380441665649414,188.00521087646484,5.581054925918579,193.66907143592834,222.93398809432983,2,211,ASR,timeout,,,,123.89572167396545
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,24.75518798828125,0.049001216888427734,0.03380441665649414,188.00521087646484,5.581054925918579,193.66907143592834,222.93398809432983,3,245,ASR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -4.0\n DESIRED: 2.7320508075688767\n",1,7.916050910949707
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,24.75518798828125,0.049001216888427734,0.03380441665649414,188.00521087646484,5.581054925918579,193.66907143592834,222.93398809432983,4,245,ASR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 116.0\n DESIRED: 2.7320508075688767\n",1,7.018813133239746
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,24.75518798828125,0.049001216888427734,0.03380441665649414,188.00521087646484,5.581054925918579,193.66907143592834,222.93398809432983,5,285,ASR,survived,,,3,24.019240379333496
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.306413412094116,0.03531479835510254,NA,NA,NA,0.17258167266845703,20.173018217086792,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,24.561628818511963,0.039225101470947266,0.020351409912109375,11.785179376602173,2.0952508449554443,13.940006732940674,41.75242376327515,1,262,COD,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 271, in _estimate_phase_iteratively\nKeyError: '0'\n",1,5.207834959030151
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,24.561628818511963,0.039225101470947266,0.020351409912109375,11.785179376602173,2.0952508449554443,13.940006732940674,41.75242376327515,2,268,COD,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 271, in _estimate_phase_iteratively\nKeyError: '1'\n",1,6.572893381118774
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,1,109,COI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 282, in _compute_energy\nAttributeError: 'NoneType' object has no attribute 'reorder_paulis'\n",1,1.2331414222717285
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,2,111,COI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 97, in test_iqpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 101, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 113, in _setup\nAttributeError: 'SummedOp' object has no attribute 'copy'\n",1,0.9268319606781006
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,3,136,COI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 2.0\n DESIRED: 2.7320508075688767\n",1,1.7317535877227783
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,4,139,COI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 2.0\n DESIRED: 2.7320508075688767\n",1,1.743025302886963
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,5,186,COI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 260, in _estimate_phase_iteratively\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 305, in execute\n    circuits = self.transpile(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 264, in transpile\n    **self._compile_config)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 240, in transpile\n    optimization_level, callback, output_name)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 431, in _parse_transpile_args\n    output_name = _parse_output_name(output_name, circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 739, in _parse_output_name\n    return [circuit.name for circuit in circuits]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 739, in <listcomp>\n    return [circuit.name for circuit in circuits]\nAttributeError: 'NoneType' object has no attribute 'name'\n",1,1.1566798686981201
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,6,195,COI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 198, in construct_circuit\nAttributeError: 'QuantumCircuit' object has no attribute 'construct_circuit'\n",1,1.321122646331787
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,7,208,COI,survived,,,3,21.101426124572754
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,8,220,COI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 266, in _estimate_phase_iteratively\nRuntimeError: Unexpected measurement {}.\n",1,3.6414976119995117
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,9,246,COI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 305, in get_statevector\n    return postprocess.format_statevector(self.data(experiment)['statevector'],\nKeyError: 'statevector'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 249, in _estimate_phase_iteratively\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 308, in get_statevector\n    raise QiskitError(f'No statevector for experiment ""{repr(experiment)}""') from ex\nqiskit.exceptions.QiskitError: 'No statevector for experiment ""<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fde588e1780>""'\n",1,3.8022115230560303
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,10,262,COI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 271, in _estimate_phase_iteratively\nKeyError: '0'\n",1,3.944291830062866
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,11,263,COI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 266, in _estimate_phase_iteratively\nRuntimeError: Unexpected measurement {'1': 100}.\n",1,4.119440078735352
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,12,263,COI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 266, in _estimate_phase_iteratively\nRuntimeError: Unexpected measurement {'1': 100}.\n",1,4.419597625732422
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,13,268,COI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 271, in _estimate_phase_iteratively\nKeyError: '1'\n",1,5.864154100418091
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,14,284,COI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 287, in _compute_energy\nRuntimeError: Multiple identity pauli terms are present.\n",1,1.0499966144561768
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,15,286,COI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 287, in _compute_energy\nRuntimeError: Multiple identity pauli terms are present.\n",1,1.6665501594543457
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,16,301,COI,timeout,,,,100.55846881866455
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,17,301,COI,timeout,,,,100.5862762928009
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,18,303,COI,timeout,,,,100.53920841217041
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,19,303,COI,timeout,,,,100.57992601394653
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,20,305,COI,survived,,,3,22.39500141143799
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,21,305,COI,survived,,,3,23.004515647888184
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,22,307,COI,survived,,,3,24.328185319900513
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,23,307,COI,survived,,,3,24.88638424873352
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,24,309,COI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\nAttributeError: 'NoneType' object has no attribute 'real'\n",1,7.319788455963135
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,25,309,COI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\nAttributeError: 'NoneType' object has no attribute 'real'\n",1,7.383430242538452
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,26,311,COI,survived,,,3,24.470046281814575
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.103694200515747,0.0422515869140625,0.1795482635498047,616.4405329227448,22.842400789260864,639.5047335624695,663.0894074440002,27,311,COI,survived,,,3,22.60819149017334
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,1,61,CRP,survived,,,3,20.90405774116516
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,2,62,CRP,survived,,,3,18.891717195510864
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,3,63,CRP,survived,,,3,20.94676184654236
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,4,63,CRP,survived,,,3,20.88750123977661
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,5,64,CRP,survived,,,3,20.850653886795044
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,6,81,CRP,survived,,,3,21.90358281135559
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,7,81,CRP,survived,,,3,21.661497592926025
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,8,81,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 97, in test_iqpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 81, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 43, in validate_min\n    raise ValueError('{} must have value >= {}, was {}'.format(name, minimum, value))\nValueError: num_time_slices must have value >= 2, was 1\n",1,1.0277249813079834
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,9,82,CRP,survived,,,3,21.9722421169281
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,10,82,CRP,survived,,,3,20.028469800949097
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,11,82,CRP,killed,test_iqpe_00002___QUBIT_OP_ZZ____statevector_simulator___1__1__False_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 97, in test_iqpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 82, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 43, in validate_min\n    raise ValueError('{} must have value >= {}, was {}'.format(name, minimum, value))\nValueError: num_iterations must have value >= 2, was 1\n",2,6.835609197616577
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,12,83,CRP,survived,,,3,19.07927441596985
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,13,83,CRP,survived,,,3,18.674334049224854
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,14,83,CRP,survived,,,3,19.125986337661743
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,15,83,CRP,survived,,,3,19.26200556755066
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,16,83,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 97, in test_iqpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 83, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: expansion_mode must be one of '{'trotter', 'mutpy'}', was 'suzuki'.\n",1,0.8252103328704834
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,17,83,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 97, in test_iqpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 83, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: expansion_mode must be one of '{'trotter', ''}', was 'suzuki'.\n",1,0.779489278793335
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,18,84,CRP,survived,,,3,18.989787817001343
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,19,84,CRP,survived,,,3,16.586023569107056
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,20,84,CRP,survived,,,3,18.061570405960083
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,21,114,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 97, in test_iqpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 101, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 115, in _setup\nKeyError: 'translation'\n",1,1.0831983089447021
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,22,114,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 97, in test_iqpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 101, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 115, in _setup\nKeyError: 'translation'\n",1,1.1068806648254395
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,23,114,CRP,timeout,,,,100.33783459663391
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,24,115,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 97, in test_iqpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 101, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 134, in _setup\nKeyError: 'stretch'\n",1,1.244142770767212
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,25,115,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 97, in test_iqpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 101, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 134, in _setup\nKeyError: 'stretch'\n",1,0.9172141551971436
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,26,115,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -2.583333333333333\n DESIRED: 2.7320508075688767\n",1,6.651490926742554
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,27,115,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 97, in test_iqpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 101, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 115, in _setup\nKeyError: 'mutpy'\n",1,0.7655444145202637
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,28,115,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 97, in test_iqpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 101, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 115, in _setup\nKeyError: ''\n",1,1.0423529148101807
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,29,121,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 97, in test_iqpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 101, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 121, in _setup\nKeyError: 'mutpy'\n",1,0.9673044681549072
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,30,121,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 97, in test_iqpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 101, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 121, in _setup\nKeyError: ''\n",1,0.9360723495483398
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,31,134,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 284, in _compute_energy\nAttributeError: 'numpy.complex128' object has no attribute 'z'\n",1,0.7052645683288574
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,32,134,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 97, in test_iqpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 101, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 134, in _setup\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/utils/deprecation.py"", line 78, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/operators/mixins/group.py"", line 60, in __mul__\n    return self.dot(other)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/operators/symplectic/pauli.py"", line 479, in dot\n    return self.compose(other, qargs=qargs, front=True, inplace=inplace)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/operators/symplectic/pauli.py"", line 460, in compose\n    other = Pauli(other)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/operators/symplectic/pauli.py"", line 189, in __init__\n    raise QiskitError(""Invalid input data for Pauli."")\nqiskit.exceptions.QiskitError: 'Invalid input data for Pauli.'\n",1,1.148951530456543
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,33,134,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 97, in test_iqpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 101, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 134, in _setup\nKeyError: 'mutpy'\n",1,0.9233837127685547
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,34,134,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 97, in test_iqpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 101, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 134, in _setup\nKeyError: ''\n",1,1.0194318294525146
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,35,136,CRP,survived,,,3,19.107019424438477
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,36,139,CRP,survived,,,3,23.62385869026184
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,37,139,CRP,survived,,,3,18.345397472381592
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,38,143,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -3.75\n DESIRED: 2.7320508075688767\n",1,5.592440366744995
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,39,160,CRP,survived,,,3,19.563543796539307
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,40,160,CRP,survived,,,3,19.913272619247437
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,41,167,CRP,survived,,,3,21.618470907211304
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,42,167,CRP,survived,,,3,20.687172651290894
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,43,171,CRP,survived,,,3,21.963680505752563
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,44,190,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 224, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 56, in measure\n    return self.append(Measure(), [qubit], [cbit])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1012, in append\n    for (qarg, carg) in instruction.broadcast_arguments(expanded_qargs, expanded_cargs):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/measure.py"", line 39, in broadcast_arguments\n    raise CircuitError('register size error')\nqiskit.circuit.exceptions.CircuitError: 'register size error'\n",1,1.3090248107910156
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,45,190,CRP,survived,,,3,19.923988580703735
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,46,190,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 190, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",1,0.8341047763824463
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,47,191,CRP,survived,,,3,18.42557954788208
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,48,191,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 191, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",1,0.853691577911377
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,49,198,CRP,killed,test_iqpe_00002___QUBIT_OP_ZZ____statevector_simulator___1__1__False_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 247, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 198, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/initial_states/custom.py"", line 163, in construct_circuit\n    raise AquaError('Mode should be either ""vector"" or ""circuit""')\nqiskit.aqua.aqua_error.AquaError: 'Mode should be either ""vector"" or ""circuit""'\n",2,7.020894765853882
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,50,198,CRP,killed,test_iqpe_00002___QUBIT_OP_ZZ____statevector_simulator___1__1__False_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 247, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 198, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/initial_states/custom.py"", line 163, in construct_circuit\n    raise AquaError('Mode should be either ""vector"" or ""circuit""')\nqiskit.aqua.aqua_error.AquaError: 'Mode should be either ""vector"" or ""circuit""'\n",2,7.018862009048462
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,51,202,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 202, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 158, in __getitem__\n    return self._bits[key]\nIndexError: list index out of range\n",1,0.646989107131958
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,52,204,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,6.625726222991943
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,53,206,CRP,survived,,,3,81.5153579711914
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,54,206,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 207, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/legacy/common.py"", line 259, in evolution_instruction\n    raise AquaError(""power must be an integer and greater or equal to 1."")\nqiskit.aqua.aqua_error.AquaError: 'power must be an integer and greater or equal to 1.'\n",1,3.5010430812835693
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,55,210,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 210, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 158, in __getitem__\n    return self._bits[key]\nIndexError: list index out of range\n",1,0.9844982624053955
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,56,213,CRP,survived,,,3,17.118674993515015
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,57,215,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -2.75\n DESIRED: 2.7320508075688767\n",1,5.235964059829712
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,58,215,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 1.5\n DESIRED: 2.7320508075688767\n",1,5.332528829574585
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,59,215,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 0.25\n DESIRED: 2.7320508075688767\n",1,5.230721712112427
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,60,215,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 158, in __getitem__\n    return self._bits[key]\nIndexError: list index out of range\n",1,0.9962906837463379
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,61,217,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 158, in __getitem__\n    return self._bits[key]\nIndexError: list index out of range\n",1,1.4879639148712158
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,62,219,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 219, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 158, in __getitem__\n    return self._bits[key]\nIndexError: list index out of range\n",1,0.873544454574585
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,63,221,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 266, in _estimate_phase_iteratively\nRuntimeError: Unexpected measurement {'11': 100}.\n",1,3.1502745151519775
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,64,221,CRP,survived,,,3,17.010784149169922
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,65,221,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 221, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",1,0.8705215454101562
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,66,240,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 273, in _estimate_phase_iteratively\nKeyError: 'top_measurement_label'\n",1,2.868593692779541
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,67,240,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 273, in _estimate_phase_iteratively\nKeyError: 'top_measurement_label'\n",1,3.1494593620300293
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,68,240,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 293, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 293, in <listcomp>\nValueError: invalid literal for int() with base 10: 'm'\n",1,5.049772500991821
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,69,242,CRP,killed,test_iqpe_00002___QUBIT_OP_ZZ____statevector_simulator___1__1__False_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 1.0\n DESIRED: -1.0\n",2,5.646083831787109
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,70,244,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 1.5\n DESIRED: 2.7320508075688767\n",1,4.805860996246338
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,71,244,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 1.0\n DESIRED: 2.7320508075688767\n",1,3.238321304321289
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,72,245,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 1.530864197530864\n DESIRED: 2.7320508075688767\n",1,5.112461090087891
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,73,247,CRP,survived,,,3,16.405723810195923
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,74,257,CRP,killed,test_iqpe_00002___QUBIT_OP_ZZ____statevector_simulator___1__1__False_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 257, in _estimate_phase_iteratively\nIndexError: tuple index out of range\n",2,5.862910270690918
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,75,257,CRP,killed,test_iqpe_00002___QUBIT_OP_ZZ____statevector_simulator___1__1__False_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 257, in _estimate_phase_iteratively\nIndexError: index 1 is out of bounds for axis 0 with size 1\n",2,5.46861720085144
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,76,259,CRP,survived,,,3,15.9835205078125
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,77,262,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 266, in _estimate_phase_iteratively\nRuntimeError: Unexpected measurement {'0': 100}.\n",1,5.26496696472168
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,78,262,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 266, in _estimate_phase_iteratively\nRuntimeError: Unexpected measurement {'0': 100}.\n",1,4.629820823669434
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,79,263,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 266, in _estimate_phase_iteratively\nRuntimeError: Unexpected measurement {'1': 100}.\n",1,2.961590528488159
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,80,263,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 266, in _estimate_phase_iteratively\nRuntimeError: Unexpected measurement {'1': 100}.\n",1,3.1883952617645264
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,81,264,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 2.5\n DESIRED: 2.7320508075688767\n",1,4.879129409790039
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,82,266,CRP,survived,,,3,16.636377334594727
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,83,266,CRP,survived,,,3,15.237855672836304
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,84,268,CRP,survived,,,3,15.800936698913574
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,85,268,CRP,survived,,,3,16.7156183719635
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,86,269,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 1.75\n DESIRED: 2.7320508075688767\n",1,4.659371852874756
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,87,271,CRP,survived,,,3,15.574667930603027
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,88,271,CRP,survived,,,3,15.246995449066162
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,89,271,CRP,survived,,,3,15.437086582183838
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,90,271,CRP,survived,,,3,15.596342325210571
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,91,271,CRP,survived,,,3,15.992286443710327
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,92,271,CRP,survived,,,3,15.817611932754517
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,93,272,CRP,survived,,,3,17.5916268825531
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,94,272,CRP,survived,,,3,16.258559226989746
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,95,273,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 293, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 293, in <listcomp>\nValueError: invalid literal for int() with base 10: 'm'\n",1,4.9653542041778564
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,96,273,CRP,survived,,,3,17.705135583877563
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,97,273,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 273, in _estimate_phase_iteratively\nKeyError: 'mutpy'\n",1,2.724186420440674
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,98,273,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 273, in _estimate_phase_iteratively\nKeyError: ''\n",1,3.269808769226074
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,99,274,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 0.5\n DESIRED: 2.7320508075688767\n",1,4.76703667640686
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,100,275,CRP,survived,,,3,16.147364377975464
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,101,275,CRP,survived,,,3,15.260229110717773
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,102,281,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 287, in _compute_energy\nRuntimeError: Multiple identity pauli terms are present.\n",1,0.7991130352020264
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,103,284,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 284, in _compute_energy\nIndexError: list index out of range\n",1,0.7673063278198242
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,104,284,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 284, in _compute_energy\nIndexError: list index out of range\n",1,0.9214632511138916
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,105,285,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 287, in _compute_energy\nRuntimeError: Multiple identity pauli terms are present.\n",1,0.6108410358428955
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,106,286,CRP,survived,,,3,16.059199810028076
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,107,287,CRP,survived,,,3,16.039512872695923
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,108,287,CRP,survived,,,3,15.044816255569458
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,109,288,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2270, in p\n    return self.append(PhaseGate(theta), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/standard_gates/p.py"", line 74, in __init__\n    super().__init__('p', 1, [theta], label=label)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 40, in __init__\n    super().__init__(name, num_qubits, 0, params)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 88, in __init__\n    self.params = params\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/instruction.py"", line 191, in params\n    self._params.append(self.validate_parameter(single_param))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/gate.py"", line 259, in validate_parameter\n    self.name))\nqiskit.circuit.exceptions.CircuitError: ""Invalid param type <class 'numpy.complex128'> for gate p.""\n",1,1.002720594406128
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,110,288,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 288, in _compute_energy\nAttributeError: 'Pauli' object has no attribute 'real'\n",1,0.8231825828552246
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,111,288,CRP,survived,,,3,14.859357595443726
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,112,290,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 295, in _compute_energy\nKeyError: 'phase'\n",1,4.842166900634766
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,113,290,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 295, in _compute_energy\nKeyError: 'phase'\n",1,4.395366191864014
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,114,291,CRP,survived,,,3,16.158135414123535
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,115,291,CRP,survived,,,3,15.540188312530518
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,116,291,CRP,survived,,,3,15.354495286941528
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,117,291,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 293, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 291, in <listcomp>\nIndexError: tuple index out of range\n",1,4.868382215499878
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,118,292,CRP,survived,,,3,15.923861742019653
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,119,292,CRP,survived,,,3,16.11736035346985
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,120,292,CRP,survived,,,3,16.4898521900177
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,121,292,CRP,survived,,,3,16.031596660614014
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,122,293,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 293, in _compute_energy\nKeyError: 'mutpy'\n",1,5.176610708236694
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,123,293,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 293, in _compute_energy\nKeyError: ''\n",1,4.688548564910889
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,124,295,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\nAttributeError: 'NoneType' object has no attribute 'real'\n",1,5.283949851989746
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,125,295,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\nAttributeError: 'NoneType' object has no attribute 'real'\n",1,5.594526767730713
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,126,295,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 295, in _compute_energy\nKeyError: 'mutpy'\n",1,5.20001745223999
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,127,295,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 295, in _compute_energy\nKeyError: ''\n",1,5.783486366271973
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,128,295,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 295, in _compute_energy\nKeyError: 'mutpy'\n",1,6.046138763427734
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,129,295,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 295, in _compute_energy\nKeyError: ''\n",1,5.884389877319336
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,130,295,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 295, in _compute_energy\nKeyError: 'mutpy'\n",1,5.426848411560059
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,131,295,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 295, in _compute_energy\nKeyError: ''\n",1,5.587039947509766
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,132,301,CRP,timeout,,,,100.37876534461975
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,133,301,CRP,timeout,,,,100.41431760787964
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,134,302,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 302, in _run\nKeyError: 'mutpy'\n",1,4.856432199478149
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,135,302,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 302, in _run\nKeyError: ''\n",1,5.413508176803589
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,136,303,CRP,timeout,,,,100.36375832557678
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,137,303,CRP,timeout,,,,100.41872358322144
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,138,304,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 304, in _run\nKeyError: 'mutpy'\n",1,5.472027540206909
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,139,304,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 304, in _run\nKeyError: ''\n",1,6.143187522888184
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,140,305,CRP,survived,,,3,18.284456968307495
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,141,305,CRP,survived,,,3,19.592163801193237
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,142,306,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 306, in _run\nKeyError: 'mutpy'\n",1,5.340406179428101
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,143,306,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 306, in _run\nKeyError: ''\n",1,5.7699713706970215
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,144,307,CRP,survived,,,3,19.3258855342865
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,145,307,CRP,survived,,,3,17.77554726600647
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,146,308,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 308, in _run\nKeyError: 'mutpy'\n",1,4.877787113189697
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,147,308,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 308, in _run\nKeyError: ''\n",1,5.449450969696045
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,148,309,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\nAttributeError: 'NoneType' object has no attribute 'real'\n",1,5.539893627166748
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,149,309,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\nAttributeError: 'NoneType' object has no attribute 'real'\n",1,5.57982873916626
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,150,310,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 310, in _run\nKeyError: 'mutpy'\n",1,5.110743284225464
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,151,310,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 310, in _run\nKeyError: ''\n",1,4.916021108627319
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,152,311,CRP,survived,,,3,17.55251383781433
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,153,311,CRP,survived,,,3,17.818467140197754
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,154,312,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 312, in _run\nKeyError: 'mutpy'\n",1,6.446208715438843
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,155,312,CRP,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 312, in _run\nKeyError: ''\n",1,6.123517036437988
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,156,297,CRP,survived,,,3,18.09004783630371
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,157,297,CRP,survived,,,3,17.477046489715576
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,158,323,CRP,survived,,,3,15.51646614074707
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,159,323,CRP,survived,,,3,16.768978118896484
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,160,328,CRP,survived,,,3,17.92224907875061
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,161,328,CRP,survived,,,3,16.540385961532593
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,162,331,CRP,survived,,,3,16.424280881881714
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.05927276611328,0.041471242904663086,1.0120081901550293,2150.429901123047,119.42800974845886,2270.9113903045654,2295.3571088314056,163,331,CRP,survived,,,3,16.639337062835693
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.464552402496338,0.03719663619995117,0.040708303451538086,68.50929188728333,5.401152849197388,73.9883496761322,93.93747687339783,1,146,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.464552402496338,0.03719663619995117,0.040708303451538086,68.50929188728333,5.401152849197388,73.9883496761322,93.93747687339783,2,151,DDL,survived,,,3,16.687299728393555
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.464552402496338,0.03719663619995117,0.040708303451538086,68.50929188728333,5.401152849197388,73.9883496761322,93.93747687339783,3,157,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.464552402496338,0.03719663619995117,0.040708303451538086,68.50929188728333,5.401152849197388,73.9883496761322,93.93747687339783,4,162,DDL,survived,,,3,17.250242948532104
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.464552402496338,0.03719663619995117,0.040708303451538086,68.50929188728333,5.401152849197388,73.9883496761322,93.93747687339783,5,320,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.464552402496338,0.03719663619995117,0.040708303451538086,68.50929188728333,5.401152849197388,73.9883496761322,93.93747687339783,6,325,DDL,survived,,,3,16.93731951713562
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.464552402496338,0.03719663619995117,0.040708303451538086,68.50929188728333,5.401152849197388,73.9883496761322,93.93747687339783,7,330,DDL,survived,,,3,17.627090454101562
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,18.65159845352173,0.03717494010925293,NA,NA,NA,0.2411637306213379,21.76223063468933,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.31318235397339,0.03957343101501465,NA,NA,NA,0.18765735626220703,20.058918476104736,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.367730617523193,0.038132667541503906,NA,NA,NA,0.18944430351257324,20.32596230506897,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,14.969796180725098,0.03540992736816406,0.04212498664855957,268.51908445358276,4.910911798477173,273.50753116607666,290.5616192817688,1,58,IOD,timeout,,,,74.93676924705505
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,14.969796180725098,0.03540992736816406,0.04212498664855957,268.51908445358276,4.910911798477173,273.50753116607666,290.5616192817688,2,146,IOD,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,14.969796180725098,0.03540992736816406,0.04212498664855957,268.51908445358276,4.910911798477173,273.50753116607666,290.5616192817688,3,151,IOD,survived,,,3,15.01109266281128
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,14.969796180725098,0.03540992736816406,0.04212498664855957,268.51908445358276,4.910911798477173,273.50753116607666,290.5616192817688,4,157,IOD,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,14.969796180725098,0.03540992736816406,0.04212498664855957,268.51908445358276,4.910911798477173,273.50753116607666,290.5616192817688,5,162,IOD,survived,,,3,14.948610067367554
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,14.969796180725098,0.03540992736816406,0.04212498664855957,268.51908445358276,4.910911798477173,273.50753116607666,290.5616192817688,6,227,IOD,timeout,,,,74.93808078765869
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,14.969796180725098,0.03540992736816406,0.04212498664855957,268.51908445358276,4.910911798477173,273.50753116607666,290.5616192817688,7,297,IOD,timeout,,,,74.93735384941101
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,14.969796180725098,0.03540992736816406,0.04212498664855957,268.51908445358276,4.910911798477173,273.50753116607666,290.5616192817688,8,330,IOD,survived,,,3,13.73752212524414
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,15.766910076141357,0.030472993850708008,0.009015560150146484,29.866360902786255,1.5129985809326172,31.418848037719727,49.748963594436646,1,58,IOP,survived,,,3,15.592594861984253
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,15.766910076141357,0.030472993850708008,0.009015560150146484,29.866360902786255,1.5129985809326172,31.418848037719727,49.748963594436646,2,227,IOP,survived,,,3,14.270732879638672
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,16.64241647720337,0.05536341667175293,0.013863563537597656,18.651190042495728,1.689049243927002,20.40946626663208,39.76555109024048,1,186,LCR,survived,,,3,17.81496572494507
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,16.64241647720337,0.05536341667175293,0.013863563537597656,18.651190042495728,1.689049243927002,20.40946626663208,39.76555109024048,2,284,LCR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 287, in _compute_energy\nRuntimeError: Multiple identity pauli terms are present.\n",1,0.8319218158721924
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.437314987182617,0.03613781929016113,NA,NA,NA,0.19806981086730957,20.27351474761963,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.397191286087036,0.045392751693725586,NA,NA,NA,0.2193605899810791,20.61244559288025,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.147268533706665,0.037661075592041016,0.036711931228637695,59.45965886116028,4.865203380584717,64.39923524856567,84.41360592842102,1,136,ROR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 2.0\n DESIRED: 2.7320508075688767\n",1,1.3065288066864014
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.147268533706665,0.037661075592041016,0.036711931228637695,59.45965886116028,4.865203380584717,64.39923524856567,84.41360592842102,2,139,ROR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 2.0\n DESIRED: 2.7320508075688767\n",1,1.4528038501739502
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.147268533706665,0.037661075592041016,0.036711931228637695,59.45965886116028,4.865203380584717,64.39923524856567,84.41360592842102,3,257,ROR,killed,test_iqpe_00002___QUBIT_OP_ZZ____statevector_simulator___1__1__False_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 0.0\n DESIRED: -1.0\n",2,5.825147867202759
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.147268533706665,0.037661075592041016,0.036711931228637695,59.45965886116028,4.865203380584717,64.39923524856567,84.41360592842102,4,271,ROR,survived,,,3,15.915907144546509
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.147268533706665,0.037661075592041016,0.036711931228637695,59.45965886116028,4.865203380584717,64.39923524856567,84.41360592842102,5,271,ROR,survived,,,3,16.602081298828125
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.147268533706665,0.037661075592041016,0.036711931228637695,59.45965886116028,4.865203380584717,64.39923524856567,84.41360592842102,6,286,ROR,survived,,,3,17.409661293029785
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.147268533706665,0.037661075592041016,0.036711931228637695,59.45965886116028,4.865203380584717,64.39923524856567,84.41360592842102,7,286,ROR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 287, in _compute_energy\nRuntimeError: Multiple identity pauli terms are present.\n",1,0.9363949298858643
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.019774913787842,0.03796577453613281,0.009054183959960938,32.76570439338684,1.5631232261657715,34.375847578048706,53.87580895423889,1,58,SCD,survived,,,3,16.90670871734619
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,17.019774913787842,0.03796577453613281,0.009054183959960938,32.76570439338684,1.5631232261657715,34.375847578048706,53.87580895423889,2,227,SCD,survived,,,3,15.856038808822632
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,21.449703216552734,0.04804539680480957,0.03471541404724121,92.29161810874939,4.774057865142822,97.14843678474426,121.87951326370239,1,146,SCI,survived,,,3,18.86110281944275
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,21.449703216552734,0.04804539680480957,0.03471541404724121,92.29161810874939,4.774057865142822,97.14843678474426,121.87951326370239,2,151,SCI,survived,,,3,17.458892107009888
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,21.449703216552734,0.04804539680480957,0.03471541404724121,92.29161810874939,4.774057865142822,97.14843678474426,121.87951326370239,3,157,SCI,survived,,,3,19.411510944366455
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,21.449703216552734,0.04804539680480957,0.03471541404724121,92.29161810874939,4.774057865142822,97.14843678474426,121.87951326370239,4,162,SCI,survived,,,3,17.1930193901062
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,21.449703216552734,0.04804539680480957,0.03471541404724121,92.29161810874939,4.774057865142822,97.14843678474426,121.87951326370239,5,297,SCI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 75, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,0.838287353515625
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,21.449703216552734,0.04804539680480957,0.03471541404724121,92.29161810874939,4.774057865142822,97.14843678474426,121.87951326370239,6,330,SCI,survived,,,3,18.517956733703613
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,20.025957822799683,0.046736717224121094,NA,NA,NA,0.22103118896484375,23.11792755126953,NA,NA,SIR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,23.981923818588257,0.048501014709472656,0.031502485275268555,29.04897952079773,13.965482234954834,43.094465255737305,70.38738560676575,1,202,QGD,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 0.75\n DESIRED: 2.7320508075688767\n",1,7.182760238647461
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,23.981923818588257,0.048501014709472656,0.031502485275268555,29.04897952079773,13.965482234954834,43.094465255737305,70.38738560676575,2,215,QGD,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -2.25\n DESIRED: 2.7320508075688767\n",1,7.178166389465332
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,23.981923818588257,0.048501014709472656,0.031502485275268555,29.04897952079773,13.965482234954834,43.094465255737305,70.38738560676575,3,217,QGD,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -0.25\n DESIRED: 2.7320508075688767\n",1,7.653939962387085
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,23.981923818588257,0.048501014709472656,0.031502485275268555,29.04897952079773,13.965482234954834,43.094465255737305,70.38738560676575,4,219,QGD,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 0.75\n DESIRED: 2.7320508075688767\n",1,7.027357578277588
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,1,202,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 2.5\n DESIRED: 2.7320508075688767\n",1,7.646253347396851
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,2,202,QGI,survived,,,3,24.31064748764038
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,3,202,QGI,survived,,,3,23.444713592529297
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,4,202,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 0.0\n DESIRED: 2.7320508075688767\n",1,6.698400020599365
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,5,202,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.0\n DESIRED: 2.7320508075688767\n",1,8.621214866638184
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,6,202,QGI,survived,,,3,22.639896392822266
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,7,202,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.25\n DESIRED: 2.7320508075688767\n",1,6.819031715393066
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,8,202,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 0.0\n DESIRED: 2.7320508075688767\n",1,6.268267631530762
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,9,202,QGI,survived,,,3,24.590887308120728
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,10,202,QGI,survived,,,3,23.685765027999878
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,11,202,QGI,survived,,,3,21.92052721977234
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,12,215,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2409, in csx\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,1.2578845024108887
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,13,215,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2250, in ch\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,1.9232118129730225
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,14,215,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2610, in cz\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,1.7964451313018799
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,15,215,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2516, in dcx\n    return self.append(DCXGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,1.331587553024292
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,16,215,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2598, in cy\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,1.5846176147460938
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,17,215,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -0.25\n DESIRED: 2.7320508075688767\n",1,7.10139536857605
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,18,215,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -2.25\n DESIRED: 2.7320508075688767\n",1,7.617437124252319
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,19,215,QGI,timeout,,,,111.17204523086548
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,20,215,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -0.25\n DESIRED: 2.7320508075688767\n",1,6.570400953292847
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,21,215,QGI,killed,test_iqpe_00002___QUBIT_OP_ZZ____statevector_simulator___1__1__False_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 0.0\n DESIRED: -1.0\n",2,6.74659538269043
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,22,215,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2378, in swap\n    return self.append(SwapGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,1.1101582050323486
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,23,215,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2383, in iswap\n    return self.append(iSwapGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,2.021528482437134
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,24,215,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2507, in cx\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,1.9946403503417969
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,25,215,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -0.25\n DESIRED: 2.7320508075688767\n",1,6.548590183258057
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,26,217,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2409, in csx\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,1.5383381843566895
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,27,217,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2250, in ch\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,1.6423861980438232
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,28,217,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2610, in cz\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,1.214184045791626
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,29,217,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2516, in dcx\n    return self.append(DCXGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,0.9784419536590576
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,30,217,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2598, in cy\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,1.5016796588897705
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,31,217,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 2.25\n DESIRED: 2.7320508075688767\n",1,6.7746734619140625
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,32,217,QGI,survived,,,3,21.638604402542114
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,33,217,QGI,timeout,,,,111.21453309059143
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,34,217,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 2.25\n DESIRED: 2.7320508075688767\n",1,6.566653490066528
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,35,217,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 1.25\n DESIRED: 2.7320508075688767\n",1,6.006664276123047
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,36,217,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2378, in swap\n    return self.append(SwapGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,1.1468157768249512
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,37,217,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2383, in iswap\n    return self.append(iSwapGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,1.9391167163848877
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,38,217,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2507, in cx\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,1.6000101566314697
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,39,217,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 2.25\n DESIRED: 2.7320508075688767\n",1,6.7371461391448975
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,40,219,QGI,survived,,,3,21.40743660926819
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,41,219,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.25\n DESIRED: 2.7320508075688767\n",1,5.634982109069824
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,42,219,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 0.0\n DESIRED: 2.7320508075688767\n",1,6.315152406692505
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,43,219,QGI,survived,,,3,20.10603904724121
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,44,219,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.0\n DESIRED: 2.7320508075688767\n",1,5.905750036239624
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,45,219,QGI,survived,,,3,19.90777015686035
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,46,219,QGI,survived,,,3,19.91596484184265
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,47,219,QGI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 0.0\n DESIRED: 2.7320508075688767\n",1,6.31416916847229
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,48,219,QGI,survived,,,3,19.941268920898438
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,49,219,QGI,survived,,,3,17.80097270011902
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,22.230005741119385,0.04367876052856445,0.4088246822357178,667.0168633460999,315.1303288936615,982.5996956825256,1008.5138149261475,50,219,QGI,survived,,,3,17.7337703704834
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,1,202,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,4.97536301612854
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,2,202,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,5.431854724884033
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,3,202,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,5.080867052078247
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,4,202,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 2.5\n DESIRED: 2.7320508075688767\n",1,5.032933950424194
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,5,202,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,5.042006969451904
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,6,202,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,5.5961315631866455
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,7,202,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,5.293160438537598
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,8,202,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,5.267368793487549
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,9,202,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,5.314651012420654
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,10,202,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,5.29703950881958
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,11,215,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2383, in iswap\n    return self.append(iSwapGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,0.9463107585906982
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,12,215,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2409, in csx\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,1.0713410377502441
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,13,215,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2378, in swap\n    return self.append(SwapGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,1.0870747566223145
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,14,215,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2507, in cx\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,1.2613201141357422
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,15,215,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2516, in dcx\n    return self.append(DCXGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,1.0128655433654785
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,16,215,QGR,survived,,,3,17.527578115463257
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,17,215,QGR,survived,,,3,16.876749277114868
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,18,215,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2610, in cz\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,1.069023609161377
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,19,215,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -2.25\n DESIRED: 2.7320508075688767\n",1,5.132973909378052
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,20,215,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2250, in ch\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,1.398209571838379
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,21,215,QGR,killed,test_iqpe_00002___QUBIT_OP_ZZ____statevector_simulator___1__1__False_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 0.0\n DESIRED: -1.0\n",2,5.557952880859375
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,22,215,QGR,timeout,,,,95.29879212379456
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,23,215,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2598, in cy\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,0.8833367824554443
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,24,217,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2383, in iswap\n    return self.append(iSwapGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,1.124955415725708
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,25,217,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2409, in csx\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,1.0259385108947754
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,26,217,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2378, in swap\n    return self.append(SwapGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,1.2893846035003662
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,27,217,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2507, in cx\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,1.3780193328857422
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,28,217,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2516, in dcx\n    return self.append(DCXGate(), [qubit1, qubit2], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,1.0379385948181152
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,29,217,QGR,survived,,,3,18.7212336063385
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,30,217,QGR,survived,,,3,17.517608404159546
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,31,217,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2610, in cz\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,1.1473324298858643
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,32,217,QGR,survived,,,3,17.622448444366455
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,33,217,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2250, in ch\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,0.7604315280914307
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,34,217,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -0.25\n DESIRED: 2.7320508075688767\n",1,5.333995819091797
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,35,217,QGR,timeout,,,,95.31634283065796
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,36,217,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2598, in cy\n    [control_qubit, target_qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,1.1102735996246338
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,37,219,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,6.082601547241211
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,38,219,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,5.5324180126190186
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,39,219,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,6.361234664916992
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,40,219,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 2.5\n DESIRED: 2.7320508075688767\n",1,6.400676488876343
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,41,219,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,5.872226238250732
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,42,219,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,6.3982462882995605
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,43,219,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,6.264510869979858
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,44,219,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,5.864245891571045
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,45,219,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,5.620176792144775
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.037041902542114,0.04502582550048828,0.2705061435699463,424.40275835990906,237.5463900566101,662.2646803855896,684.1278491020203,46,219,QGR,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: 3.5\n DESIRED: 2.7320508075688767\n",1,5.0820629596710205
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.869140148162842,0.039190053939819336,0.008138895034790039,5.613586902618408,1.1957464218139648,6.856662273406982,29.330681085586548,1,224,QMD,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 117, in test_iqpe\n    np.testing.assert_approx_equal(result.eigenvalue.real, ref_eigenval.real, significant=2)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 696, in assert_approx_equal\n    raise AssertionError(msg)\nAssertionError: \nItems are not equal to 2 significant digits:\n ACTUAL: -4.0\n DESIRED: 2.7320508075688767\n",1,5.611143350601196
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.963104724884033,0.04296612739562988,0.03486943244934082,26.876726627349854,22.088268995285034,49.04283118247986,71.91315245628357,1,202,QMI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 266, in _estimate_phase_iteratively\nRuntimeError: Unexpected measurement {'0 11': 45, '1 11': 55}.\n",1,20.844054460525513
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.963104724884033,0.04296612739562988,0.03486943244934082,26.876726627349854,22.088268995285034,49.04283118247986,71.91315245628357,2,215,QMI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not numpy.float64\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 215, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2500, in x\n    return self.append(XGate(label=label), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling 62.83185307179586 (<class 'numpy.float64'>)""\n",1,1.0495057106018066
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.963104724884033,0.04296612739562988,0.03486943244934082,26.876726627349854,22.088268995285034,49.04283118247986,71.91315245628357,3,217,QMI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 924, in _bit_argument_conversion\n    ret = [in_array[bit_representation]]\nTypeError: list indices must be integers or slices, not float\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 259, in _estimate_phase_iteratively\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 217, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 1, in my_func\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2500, in x\n    return self.append(XGate(label=label), [qubit], [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 946, in _bit_argument_conversion\n    ) from ex\nqiskit.circuit.exceptions.CircuitError: ""Type error handling -0.0 (<class 'float'>)""\n",1,1.5815165042877197
qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe,test.aqua.test_iqpe,3,19.963104724884033,0.04296612739562988,0.03486943244934082,26.876726627349854,22.088268995285034,49.04283118247986,71.91315245628357,4,219,QMI,killed,test_iqpe_00001___QUBIT_OP_SIMPLE____qasm_simulator___1__5__True_ (test.aqua.test_iqpe.TestIQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_iqpe.py"", line 102, in test_iqpe\n    result = iqpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 298, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 290, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.iqpe"", line 266, in _estimate_phase_iteratively\nRuntimeError: Unexpected measurement {'0 00': 42, '1 11': 58}.\n",1,3.391914129257202
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2906074523925781,0.018625497817993164,NA,NA,NA,0.09060144424438477,3.6057515144348145,NA,NA,AOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.3067018985748291,0.02660393714904785,NA,NA,NA,0.20116662979125977,5.065685272216797,NA,NA,AOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.23558759689331055,0.015703916549682617,NA,NA,NA,0.10050439834594727,4.171464443206787,NA,NA,ASR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2530686855316162,0.03890872001647949,NA,NA,NA,0.12580633163452148,3.5817525386810303,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.3280611038208008,0.015184640884399414,NA,NA,NA,0.07426977157592773,3.935831308364868,NA,NA,COD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2824697494506836,0.015571832656860352,0.009140729904174805,15.083547830581665,0.5722713470458984,15.680531740188599,19.280017852783203,1,111,COI,timeout,,,,5.038814306259155
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2824697494506836,0.015571832656860352,0.009140729904174805,15.083547830581665,0.5722713470458984,15.680531740188599,19.280017852783203,2,114,COI,timeout,,,,5.02262806892395
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2824697494506836,0.015571832656860352,0.009140729904174805,15.083547830581665,0.5722713470458984,15.680531740188599,19.280017852783203,3,115,COI,timeout,,,,5.0173890590667725
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2760801315307617,0.015737295150756836,0.035941123962402344,11.66347074508667,1.8282356262207031,13.543384790420532,17.55144166946411,1,53,CRP,survived,,,5,0.5047492980957031
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2760801315307617,0.015737295150756836,0.035941123962402344,11.66347074508667,1.8282356262207031,13.543384790420532,17.55144166946411,2,111,CRP,timeout,,,,5.043610572814941
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2760801315307617,0.015737295150756836,0.035941123962402344,11.66347074508667,1.8282356262207031,13.543384790420532,17.55144166946411,3,112,CRP,killed,test_cme (test.aqua.test_numpy_minimum_eigen_solver.TestNumPyMinimumEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_minimum_eigen_solver.py"", line 54, in test_cme\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 112, in _run\nIndexError: index 1 is out of bounds for axis 0 with size 1\n",1,0.0771944522857666
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2760801315307617,0.015737295150756836,0.035941123962402344,11.66347074508667,1.8282356262207031,13.543384790420532,17.55144166946411,4,113,CRP,killed,test_cme (test.aqua.test_numpy_minimum_eigen_solver.TestNumPyMinimumEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_minimum_eigen_solver.py"", line 54, in test_cme\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 113, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/list_ops/list_op.py"", line 523, in __getitem__\n    return self.oplist[offset]\nIndexError: list index out of range\n",1,0.08092045783996582
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2760801315307617,0.015737295150756836,0.035941123962402344,11.66347074508667,1.8282356262207031,13.543384790420532,17.55144166946411,5,115,CRP,timeout,,,,5.020544052124023
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2760801315307617,0.015737295150756836,0.035941123962402344,11.66347074508667,1.8282356262207031,13.543384790420532,17.55144166946411,6,116,CRP,killed,test_cme (test.aqua.test_numpy_minimum_eigen_solver.TestNumPyMinimumEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_minimum_eigen_solver.py"", line 54, in test_cme\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 116, in _run\nIndexError: list index out of range\n",1,0.06182074546813965
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2760801315307617,0.015737295150756836,0.035941123962402344,11.66347074508667,1.8282356262207031,13.543384790420532,17.55144166946411,7,122,CRP,survived,,,5,0.3443770408630371
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2760801315307617,0.015737295150756836,0.035941123962402344,11.66347074508667,1.8282356262207031,13.543384790420532,17.55144166946411,8,122,CRP,survived,,,5,0.23383498191833496
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2760801315307617,0.015737295150756836,0.035941123962402344,11.66347074508667,1.8282356262207031,13.543384790420532,17.55144166946411,9,123,CRP,survived,,,5,0.27765893936157227
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.19805669784545898,0.012543439865112305,0.0162508487701416,5.759415149688721,1.5552639961242676,7.343473434448242,10.547394514083862,1,58,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.19805669784545898,0.012543439865112305,0.0162508487701416,5.759415149688721,1.5552639961242676,7.343473434448242,10.547394514083862,2,62,DDL,killed,test_cme_reuse (test.aqua.test_numpy_minimum_eigen_solver.TestNumPyMinimumEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_minimum_eigen_solver.py"", line 70, in test_cme_reuse\n    result = algo.compute_minimum_eigenvalue(self.qubit_op)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 99, in compute_minimum_eigenvalue\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 107, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/eigen_solvers/numpy_eigen_solver.py"", line 246, in _run\n    raise AquaError(""Operator was never provided"")\nqiskit.aqua.aqua_error.AquaError: 'Operator was never provided'\n",5,0.2106022834777832
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.19805669784545898,0.012543439865112305,0.0162508487701416,5.759415149688721,1.5552639961242676,7.343473434448242,10.547394514083862,3,66,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.19805669784545898,0.012543439865112305,0.0162508487701416,5.759415149688721,1.5552639961242676,7.343473434448242,10.547394514083862,4,70,DDL,timeout,,,,5.022937297821045
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.19805669784545898,0.012543439865112305,0.0162508487701416,5.759415149688721,1.5552639961242676,7.343473434448242,10.547394514083862,5,76,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.19805669784545898,0.012543439865112305,0.0162508487701416,5.759415149688721,1.5552639961242676,7.343473434448242,10.547394514083862,6,82,DDL,survived,,,5,0.2717304229736328
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.19805669784545898,0.012543439865112305,0.0162508487701416,5.759415149688721,1.5552639961242676,7.343473434448242,10.547394514083862,7,88,DDL,survived,,,5,0.24851512908935547
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.25086545944213867,0.013022899627685547,NA,NA,NA,0.06386590003967285,3.4301178455352783,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.22998833656311035,0.01157236099243164,NA,NA,NA,0.08812332153320312,2.892346143722534,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.20609474182128906,0.013396978378295898,NA,NA,NA,0.06888461112976074,2.973210334777832,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.1646115779876709,0.01430201530456543,0.01468038558959961,15.593651294708252,1.1943342685699463,16.816967964172363,19.129144430160522,1,34,IOD,timeout,,,,5.020463705062866
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.1646115779876709,0.01430201530456543,0.01468038558959961,15.593651294708252,1.1943342685699463,16.816967964172363,19.129144430160522,2,58,IOD,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.1646115779876709,0.01430201530456543,0.01468038558959961,15.593651294708252,1.1943342685699463,16.816967964172363,19.129144430160522,3,62,IOD,killed,test_cme_reuse (test.aqua.test_numpy_minimum_eigen_solver.TestNumPyMinimumEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_minimum_eigen_solver.py"", line 70, in test_cme_reuse\n    result = algo.compute_minimum_eigenvalue(self.qubit_op)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 98, in compute_minimum_eigenvalue\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/minimum_eigen_solvers/minimum_eigen_solver.py"", line 61, in compute_minimum_eigenvalue\n    self.operator = operator  # type: ignore\nAttributeError: can't set attribute\n",5,0.16826272010803223
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.1646115779876709,0.01430201530456543,0.01468038558959961,15.593651294708252,1.1943342685699463,16.816967964172363,19.129144430160522,4,66,IOD,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.1646115779876709,0.01430201530456543,0.01468038558959961,15.593651294708252,1.1943342685699463,16.816967964172363,19.129144430160522,5,70,IOD,killed,test_cme_reuse (test.aqua.test_numpy_minimum_eigen_solver.TestNumPyMinimumEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_minimum_eigen_solver.py"", line 87, in test_cme_reuse\n    result = algo.compute_minimum_eigenvalue(aux_operators=self.aux_ops)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 98, in compute_minimum_eigenvalue\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/minimum_eigen_solvers/minimum_eigen_solver.py"", line 63, in compute_minimum_eigenvalue\n    self.aux_operators = aux_operators  # type: ignore\nAttributeError: can't set attribute\n",5,0.16266989707946777
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.1646115779876709,0.01430201530456543,0.01468038558959961,15.593651294708252,1.1943342685699463,16.816967964172363,19.129144430160522,6,88,IOD,survived,,,5,0.19881367683410645
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.1646115779876709,0.01430201530456543,0.01468038558959961,15.593651294708252,1.1943342685699463,16.816967964172363,19.129144430160522,7,92,IOD,timeout,,,,5.01742959022522
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.1646115779876709,0.01430201530456543,0.01468038558959961,15.593651294708252,1.1943342685699463,16.816967964172363,19.129144430160522,8,101,IOD,timeout,,,,5.016280651092529
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2021932601928711,0.012050628662109375,0.003777027130126953,0.4060091972351074,0.34622716903686523,0.768064022064209,3.172362804412842,1,34,IOP,survived,,,5,0.2418687343597412
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2021932601928711,0.012050628662109375,0.003777027130126953,0.4060091972351074,0.34622716903686523,0.768064022064209,3.172362804412842,2,92,IOP,killed,test_cme_reuse (test.aqua.test_numpy_minimum_eigen_solver.TestNumPyMinimumEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_minimum_eigen_solver.py"", line 70, in test_cme_reuse\n    result = algo.compute_minimum_eigenvalue(self.qubit_op)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 98, in compute_minimum_eigenvalue\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 107, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/eigen_solvers/numpy_eigen_solver.py"", line 246, in _run\n    raise AquaError(""Operator was never provided"")\nqiskit.aqua.aqua_error.AquaError: 'Operator was never provided'\n",5,0.16195368766784668
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.19089627265930176,0.012146711349487305,NA,NA,NA,0.06067347526550293,3.433724880218506,NA,NA,LCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.1874253749847412,0.012362241744995117,NA,NA,NA,0.06543755531311035,3.2205088138580322,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2411794662475586,0.016316890716552734,NA,NA,NA,0.07713890075683594,3.0455031394958496,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.21053624153137207,0.012417316436767578,0.015233755111694336,10.449731588363647,0.727264404296875,11.204647064208984,14.51590347290039,1,111,ROR,timeout,,,,5.053128004074097
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.21053624153137207,0.012417316436767578,0.015233755111694336,10.449731588363647,0.727264404296875,11.204647064208984,14.51590347290039,2,111,ROR,killed,test_cme_filter_empty (test.aqua.test_numpy_minimum_eigen_solver.TestNumPyMinimumEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_minimum_eigen_solver.py"", line 138, in test_cme_filter_empty\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 112, in _run\nIndexError: index 0 is out of bounds for axis 0 with size 0\n",4,0.12424826622009277
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.21053624153137207,0.012417316436767578,0.015233755111694336,10.449731588363647,0.727264404296875,11.204647064208984,14.51590347290039,3,115,ROR,timeout,,,,5.020577669143677
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.21053624153137207,0.012417316436767578,0.015233755111694336,10.449731588363647,0.727264404296875,11.204647064208984,14.51590347290039,4,115,ROR,survived,,,5,0.24562549591064453
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.1876692771911621,0.013077735900878906,0.0046558380126953125,0.3959689140319824,0.43582749366760254,0.8495299816131592,3.689988136291504,1,34,SCD,survived,,,5,0.2677469253540039
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.1876692771911621,0.013077735900878906,0.0046558380126953125,0.3959689140319824,0.43582749366760254,0.8495299816131592,3.689988136291504,2,92,SCD,killed,test_cme_reuse (test.aqua.test_numpy_minimum_eigen_solver.TestNumPyMinimumEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_minimum_eigen_solver.py"", line 70, in test_cme_reuse\n    result = algo.compute_minimum_eigenvalue(self.qubit_op)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 99, in compute_minimum_eigenvalue\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 107, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/eigen_solvers/numpy_eigen_solver.py"", line 246, in _run\n    raise AquaError(""Operator was never provided"")\nqiskit.aqua.aqua_error.AquaError: 'Operator was never provided'\n",5,0.12563180923461914
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2776789665222168,0.013640642166137695,0.016886472702026367,1.3967814445495605,1.478362798690796,2.9056713581085205,6.198679685592651,1,58,SCI,killed,test_cme_reuse (test.aqua.test_numpy_minimum_eigen_solver.TestNumPyMinimumEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_minimum_eigen_solver.py"", line 72, in test_cme_reuse\n    self.assertEqual(self.qubit_op.to_opflow(), algo.operator)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 60, in operator\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/minimum_eigen_solvers/minimum_eigen_solver.py"", line 83, in operator\n    raise NotImplementedError\nNotImplementedError\n",5,0.1715681552886963
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2776789665222168,0.013640642166137695,0.016886472702026367,1.3967814445495605,1.478362798690796,2.9056713581085205,6.198679685592651,2,62,SCI,killed,test_cme_reuse (test.aqua.test_numpy_minimum_eigen_solver.TestNumPyMinimumEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_minimum_eigen_solver.py"", line 70, in test_cme_reuse\n    result = algo.compute_minimum_eigenvalue(self.qubit_op)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 98, in compute_minimum_eigenvalue\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/minimum_eigen_solvers/minimum_eigen_solver.py"", line 61, in compute_minimum_eigenvalue\n    self.operator = operator  # type: ignore\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 64, in operator\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/minimum_eigen_solvers/minimum_eigen_solver.py"", line 83, in operator\n    raise NotImplementedError\nNotImplementedError\n",5,0.18816733360290527
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2776789665222168,0.013640642166137695,0.016886472702026367,1.3967814445495605,1.478362798690796,2.9056713581085205,6.198679685592651,3,66,SCI,survived,,,5,0.40648317337036133
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2776789665222168,0.013640642166137695,0.016886472702026367,1.3967814445495605,1.478362798690796,2.9056713581085205,6.198679685592651,4,70,SCI,killed,test_cme_reuse (test.aqua.test_numpy_minimum_eigen_solver.TestNumPyMinimumEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_minimum_eigen_solver.py"", line 87, in test_cme_reuse\n    result = algo.compute_minimum_eigenvalue(aux_operators=self.aux_ops)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 98, in compute_minimum_eigenvalue\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/minimum_eigen_solvers/minimum_eigen_solver.py"", line 63, in compute_minimum_eigenvalue\n    self.aux_operators = aux_operators  # type: ignore\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 74, in aux_operators\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/minimum_eigen_solvers/minimum_eigen_solver.py"", line 95, in aux_operators\n    raise NotImplementedError\nNotImplementedError\n",5,0.22175025939941406
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2776789665222168,0.013640642166137695,0.016886472702026367,1.3967814445495605,1.478362798690796,2.9056713581085205,6.198679685592651,5,88,SCI,survived,,,5,0.35901355743408203
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2776789665222168,0.013640642166137695,0.016886472702026367,1.3967814445495605,1.478362798690796,2.9056713581085205,6.198679685592651,6,101,SCI,killed,test_cme (test.aqua.test_numpy_minimum_eigen_solver.TestNumPyMinimumEigensolver),"Traceback (most recent call last):\n  File ""./test/aqua/test_numpy_minimum_eigen_solver.py"", line 54, in test_cme\n    result = algo.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 43, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver"", line 106, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/classical_algorithm.py"", line 47, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,0.0410768985748291
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.2083907127380371,0.013281583786010742,NA,NA,NA,0.07059931755065918,3.1632277965545654,NA,NA,SIR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.49309611320495605,0.017649173736572266,NA,NA,NA,2.1757113933563232,6.067561626434326,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.4338841438293457,0.015129327774047852,NA,NA,NA,12.624156713485718,15.885347127914429,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.19546747207641602,0.013441801071166992,NA,NA,NA,9.893534183502197,12.438231468200684,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.21227693557739258,0.013316154479980469,NA,NA,NA,0.061920166015625,3.8214359283447266,NA,NA,QMD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.numpy_minimum_eigen_solver,test.aqua.test_numpy_minimum_eigen_solver,5,0.24820423126220703,0.023241043090820312,NA,NA,NA,3.327615261077881,8.234799861907959,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,71.23519515991211,0.01278233528137207,NA,NA,NA,0.15705513954162598,78.05452132225037,NA,NA,AOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,77.46708655357361,0.01844644546508789,NA,NA,NA,0.08475303649902344,83.94479465484619,NA,NA,AOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,68.30169248580933,0.016297340393066406,NA,NA,NA,0.08016014099121094,74.26862907409668,NA,NA,ASR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,56.80765724182129,0.020142555236816406,NA,NA,NA,0.07939505577087402,62.330201148986816,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,53.872785568237305,0.010863304138183594,NA,NA,NA,0.05821967124938965,59.66725015640259,NA,NA,COD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,58.03001093864441,0.013835906982421875,NA,NA,NA,0.06600427627563477,63.02158212661743,NA,NA,COI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,54.252445697784424,0.011773824691772461,0.01850128173828125,176.78191900253296,0.9155890941619873,177.727783203125,237.70330810546875,1,71,CRP,survived,,,5,21.313881874084473
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,54.252445697784424,0.011773824691772461,0.01850128173828125,176.78191900253296,0.9155890941619873,177.727783203125,237.70330810546875,2,79,CRP,survived,,,18,56.282886266708374
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,54.252445697784424,0.011773824691772461,0.01850128173828125,176.78191900253296,0.9155890941619873,177.727783203125,237.70330810546875,3,130,CRP,survived,,,18,49.41234087944031
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,54.252445697784424,0.011773824691772461,0.01850128173828125,176.78191900253296,0.9155890941619873,177.727783203125,237.70330810546875,4,130,CRP,survived,,,18,49.686540365219116
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,54.252445697784424,0.011773824691772461,0.01850128173828125,176.78191900253296,0.9155890941619873,177.727783203125,237.70330810546875,5,130,CRP,killed,test_change_operator_size (test.optimization.test_qaoa.TestQAOA),"Traceback (most recent call last):\n  File ""./test/optimization/test_qaoa.py"", line 182, in test_change_operator_size\n    qaoa = QAOA(qubit_op.to_opflow(), COBYLA(), 1)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa"", line 130, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 43, in validate_min\n    raise ValueError('{} must have value >= {}, was {}'.format(name, minimum, value))\nValueError: p must have value >= 2, was 1\n",1,0.07338118553161621
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,48.449512004852295,0.01093435287475586,0.013263225555419922,119.98931527137756,0.7723913192749023,120.78590416908264,174.1492087841034,1,150,DDL,survived,,,0,26.343610286712646
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,48.449512004852295,0.01093435287475586,0.013263225555419922,119.98931527137756,0.7723913192749023,120.78590416908264,174.1492087841034,2,162,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,48.449512004852295,0.01093435287475586,0.013263225555419922,119.98931527137756,0.7723913192749023,120.78590416908264,174.1492087841034,3,170,DDL,survived,,,18,46.6875958442688
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,48.449512004852295,0.01093435287475586,0.013263225555419922,119.98931527137756,0.7723913192749023,120.78590416908264,174.1492087841034,4,178,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,48.449512004852295,0.01093435287475586,0.013263225555419922,119.98931527137756,0.7723913192749023,120.78590416908264,174.1492087841034,5,186,DDL,survived,,,18,46.95213556289673
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,63.34788680076599,0.014290332794189453,NA,NA,NA,0.07579779624938965,69.4033534526825,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,45.132524728775024,0.012018918991088867,NA,NA,NA,0.05433797836303711,49.904661417007446,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,52.06817865371704,0.011358022689819336,NA,NA,NA,0.05677509307861328,56.48172926902771,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,39.7262749671936,0.013546228408813477,0.004227876663208008,88.50455212593079,0.3061559200286865,88.8284821510315,132.06709790229797,1,68,IOD,killed,test_change_operator_size (test.optimization.test_qaoa.TestQAOA),"Traceback (most recent call last):\n  File ""./test/optimization/test_qaoa.py"", line 182, in test_change_operator_size\n    qaoa = QAOA(qubit_op.to_opflow(), COBYLA(), 1)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/minimum_eigen_solvers/vqe.py"", line 168, in __init__\n    quantum_instance=quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 86, in __init__\n    self.var_form = var_form\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 109, in var_form\n    raise ValueError('Unsupported type ""{}"" of var_form'.format(type(var_form)))\nValueError: Unsupported type ""<class 'qiskit.aqua.components.optimizers.cobyla.COBYLA'>"" of var_form\n",1,0.049834489822387695
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,39.7262749671936,0.013546228408813477,0.004227876663208008,88.50455212593079,0.3061559200286865,88.8284821510315,132.06709790229797,2,150,IOD,survived,,,5,88.45110583305359
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,42.79234051704407,0.010762929916381836,0.0030786991119384766,0.04801654815673828,0.22104716300964355,0.28290534019470215,47.241859436035156,1,68,IOP,killed,test_change_operator_size (test.optimization.test_qaoa.TestQAOA),"Traceback (most recent call last):\n  File ""./test/optimization/test_qaoa.py"", line 182, in test_change_operator_size\n    qaoa = QAOA(qubit_op.to_opflow(), COBYLA(), 1)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa"", line 129, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/minimum_eigen_solvers/vqe.py"", line 175, in __init__\n    self.operator = operator\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa"", line 158, in operator\nAttributeError: 'QAOA' object has no attribute '_p'\n",1,0.046520233154296875
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,44.89139223098755,0.011909961700439453,NA,NA,NA,0.055194854736328125,49.44009518623352,NA,NA,LCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,49.073068380355835,0.01186680793762207,NA,NA,NA,0.05569267272949219,53.77446436882019,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,47.794551610946655,0.012578964233398438,NA,NA,NA,0.055841922760009766,52.05408811569214,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,50.96031832695007,0.01523900032043457,NA,NA,NA,0.06849431991577148,56.07814383506775,NA,NA,ROR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,46.998193979263306,0.01597428321838379,0.0043070316314697266,0.05382657051086426,0.2587738037109375,0.3328816890716553,51.36538624763489,1,68,SCD,killed,test_change_operator_size (test.optimization.test_qaoa.TestQAOA),"Traceback (most recent call last):\n  File ""./test/optimization/test_qaoa.py"", line 186, in test_change_operator_size\n    result = qaoa.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 69, in run\n    self.quantum_instance = quantum_instance\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/minimum_eigen_solvers/vqe.py"", line 220, in quantum_instance\n    if not self._user_valid_expectation:\nAttributeError: 'QAOA' object has no attribute '_user_valid_expectation'\n",1,0.051113128662109375
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,47.74320983886719,0.016311168670654297,0.0040073394775390625,238.8456690311432,0.24642300605773926,239.11241054534912,291.6212878227234,1,150,SCI,timeout,,,,238.8437168598175
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,48.94547486305237,0.012716054916381836,NA,NA,NA,0.05955195426940918,53.58951377868652,NA,NA,SIR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,70.29967331886292,0.012340068817138672,NA,NA,NA,2.841301202774048,78.51182293891907,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,53.14743185043335,0.011886119842529297,NA,NA,NA,7.917840242385864,65.81745266914368,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,40.638572454452515,0.01031184196472168,NA,NA,NA,6.967323064804077,51.67062473297119,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,51.20873284339905,0.013067007064819336,NA,NA,NA,0.06466865539550781,55.568466663360596,NA,NA,QMD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qaoa.qaoa,test.optimization.test_qaoa,18,53.92100119590759,0.01199960708618164,NA,NA,NA,1.932337999343872,62.205806493759155,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,27.05183172225952,0.04535651206970215,0.042571306228637695,86.27682876586914,2.649318218231201,89.01407480239868,119.35322523117065,1,205,AOD,killed,test_qpe_3___QUBIT_OP_H2_WITH_2_QUBIT_REDUCTION____statevector_simulator___1__6_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 1.0202296997498435 != -1.8572750302023806 within 0.02 delta (2.877504729952224 difference)\n",3,27.85320281982422
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,27.05183172225952,0.04535651206970215,0.042571306228637695,86.27682876586914,2.649318218231201,89.01407480239868,119.35322523117065,2,211,AOD,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: -4.0 != 2.7320508075688767 within 0.02 delta (6.732050807568877 difference)\n",1,8.024297952651978
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,27.05183172225952,0.04535651206970215,0.042571306228637695,86.27682876586914,2.649318218231201,89.01407480239868,119.35322523117065,3,211,AOD,survived,,,3,25.06536340713501
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,27.05183172225952,0.04535651206970215,0.042571306228637695,86.27682876586914,2.649318218231201,89.01407480239868,119.35322523117065,4,211,AOD,survived,,,3,25.325978755950928
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,1,98,AOR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: -4.0 != 2.7320508075688767 within 0.02 delta (6.732050807568877 difference)\n",1,8.54907512664795
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,2,98,AOR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 428.0 != 2.7320508075688767 within 0.02 delta (425.2679491924311 difference)\n",1,7.65601372718811
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,3,98,AOR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 3.8 != 2.7320508075688767 within 0.02 delta (1.067949192431123 difference)\n",1,9.101312160491943
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,4,98,AOR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 2.0 != 2.7320508075688767 within 0.02 delta (0.7320508075688767 difference)\n",1,7.201459169387817
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,5,117,AOR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: nan != 2.7320508075688767 within 0.02 delta (nan difference)\n",1,5.845050573348999
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,6,117,AOR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: -3.609375 != 2.7320508075688767 within 0.02 delta (6.341425807568877 difference)\n",1,8.35267949104309
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,7,136,AOR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 2.25 != 2.7320508075688767 within 0.02 delta (0.48205080756887675 difference)\n",1,8.193689584732056
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,8,136,AOR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 2.25 != 2.7320508075688767 within 0.02 delta (0.48205080756887675 difference)\n",1,6.952526092529297
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,9,136,AOR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 3.5 != 2.7320508075688767 within 0.02 delta (0.7679491924311233 difference)\n",1,7.347780466079712
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,10,199,AOR,killed,test_qpe_2___QUBIT_OP_ZZ____statevector_simulator___1__1_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 199, in _compute_energy\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/subsystem.py"", line 34, in get_subsystem_density_matrix\n    rho_sub = partial_trace(rho, trace_systems).data\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/states/utils.py"", line 67, in partial_trace\n    tr_op = SuperOp(np.eye(dims[0]).reshape(1, dims[0] ** 2),\nIndexError: tuple index out of range\n",2,8.392279386520386
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,11,205,AOR,killed,test_qpe_3___QUBIT_OP_H2_WITH_2_QUBIT_REDUCTION____statevector_simulator___1__6_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 1.0202296997498435 != -1.8572750302023806 within 0.02 delta (2.877504729952224 difference)\n",3,29.09763216972351
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,12,211,AOR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: -4.0 != 2.7320508075688767 within 0.02 delta (6.732050807568877 difference)\n",1,8.282920837402344
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,13,211,AOR,survived,,,3,26.40858221054077
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,14,211,AOR,survived,,,3,24.116031646728516
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,15,214,AOR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 215, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 214, in <listcomp>\nZeroDivisionError: float division by zero\n",1,7.180859565734863
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,16,214,AOR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 215, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 214, in <listcomp>\nZeroDivisionError: float divmod()\n",1,8.509871006011963
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,17,214,AOR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 10.75 != 2.7320508075688767 within 0.02 delta (8.017949192431123 difference)\n",1,7.739161968231201
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,18,221,AOR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 2.0 != 2.7320508075688767 within 0.02 delta (0.7320508075688767 difference)\n",1,7.2256786823272705
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,19,221,AOR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: -3.89453125 != 2.7320508075688767 within 0.02 delta (6.626582057568877 difference)\n",1,6.777625560760498
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,28.27469778060913,0.03343963623046875,0.1439199447631836,210.12824749946594,15.285239219665527,225.59084630012512,257.5487313270569,20,221,AOR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 10.75 != 2.7320508075688767 within 0.02 delta (8.017949192431123 difference)\n",1,7.156898736953735
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,24.879363775253296,0.03616023063659668,0.0055997371673583984,29.000139236450195,0.6765820980072021,29.718481302261353,58.409435749053955,1,131,ASR,survived,,,3,28.99846649169922
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,20.94566059112549,0.03981947898864746,NA,NA,NA,0.15948915481567383,24.99321150779724,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.04630398750305,0.03539085388183594,NA,NA,NA,0.14866065979003906,25.112630605697632,NA,NA,COD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,22.96463942527771,0.0572504997253418,0.12627196311950684,684.428582906723,9.342686653137207,693.9547920227051,720.3784492015839,1,111,COI,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 208, in _compute_energy\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 305, in execute\n    circuits = self.transpile(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 264, in transpile\n    **self._compile_config)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 240, in transpile\n    optimization_level, callback, output_name)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 431, in _parse_transpile_args\n    output_name = _parse_output_name(output_name, circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 739, in _parse_output_name\n    return [circuit.name for circuit in circuits]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 739, in <listcomp>\n    return [circuit.name for circuit in circuits]\nAttributeError: 'NoneType' object has no attribute 'name'\n",1,0.8430275917053223
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,22.96463942527771,0.0572504997253418,0.12627196311950684,684.428582906723,9.342686653137207,693.9547920227051,720.3784492015839,2,113,COI,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 94, in test_qpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 104, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 115, in _setup\nAttributeError: 'SummedOp' object has no attribute 'copy'\n",1,1.1528279781341553
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,22.96463942527771,0.0572504997253418,0.12627196311950684,684.428582906723,9.342686653137207,693.9547920227051,720.3784492015839,3,179,COI,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 208, in _compute_energy\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 305, in execute\n    circuits = self.transpile(circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 264, in transpile\n    **self._compile_config)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 240, in transpile\n    optimization_level, callback, output_name)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 431, in _parse_transpile_args\n    output_name = _parse_output_name(output_name, circuits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 739, in _parse_output_name\n    return [circuit.name for circuit in circuits]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/compiler/transpiler.py"", line 739, in <listcomp>\n    return [circuit.name for circuit in circuits]\nAttributeError: 'NoneType' object has no attribute 'name'\n",1,0.8885354995727539
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,22.96463942527771,0.0572504997253418,0.12627196311950684,684.428582906723,9.342686653137207,693.9547920227051,720.3784492015839,4,193,COI,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 305, in get_statevector\n    return postprocess.format_statevector(self.data(experiment)['statevector'],\nKeyError: 'statevector'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 196, in _compute_energy\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 308, in get_statevector\n    raise QiskitError(f'No statevector for experiment ""{repr(experiment)}""') from ex\nqiskit.exceptions.QiskitError: 'No statevector for experiment ""<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f91ee7f4cc0>""'\n",1,5.638174533843994
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,22.96463942527771,0.0572504997253418,0.12627196311950684,684.428582906723,9.342686653137207,693.9547920227051,720.3784492015839,5,228,COI,timeout,,,,114.94612073898315
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,22.96463942527771,0.0572504997253418,0.12627196311950684,684.428582906723,9.342686653137207,693.9547920227051,720.3784492015839,6,228,COI,timeout,,,,114.8528561592102
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,22.96463942527771,0.0572504997253418,0.12627196311950684,684.428582906723,9.342686653137207,693.9547920227051,720.3784492015839,7,230,COI,timeout,,,,114.9308648109436
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,22.96463942527771,0.0572504997253418,0.12627196311950684,684.428582906723,9.342686653137207,693.9547920227051,720.3784492015839,8,230,COI,timeout,,,,114.94584488868713
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,22.96463942527771,0.0572504997253418,0.12627196311950684,684.428582906723,9.342686653137207,693.9547920227051,720.3784492015839,9,232,COI,survived,,,3,26.706981897354126
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,22.96463942527771,0.0572504997253418,0.12627196311950684,684.428582906723,9.342686653137207,693.9547920227051,720.3784492015839,10,232,COI,survived,,,3,24.11636185646057
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,22.96463942527771,0.0572504997253418,0.12627196311950684,684.428582906723,9.342686653137207,693.9547920227051,720.3784492015839,11,234,COI,survived,,,3,20.70039653778076
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,22.96463942527771,0.0572504997253418,0.12627196311950684,684.428582906723,9.342686653137207,693.9547920227051,720.3784492015839,12,234,COI,survived,,,3,19.250001192092896
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,22.96463942527771,0.0572504997253418,0.12627196311950684,684.428582906723,9.342686653137207,693.9547920227051,720.3784492015839,13,236,COI,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAttributeError: 'NoneType' object has no attribute 'real'\n",1,5.123317241668701
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,22.96463942527771,0.0572504997253418,0.12627196311950684,684.428582906723,9.342686653137207,693.9547920227051,720.3784492015839,14,236,COI,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAttributeError: 'NoneType' object has no attribute 'real'\n",1,5.346526861190796
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,22.96463942527771,0.0572504997253418,0.12627196311950684,684.428582906723,9.342686653137207,693.9547920227051,720.3784492015839,15,291,COI,timeout,,,,114.95314860343933
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,1,61,CRP,survived,,,3,21.98572063446045
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,2,62,CRP,survived,,,3,19.882908582687378
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,3,63,CRP,survived,,,3,17.722379446029663
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,4,63,CRP,survived,,,3,19.657338619232178
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,5,64,CRP,survived,,,3,20.852553606033325
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,6,85,CRP,survived,,,3,18.515349626541138
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,7,85,CRP,survived,,,3,20.936543226242065
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,8,85,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 94, in test_qpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 85, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 43, in validate_min\n    raise ValueError('{} must have value >= {}, was {}'.format(name, minimum, value))\nValueError: num_time_slices must have value >= 2, was 1\n",1,1.2542600631713867
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,9,86,CRP,survived,,,3,20.661082983016968
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,10,86,CRP,survived,,,3,21.767693519592285
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,11,86,CRP,killed,test_qpe_2___QUBIT_OP_ZZ____statevector_simulator___1__1_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 94, in test_qpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 86, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 43, in validate_min\n    raise ValueError('{} must have value >= {}, was {}'.format(name, minimum, value))\nValueError: num_ancillae must have value >= 2, was 1\n",2,8.67499041557312
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,12,87,CRP,survived,,,3,26.199320316314697
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,13,87,CRP,survived,,,3,23.91846227645874
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,14,87,CRP,survived,,,3,20.70659327507019
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,15,87,CRP,survived,,,3,21.6026508808136
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,16,87,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 94, in test_qpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 87, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: expansion_mode must be one of '{'trotter', 'mutpy'}', was 'suzuki'.\n",1,1.2356996536254883
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,17,87,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 94, in test_qpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 87, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 30, in validate_in_set\n    raise ValueError(""{} must be one of '{}', was '{}'."".format(name, values, value))\nValueError: expansion_mode must be one of '{'', 'trotter'}', was 'suzuki'.\n",1,1.0865683555603027
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,18,88,CRP,survived,,,3,21.314686059951782
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,19,88,CRP,survived,,,3,21.481295108795166
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,20,88,CRP,survived,,,3,21.134461164474487
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,21,98,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 9.5 != 2.7320508075688767 within 0.02 delta (6.767949192431123 difference)\n",1,6.577905178070068
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,22,98,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: -0.3127572016460909 != 2.7320508075688767 within 0.02 delta (3.0448080092149676 difference)\n",1,6.769660234451294
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,23,98,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: -0.75 != 2.7320508075688767 within 0.02 delta (3.4820508075688767 difference)\n",1,7.354695796966553
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,24,98,CRP,survived,,,3,21.759498596191406
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,25,116,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 94, in test_qpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 104, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 117, in _setup\nKeyError: 'translation'\n",1,1.6003587245941162
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,26,116,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 94, in test_qpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 104, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 117, in _setup\nKeyError: 'translation'\n",1,0.8673450946807861
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,27,116,CRP,timeout,,,,109.07974934577942
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,28,117,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 94, in test_qpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 104, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 136, in _setup\nKeyError: 'stretch'\n",1,1.474308729171753
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,29,117,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 94, in test_qpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 104, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 136, in _setup\nKeyError: 'stretch'\n",1,0.9609208106994629
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,30,117,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: -2.583333333333333 != 2.7320508075688767 within 0.02 delta (5.31538414090221 difference)\n",1,6.657158136367798
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,31,117,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 94, in test_qpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 104, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 117, in _setup\nKeyError: 'mutpy'\n",1,1.0296518802642822
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,32,117,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 94, in test_qpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 104, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 117, in _setup\nKeyError: ''\n",1,1.353987693786621
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,33,123,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 94, in test_qpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 104, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 123, in _setup\nKeyError: 'mutpy'\n",1,0.8572931289672852
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,34,123,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 94, in test_qpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 104, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 123, in _setup\nKeyError: ''\n",1,0.9690160751342773
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,35,136,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 207, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 180, in construct_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/circuits/phase_estimation_circuit.py"", line 132, in construct_circuit\n    q = QuantumRegister(self._operator.num_qubits, name='q')\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/legacy/weighted_pauli_operator.py"", line 143, in num_qubits\n    return self._paulis[0][1].num_qubits\nAttributeError: 'numpy.complex128' object has no attribute 'num_qubits'\n",1,0.8014466762542725
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,36,136,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 94, in test_qpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 104, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 136, in _setup\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/utils/deprecation.py"", line 78, in wrapper\n    return func(*args, **kwargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/operators/mixins/group.py"", line 60, in __mul__\n    return self.dot(other)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/operators/symplectic/pauli.py"", line 479, in dot\n    return self.compose(other, qargs=qargs, front=True, inplace=inplace)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/operators/symplectic/pauli.py"", line 460, in compose\n    other = Pauli(other)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/quantum_info/operators/symplectic/pauli.py"", line 189, in __init__\n    raise QiskitError(""Invalid input data for Pauli."")\nqiskit.exceptions.QiskitError: 'Invalid input data for Pauli.'\n",1,1.1058385372161865
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,37,136,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 94, in test_qpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 104, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 136, in _setup\nKeyError: 'mutpy'\n",1,0.9173831939697266
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,38,136,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 94, in test_qpe\n    shallow_circuit_concat=True)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 104, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 136, in _setup\nKeyError: ''\n",1,0.8594446182250977
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,39,159,CRP,survived,,,3,18.400562047958374
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,40,159,CRP,survived,,,3,17.35828447341919
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,41,166,CRP,survived,,,3,16.715938329696655
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,42,166,CRP,survived,,,3,17.516488552093506
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,43,204,CRP,killed,test_qpe_2___QUBIT_OP_ZZ____statevector_simulator___1__1_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 204, in _compute_energy\nIndexError: tuple index out of range\n",2,6.0970375537872314
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,44,204,CRP,killed,test_qpe_2___QUBIT_OP_ZZ____statevector_simulator___1__1_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 204, in _compute_energy\nIndexError: index 1 is out of bounds for axis 0 with size 1\n",2,5.749671936035156
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,45,205,CRP,killed,test_qpe_3___QUBIT_OP_H2_WITH_2_QUBIT_REDUCTION____statevector_simulator___1__6_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: -1.5303445496247652 != -1.8572750302023806 within 0.02 delta (0.3269304805776154 difference)\n",3,18.95189666748047
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,46,211,CRP,survived,,,3,16.71559715270996
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,47,211,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 3.0 != 2.7320508075688767 within 0.02 delta (0.26794919243112325 difference)\n",1,4.60472559928894
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,48,211,CRP,timeout,,,,109.07801556587219
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,49,211,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 1.0 != 2.7320508075688767 within 0.02 delta (1.7320508075688767 difference)\n",1,4.744050741195679
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,50,214,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 28.0 != 2.7320508075688767 within 0.02 delta (25.267949192431125 difference)\n",1,5.78483247756958
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,51,214,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 215, in _compute_energy\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 214, in <listcomp>\nIndexError: tuple index out of range\n",1,4.93961501121521
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,52,218,CRP,survived,,,3,17.108434915542603
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,53,218,CRP,survived,,,3,17.129157066345215
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,54,219,CRP,survived,,,3,15.824772357940674
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,55,219,CRP,survived,,,3,16.62278652191162
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,56,220,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 222, in _compute_energy\nKeyError: 'eigvals'\n",1,4.866958141326904
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,57,220,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 222, in _compute_energy\nKeyError: 'eigvals'\n",1,4.953078508377075
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,58,221,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 221, in _compute_energy\nKeyError: 'mutpy'\n",1,5.245122194290161
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,59,221,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 221, in _compute_energy\nKeyError: ''\n",1,4.6485490798950195
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,60,221,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 221, in _compute_energy\nKeyError: 'mutpy'\n",1,4.778703212738037
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,61,221,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 221, in _compute_energy\nKeyError: ''\n",1,4.886228084564209
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,62,222,CRP,survived,,,3,16.489376068115234
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,63,222,CRP,survived,,,3,16.519225597381592
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,64,222,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 222, in _compute_energy\nKeyError: 'mutpy'\n",1,4.790462017059326
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,65,222,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 222, in _compute_energy\nKeyError: ''\n",1,4.877336502075195
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,66,222,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 222, in _compute_energy\nIndexError: list index out of range\n",1,4.620121479034424
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,67,228,CRP,timeout,,,,109.07759284973145
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,68,228,CRP,timeout,,,,108.98940539360046
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,69,229,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 229, in _run\nKeyError: 'mutpy'\n",1,4.708036422729492
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,70,229,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 229, in _run\nKeyError: ''\n",1,4.81535005569458
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,71,230,CRP,timeout,,,,109.07727193832397
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,72,230,CRP,timeout,,,,109.01321697235107
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,73,231,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 231, in _run\nKeyError: 'mutpy'\n",1,5.001194000244141
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,74,231,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 231, in _run\nKeyError: ''\n",1,4.9104673862457275
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,75,232,CRP,survived,,,3,16.76669216156006
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,76,232,CRP,survived,,,3,16.70802617073059
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,77,233,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 233, in _run\nKeyError: 'mutpy'\n",1,5.113158702850342
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,78,233,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 233, in _run\nKeyError: ''\n",1,4.954091310501099
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,79,234,CRP,survived,,,3,16.69872236251831
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,80,234,CRP,survived,,,3,17.932284355163574
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,81,235,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 235, in _run\nKeyError: 'mutpy'\n",1,5.225574493408203
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,82,235,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 235, in _run\nKeyError: ''\n",1,5.223440885543823
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,83,236,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAttributeError: 'NoneType' object has no attribute 'real'\n",1,5.401360988616943
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,84,236,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAttributeError: 'NoneType' object has no attribute 'real'\n",1,4.465814113616943
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,85,237,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 237, in _run\nKeyError: 'mutpy'\n",1,4.542876958847046
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,86,237,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 237, in _run\nKeyError: ''\n",1,5.349466800689697
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,87,237,CRP,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 237, in _run\nIndexError: list index out of range\n",1,5.385655403137207
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,88,224,CRP,survived,,,3,17.765599727630615
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,89,224,CRP,survived,,,3,16.931957244873047
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,90,248,CRP,timeout,,,,109.04511284828186
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,91,248,CRP,timeout,,,,109.09137392044067
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,92,253,CRP,timeout,,,,109.09317374229431
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,93,253,CRP,timeout,,,,109.06153321266174
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,94,258,CRP,timeout,,,,109.0344626903534
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,95,258,CRP,timeout,,,,109.02397775650024
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,96,263,CRP,timeout,,,,109.01300263404846
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,97,263,CRP,timeout,,,,109.08157801628113
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,98,268,CRP,survived,,,3,17.124431133270264
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,99,268,CRP,survived,,,3,18.488672733306885
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,100,273,CRP,survived,,,3,19.09069299697876
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,101,273,CRP,survived,,,3,17.723505973815918
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,102,278,CRP,survived,,,3,19.013751745224
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,103,278,CRP,survived,,,3,17.469682216644287
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,104,283,CRP,survived,,,3,16.851360321044922
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,105,283,CRP,survived,,,3,17.095558404922485
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,106,286,CRP,survived,,,3,15.819153308868408
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,107,286,CRP,survived,,,3,16.78304386138916
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,108,291,CRP,survived,,,3,18.37885594367981
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,109,291,CRP,survived,,,3,17.12355899810791
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,110,292,CRP,survived,,,3,15.67159652709961
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.79255723953247,0.03309011459350586,0.6875324249267578,2630.153252363205,60.854787826538086,2691.7286627292633,2716.9504404067993,111,292,CRP,survived,,,3,15.180190324783325
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.707088947296143,0.03327298164367676,0.049701690673828125,116.72687339782715,6.370826005935669,123.18067407608032,143.49866914749146,1,145,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.707088947296143,0.03327298164367676,0.049701690673828125,116.72687339782715,6.370826005935669,123.18067407608032,143.49866914749146,2,150,DDL,survived,,,3,17.797351360321045
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.707088947296143,0.03327298164367676,0.049701690673828125,116.72687339782715,6.370826005935669,123.18067407608032,143.49866914749146,3,156,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.707088947296143,0.03327298164367676,0.049701690673828125,116.72687339782715,6.370826005935669,123.18067407608032,143.49866914749146,4,161,DDL,survived,,,3,17.20098567008972
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.707088947296143,0.03327298164367676,0.049701690673828125,116.72687339782715,6.370826005935669,123.18067407608032,143.49866914749146,5,245,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.707088947296143,0.03327298164367676,0.049701690673828125,116.72687339782715,6.370826005935669,123.18067407608032,143.49866914749146,6,250,DDL,survived,,,3,16.5593044757843
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.707088947296143,0.03327298164367676,0.049701690673828125,116.72687339782715,6.370826005935669,123.18067407608032,143.49866914749146,7,255,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.707088947296143,0.03327298164367676,0.049701690673828125,116.72687339782715,6.370826005935669,123.18067407608032,143.49866914749146,8,260,DDL,survived,,,3,17.252694845199585
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.707088947296143,0.03327298164367676,0.049701690673828125,116.72687339782715,6.370826005935669,123.18067407608032,143.49866914749146,9,265,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.707088947296143,0.03327298164367676,0.049701690673828125,116.72687339782715,6.370826005935669,123.18067407608032,143.49866914749146,10,270,DDL,survived,,,3,15.946210861206055
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.707088947296143,0.03327298164367676,0.049701690673828125,116.72687339782715,6.370826005935669,123.18067407608032,143.49866914749146,11,275,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.707088947296143,0.03327298164367676,0.049701690673828125,116.72687339782715,6.370826005935669,123.18067407608032,143.49866914749146,12,280,DDL,survived,,,3,15.604518413543701
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.707088947296143,0.03327298164367676,0.049701690673828125,116.72687339782715,6.370826005935669,123.18067407608032,143.49866914749146,13,285,DDL,survived,,,3,16.35588240623474
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,20.572806119918823,0.030797958374023438,NA,NA,NA,0.1446976661682129,24.653740644454956,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.35465717315674,0.03178834915161133,NA,NA,NA,0.18354320526123047,20.029407262802124,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,18.72122621536255,0.03800535202026367,NA,NA,NA,0.1950063705444336,21.678900003433228,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,15.680212259292603,0.02910447120666504,0.03918147087097168,296.2090651988983,4.394843101501465,300.6721942424774,318.5155711174011,1,57,IOD,timeout,,,,78.49939775466919
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,15.680212259292603,0.02910447120666504,0.03918147087097168,296.2090651988983,4.394843101501465,300.6721942424774,318.5155711174011,2,145,IOD,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,15.680212259292603,0.02910447120666504,0.03918147087097168,296.2090651988983,4.394843101501465,300.6721942424774,318.5155711174011,3,150,IOD,survived,,,3,15.928744554519653
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,15.680212259292603,0.02910447120666504,0.03918147087097168,296.2090651988983,4.394843101501465,300.6721942424774,318.5155711174011,4,156,IOD,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,15.680212259292603,0.02910447120666504,0.03918147087097168,296.2090651988983,4.394843101501465,300.6721942424774,318.5155711174011,5,161,IOD,survived,,,3,15.855692148208618
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,15.680212259292603,0.02910447120666504,0.03918147087097168,296.2090651988983,4.394843101501465,300.6721942424774,318.5155711174011,6,184,IOD,timeout,,,,78.49854636192322
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,15.680212259292603,0.02910447120666504,0.03918147087097168,296.2090651988983,4.394843101501465,300.6721942424774,318.5155711174011,7,224,IOD,timeout,,,,78.48375391960144
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,15.680212259292603,0.02910447120666504,0.03918147087097168,296.2090651988983,4.394843101501465,300.6721942424774,318.5155711174011,8,285,IOD,survived,,,3,14.347304582595825
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,15.680212259292603,0.02910447120666504,0.03918147087097168,296.2090651988983,4.394843101501465,300.6721942424774,318.5155711174011,9,290,IOD,survived,,,3,14.585472583770752
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,16.679903030395508,0.028490781784057617,0.009464025497436523,29.214824438095093,1.0067214965820312,30.259500741958618,49.32168459892273,1,57,IOP,survived,,,3,14.55296277999878
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,16.679903030395508,0.028490781784057617,0.009464025497436523,29.214824438095093,1.0067214965820312,30.259500741958618,49.32168459892273,2,184,IOP,survived,,,3,14.658528566360474
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,19.1553692817688,0.035663604736328125,NA,NA,NA,0.1711113452911377,21.960339307785034,NA,NA,LCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,18.841915130615234,0.03397345542907715,NA,NA,NA,0.1526961326599121,21.798047065734863,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,18.781863927841187,0.029135942459106445,NA,NA,NA,0.15941166877746582,21.701117992401123,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.721157550811768,0.03236818313598633,0.008586883544921875,94.50661945343018,1.073516845703125,95.62109136581421,115.85740375518799,1,204,ROR,killed,test_qpe_2___QUBIT_OP_ZZ____statevector_simulator___1__1_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 0.0 != -1.0 within 0.02 delta (1.0 difference)\n",2,5.7957727909088135
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.721157550811768,0.03236818313598633,0.008586883544921875,94.50661945343018,1.073516845703125,95.62109136581421,115.85740375518799,2,291,ROR,timeout,,,,88.70781755447388
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.132102966308594,0.02781844139099121,0.007892608642578125,36.889790058135986,1.075796127319336,38.00129723548889,57.78449988365173,1,57,SCD,survived,,,3,17.79988694190979
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.132102966308594,0.02781844139099121,0.007892608642578125,36.889790058135986,1.075796127319336,38.00129723548889,57.78449988365173,2,184,SCD,survived,,,3,19.087474584579468
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,19.302289485931396,0.03702521324157715,0.03821706771850586,111.35367798805237,3.865635871887207,115.29455614089966,137.40806984901428,1,145,SCI,survived,,,3,17.911874771118164
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,19.302289485931396,0.03702521324157715,0.03821706771850586,111.35367798805237,3.865635871887207,115.29455614089966,137.40806984901428,2,150,SCI,survived,,,3,18.529587507247925
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,19.302289485931396,0.03702521324157715,0.03821706771850586,111.35367798805237,3.865635871887207,115.29455614089966,137.40806984901428,3,156,SCI,survived,,,3,17.761687755584717
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,19.302289485931396,0.03702521324157715,0.03821706771850586,111.35367798805237,3.865635871887207,115.29455614089966,137.40806984901428,4,161,SCI,survived,,,3,18.446402311325073
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,19.302289485931396,0.03702521324157715,0.03821706771850586,111.35367798805237,3.865635871887207,115.29455614089966,137.40806984901428,5,224,SCI,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 100, in test_qpe\n    result = qpe.run(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.qpe"", line 225, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 75, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,1.0523080825805664
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,19.302289485931396,0.03702521324157715,0.03821706771850586,111.35367798805237,3.865635871887207,115.29455614089966,137.40806984901428,6,285,SCI,survived,,,3,18.487370252609253
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,19.302289485931396,0.03702521324157715,0.03821706771850586,111.35367798805237,3.865635871887207,115.29455614089966,137.40806984901428,7,290,SCI,survived,,,3,19.152119874954224
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.528594493865967,0.02933502197265625,0.019392013549804688,46.777934074401855,1.6189539432525635,48.44561505317688,73.93688201904297,1,205,SIR,killed,test_qpe_3___QUBIT_OP_H2_WITH_2_QUBIT_REDUCTION____statevector_simulator___1__6_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: 1.0202296997498435 != -1.8572750302023806 within 0.02 delta (2.877504729952224 difference)\n",3,18.98811674118042
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.528594493865967,0.02933502197265625,0.019392013549804688,46.777934074401855,1.6189539432525635,48.44561505317688,73.93688201904297,2,211,SIR,killed,test_qpe_1___QUBIT_OP_SIMPLE____qasm_simulator___1__5_ (test.aqua.test_qpe.TestQPE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_qpe.py"", line 117, in test_qpe\n    self.assertAlmostEqual(result.eigenvalue.real, ref_eigenval.real, delta=2e-2)\nAssertionError: -4.0 != 2.7320508075688767 within 0.02 delta (6.732050807568877 difference)\n",1,6.310240983963013
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,21.528594493865967,0.02933502197265625,0.019392013549804688,46.777934074401855,1.6189539432525635,48.44561505317688,73.93688201904297,3,211,SIR,survived,,,3,21.473381519317627
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,24.502418041229248,0.03856825828552246,NA,NA,NA,7.961871147155762,36.25212621688843,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,19.991628885269165,0.031163692474365234,NA,NA,NA,182.40292477607727,205.18942594528198,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,17.093841552734375,0.04228568077087402,NA,NA,NA,159.02062582969666,178.52953791618347,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,19.524073839187622,0.03183722496032715,NA,NA,NA,0.15596246719360352,22.579678535461426,NA,NA,QMD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.qpe,test.aqua.test_qpe,3,20.249247550964355,0.03751778602600098,NA,NA,NA,14.275943279266357,37.39622235298157,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1266.0859467983246,0.07798027992248535,0.01691722869873047,693.2707476615906,2.4512012004852295,695.816846370697,1964.5915129184723,1,519,AOD,killed,test_max_evals_grouped_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 136, in test_max_evals_grouped\n    result = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 377, in _minimize_slsqp\n    bounds=new_bounds)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 155, in __init__\n    self._update_grad()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 231, in _update_grad\n    self._update_grad_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 145, in update_grad\n    self.g = grad_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 142, in grad_wrapped\n    return np.atleast_1d(grad(x, *args))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/optimizer.py"", line 137, in function_wrapper\n    return function(*(wrapper_args + args))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/optimizer.py"", line 116, in gradient_num_diff\n    todos_results = f(parallel_parameters)  # eval the points in a chunk (order preserved)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 519, in _energy_evaluation\n  File ""<__array_function__ internals>"", line 6, in reshape\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/core/fromnumeric.py"", line 299, in reshape\n    return _wrapfunc(a, 'reshape', newshape, order=order)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/core/fromnumeric.py"", line 58, in _wrapfunc\n    return bound(*args, **kwds)\nValueError: cannot reshape array of size 64 into shape (1,16)\n",10,693.2679903507233
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1353.981883764267,0.42277073860168457,0.10555219650268555,88386.17513775826,16.489978551864624,88403.19343924522,89761.07604193687,1,255,AOR,timeout,,,,6770.034979581833
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1353.981883764267,0.42277073860168457,0.10555219650268555,88386.17513775826,16.489978551864624,88403.19343924522,89761.07604193687,2,255,AOR,timeout,,,,6769.961144447327
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1353.981883764267,0.42277073860168457,0.10555219650268555,88386.17513775826,16.489978551864624,88403.19343924522,89761.07604193687,3,255,AOR,timeout,,,,6770.026360273361
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1353.981883764267,0.42277073860168457,0.10555219650268555,88386.17513775826,16.489978551864624,88403.19343924522,89761.07604193687,4,453,AOR,timeout,,,,6769.936813116074
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1353.981883764267,0.42277073860168457,0.10555219650268555,88386.17513775826,16.489978551864624,88403.19343924522,89761.07604193687,5,479,AOR,timeout,,,,6769.955761671066
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1353.981883764267,0.42277073860168457,0.10555219650268555,88386.17513775826,16.489978551864624,88403.19343924522,89761.07604193687,6,479,AOR,timeout,,,,6770.017763137817
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1353.981883764267,0.42277073860168457,0.10555219650268555,88386.17513775826,16.489978551864624,88403.19343924522,89761.07604193687,7,479,AOR,timeout,,,,6769.950900793076
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1353.981883764267,0.42277073860168457,0.10555219650268555,88386.17513775826,16.489978551864624,88403.19343924522,89761.07604193687,8,519,AOR,killed,test_max_evals_grouped_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 136, in test_max_evals_grouped\n    result = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 377, in _minimize_slsqp\n    bounds=new_bounds)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 155, in __init__\n    self._update_grad()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 231, in _update_grad\n    self._update_grad_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 145, in update_grad\n    self.g = grad_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 142, in grad_wrapped\n    return np.atleast_1d(grad(x, *args))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/optimizer.py"", line 137, in function_wrapper\n    return function(*(wrapper_args + args))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/optimizer.py"", line 116, in gradient_num_diff\n    todos_results = f(parallel_parameters)  # eval the points in a chunk (order preserved)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 519, in _energy_evaluation\n  File ""<__array_function__ internals>"", line 6, in reshape\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/core/fromnumeric.py"", line 299, in reshape\n    return _wrapfunc(a, 'reshape', newshape, order=order)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/core/fromnumeric.py"", line 58, in _wrapfunc\n    return bound(*args, **kwds)\nValueError: cannot reshape array of size 64 into shape (1,16)\n",10,376.275386095047
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1353.981883764267,0.42277073860168457,0.10555219650268555,88386.17513775826,16.489978551864624,88403.19343924522,89761.07604193687,9,530,AOR,timeout,,,,6770.022722959518
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1353.981883764267,0.42277073860168457,0.10555219650268555,88386.17513775826,16.489978551864624,88403.19343924522,89761.07604193687,10,530,AOR,timeout,,,,6770.025108575821
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1353.981883764267,0.42277073860168457,0.10555219650268555,88386.17513775826,16.489978551864624,88403.19343924522,89761.07604193687,11,539,AOR,timeout,,,,6770.021047115326
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1353.981883764267,0.42277073860168457,0.10555219650268555,88386.17513775826,16.489978551864624,88403.19343924522,89761.07604193687,12,539,AOR,timeout,,,,6769.926501274109
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1353.981883764267,0.42277073860168457,0.10555219650268555,88386.17513775826,16.489978551864624,88403.19343924522,89761.07604193687,13,539,AOR,timeout,,,,6769.967976093292
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1353.981883764267,0.42277073860168457,0.10555219650268555,88386.17513775826,16.489978551864624,88403.19343924522,89761.07604193687,14,539,AOR,timeout,,,,6770.025240659714
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1415.5545938014984,0.062172889709472656,0.09778165817260742,106167.8951780796,18.551809310913086,106186.6069419384,107606.16092920303,1,298,ASR,timeout,,,,7077.893414258957
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1415.5545938014984,0.062172889709472656,0.09778165817260742,106167.8951780796,18.551809310913086,106186.6069419384,107606.16092920303,2,300,ASR,timeout,,,,7077.891101837158
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1415.5545938014984,0.062172889709472656,0.09778165817260742,106167.8951780796,18.551809310913086,106186.6069419384,107606.16092920303,3,301,ASR,timeout,,,,7077.799008846283
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1415.5545938014984,0.062172889709472656,0.09778165817260742,106167.8951780796,18.551809310913086,106186.6069419384,107606.16092920303,4,312,ASR,timeout,,,,7077.894505739212
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1415.5545938014984,0.062172889709472656,0.09778165817260742,106167.8951780796,18.551809310913086,106186.6069419384,107606.16092920303,5,314,ASR,timeout,,,,7077.883912801743
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1415.5545938014984,0.062172889709472656,0.09778165817260742,106167.8951780796,18.551809310913086,106186.6069419384,107606.16092920303,6,315,ASR,timeout,,,,7077.8062608242035
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1415.5545938014984,0.062172889709472656,0.09778165817260742,106167.8951780796,18.551809310913086,106186.6069419384,107606.16092920303,7,317,ASR,timeout,,,,7077.891042947769
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1415.5545938014984,0.062172889709472656,0.09778165817260742,106167.8951780796,18.551809310913086,106186.6069419384,107606.16092920303,8,319,ASR,timeout,,,,7077.827105998993
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1415.5545938014984,0.062172889709472656,0.09778165817260742,106167.8951780796,18.551809310913086,106186.6069419384,107606.16092920303,9,321,ASR,timeout,,,,7077.885027885437
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1415.5545938014984,0.062172889709472656,0.09778165817260742,106167.8951780796,18.551809310913086,106186.6069419384,107606.16092920303,10,323,ASR,timeout,,,,7077.886109352112
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1415.5545938014984,0.062172889709472656,0.09778165817260742,106167.8951780796,18.551809310913086,106186.6069419384,107606.16092920303,11,324,ASR,timeout,,,,7077.821614980698
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1415.5545938014984,0.062172889709472656,0.09778165817260742,106167.8951780796,18.551809310913086,106186.6069419384,107606.16092920303,12,325,ASR,timeout,,,,7077.830093383789
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1415.5545938014984,0.062172889709472656,0.09778165817260742,106167.8951780796,18.551809310913086,106186.6069419384,107606.16092920303,13,326,ASR,timeout,,,,7077.787935972214
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1415.5545938014984,0.062172889709472656,0.09778165817260742,106167.8951780796,18.551809310913086,106186.6069419384,107606.16092920303,14,532,ASR,timeout,,,,7077.886265516281
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1415.5545938014984,0.062172889709472656,0.09778165817260742,106167.8951780796,18.551809310913086,106186.6069419384,107606.16092920303,15,535,ASR,timeout,,,,7077.885672569275
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1415.6417849063873,0.06560802459716797,NA,NA,NA,0.30333447456359863,1419.3824665546417,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1238.5984518527985,0.5378873348236084,0.08828163146972656,12430.902768850327,12.153101444244385,12443.682039260864,13686.932615995407,1,195,COD,survived,,,0,0.7158243656158447
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1238.5984518527985,0.5378873348236084,0.08828163146972656,12430.902768850327,12.153101444244385,12443.682039260864,13686.932615995407,2,220,COD,survived,,,0,41.343637466430664
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1238.5984518527985,0.5378873348236084,0.08828163146972656,12430.902768850327,12.153101444244385,12443.682039260864,13686.932615995407,3,249,COD,timeout,,,,6193.111976623535
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1238.5984518527985,0.5378873348236084,0.08828163146972656,12430.902768850327,12.153101444244385,12443.682039260864,13686.932615995407,4,512,COD,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 377, in _minimize_slsqp\n    bounds=new_bounds)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 525, in _energy_evaluation\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/converters/circuit_sampler.py"", line 181, in convert\n    operator_dicts_replaced = operator.to_circuit_op()\nAttributeError: 'NoneType' object has no attribute 'to_circuit_op'\n",1,0.1288890838623047
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1238.5984518527985,0.5378873348236084,0.08828163146972656,12430.902768850327,12.153101444244385,12443.682039260864,13686.932615995407,5,545,COD,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 456, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 546, in get_optimal_cost\nqiskit.aqua.aqua_error.AquaError: 'Cannot return optimal cost before running the algorithm to find optimal params.'\n",1,1.317188024520874
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1238.5984518527985,0.5378873348236084,0.08828163146972656,12430.902768850327,12.153101444244385,12443.682039260864,13686.932615995407,6,552,COD,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 567, in get_optimal_vector\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 553, in get_optimal_circuit\nqiskit.aqua.aqua_error.AquaError: 'Cannot find optimal circuit before running the algorithm to find optimal params.'\n",1,0.6677699089050293
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1238.5984518527985,0.5378873348236084,0.08828163146972656,12430.902768850327,12.153101444244385,12443.682039260864,13686.932615995407,7,564,COD,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 565, in get_optimal_vector\nqiskit.aqua.aqua_error.AquaError: 'Cannot find optimal vector before running the algorithm to find optimal params.'\n",1,0.4821009635925293
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1238.5984518527985,0.5378873348236084,0.08828163146972656,12430.902768850327,12.153101444244385,12443.682039260864,13686.932615995407,8,584,COD,timeout,,,,6193.114729881287
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,1,145,COI,survived,,,3,590.1311421394348
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,2,148,COI,killed,test_basic_aer_qasm (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqe.py"", line 148, in test_basic_aer_qasm\n    self.assertAlmostEqual(result.eigenvalue.real, -1.86823, places=2)\nAssertionError: -1.0562316736187076 != -1.86823 within 2 places (0.8119983263812924 difference)\n",3,1827.4812996387482
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,3,152,COI,killed,test_circuit_input (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqe.py"", line 84, in test_circuit_input\n    vqe = VQE(self.h2_op, wavefunction, optimizer=optimizer)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 153, in __init__\nAttributeError: 'QuantumCircuit' object has no attribute 'preferred_init_points'\n",6,540.2205743789673
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,4,174,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 413, in _run\nqiskit.aqua.aqua_error.AquaError: 'The operator was never provided.'\n",1,0.05946230888366699
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,5,189,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 331, in test_backend_change\n    quantum_instance=BasicAer.get_backend('statevector_simulator'))\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 175, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 190, in operator\nAttributeError: 'SummedOp' object has no attribute 'to_opflow'\n",1,0.05317950248718262
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,6,195,COI,survived,,,0,0.707007646560669
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,7,199,COI,killed,test_backend_change_2_None (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 331, in test_backend_change\n    quantum_instance=BasicAer.get_backend('statevector_simulator'))\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 168, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 73, in __init__\n    super().__init__(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 41, in __init__\n    self.quantum_instance = quantum_instance\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 221, in quantum_instance\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 202, in _try_set_expectation_value_from_factory\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/expectations/expectation_factory.py"", line 68, in build\n    primitives = operator.primitive_strings()\nAttributeError: 'NoneType' object has no attribute 'primitive_strings'\n",2,2.2413454055786133
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,8,220,COI,survived,,,0,37.655816078186035
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,9,247,COI,timeout,,,,5604.530373573303
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,10,249,COI,timeout,,,,5604.435918331146
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,11,254,COI,killed,test_reuse (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqe.py"", line 234, in test_reuse\n    vqe = VQE()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 176, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 255, in aux_operators\nAttributeError: 'NoneType' object has no attribute 'num_qubits'\n",13,723.7234873771667
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,12,258,COI,timeout,,,,5604.520431518555
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,13,260,COI,timeout,,,,5604.503568172455
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,14,272,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 377, in _minimize_slsqp\n    bounds=new_bounds)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 513, in _energy_evaluation\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 370, in construct_expectation\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/state_fn.py"", line 263, in compose\n    new_self, other = self._expand_shorter_operator_and_permute(other, permutation)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/state_fn.py"", line 220, in _expand_shorter_operator_and_permute\n    return super()._expand_shorter_operator_and_permute(other, permutation)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/operator_base.py"", line 552, in _expand_shorter_operator_and_permute\n    other = other._expand_dim(self.num_qubits - other.num_qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/circuit_state_fn.py"", line 350, in _expand_dim\n    return self.permute(list(range(num_qubits, num_qubits + self.num_qubits)))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/circuit_state_fn.py"", line 363, in permute\n    new_qc = QuantumCircuit(max(permutation) + 1).compose(self.primitive, qubits=permutation)\nValueError: max() arg is an empty sequence\n",1,0.07546472549438477
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,15,273,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 377, in _minimize_slsqp\n    bounds=new_bounds)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 513, in _energy_evaluation\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 370, in construct_expectation\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/state_fn.py"", line 263, in compose\n    new_self, other = self._expand_shorter_operator_and_permute(other, permutation)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/state_fn.py"", line 220, in _expand_shorter_operator_and_permute\n    return super()._expand_shorter_operator_and_permute(other, permutation)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/operator_base.py"", line 552, in _expand_shorter_operator_and_permute\n    other = other._expand_dim(self.num_qubits - other.num_qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/circuit_state_fn.py"", line 350, in _expand_dim\n    return self.permute(list(range(num_qubits, num_qubits + self.num_qubits)))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/circuit_state_fn.py"", line 363, in permute\n    new_qc = QuantumCircuit(max(permutation) + 1).compose(self.primitive, qubits=permutation)\nValueError: max() arg is an empty sequence\n",1,0.08652782440185547
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,16,287,COI,timeout,,,,5604.54038643837
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,17,296,COI,timeout,,,,5604.523223161697
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,18,297,COI,timeout,,,,5604.523880243301
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,19,297,COI,timeout,,,,5604.496479272842
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,20,316,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 331, in test_backend_change\n    quantum_instance=BasicAer.get_backend('statevector_simulator'))\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 179, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 317, in print_settings\nAttributeError: 'TwoLocal' object has no attribute 'setting'\n",1,0.07817506790161133
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,21,318,COI,killed,test_circuit_input (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqe.py"", line 84, in test_circuit_input\n    vqe = VQE(self.h2_op, wavefunction, optimizer=optimizer)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 179, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 319, in print_settings\nAttributeError: 'QuantumCircuit' object has no attribute 'print_settings'\n",6,358.2221336364746
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,22,320,COI,timeout,,,,5604.523213386536
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,23,346,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 377, in _minimize_slsqp\n    bounds=new_bounds)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 513, in _energy_evaluation\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 347, in construct_expectation\nqiskit.aqua.aqua_error.AquaError: 'The operator was never provided.'\n",1,0.09140968322753906
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,24,352,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 377, in _minimize_slsqp\n    bounds=new_bounds)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 513, in _energy_evaluation\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 356, in construct_expectation\nAttributeError: 'TwoLocal' object has no attribute 'construct_circuit'\n",1,0.07758688926696777
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,25,359,COI,survived,,,0,0.43944311141967773
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,26,363,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 377, in _minimize_slsqp\n    bounds=new_bounds)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 513, in _energy_evaluation\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 364, in construct_expectation\nqiskit.aqua.aqua_error.AquaError: 'No expectation set and could not automatically set one, please try explicitly setting an expectation or specify a backend so it can be chosen automatically.'\n",1,0.08642148971557617
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,27,389,COI,killed,test_construct_circuit_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 99, in test_construct_circuit\n    circuits = vqe.construct_circuit(params)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 395, in construct_circuit\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 390, in extract_circuits\nAttributeError: 'ComposedOp' object has no attribute 'primitive'\n",7,346.930278301239
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,28,391,COI,killed,test_construct_circuit_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 101, in test_construct_circuit\n    self.assertEqual(len(circuits), num_circuits)\nAssertionError: 0 != 1\n",7,354.0181746482849
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,29,412,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 413, in _run\nqiskit.aqua.aqua_error.AquaError: 'The operator was never provided.'\n",1,0.10332393646240234
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,30,423,COI,timeout,,,,5604.527503728867
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,31,424,COI,timeout,,,,5604.527516841888
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,32,443,COI,timeout,,,,5604.430092096329
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,33,460,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 461, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 475, in _eval_aux_ops\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/state_fn.py"", line 263, in compose\n    new_self, other = self._expand_shorter_operator_and_permute(other, permutation)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/state_fn.py"", line 220, in _expand_shorter_operator_and_permute\n    return super()._expand_shorter_operator_and_permute(other, permutation)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/operator_base.py"", line 545, in _expand_shorter_operator_and_permute\n    if not self.num_qubits == other.num_qubits:\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/operator_state_fn.py"", line 55, in num_qubits\n    return self.primitive.num_qubits\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/list_ops/list_op.py"", line 155, in num_qubits\n    num_qubits0 = self.oplist[0].num_qubits\nIndexError: list index out of range\n",1,0.47168970108032227
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,34,512,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 377, in _minimize_slsqp\n    bounds=new_bounds)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 525, in _energy_evaluation\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/converters/circuit_sampler.py"", line 181, in convert\n    operator_dicts_replaced = operator.to_circuit_op()\nAttributeError: 'NoneType' object has no attribute 'to_circuit_op'\n",1,0.09589862823486328
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,35,516,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 377, in _minimize_slsqp\n    bounds=new_bounds)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 517, in _energy_evaluation\nRuntimeError: The var_form cannot have 0 parameters.\n",1,0.0718841552734375
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,36,528,COI,timeout,,,,5604.526804685593
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,37,545,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 456, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 546, in get_optimal_cost\nqiskit.aqua.aqua_error.AquaError: 'Cannot return optimal cost before running the algorithm to find optimal params.'\n",1,0.4284813404083252
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,38,552,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 567, in get_optimal_vector\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 553, in get_optimal_circuit\nqiskit.aqua.aqua_error.AquaError: 'Cannot find optimal circuit before running the algorithm to find optimal params.'\n",1,0.4340801239013672
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,39,555,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 567, in get_optimal_vector\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 556, in get_optimal_circuit\nAttributeError: 'TwoLocal' object has no attribute 'construct_circuit'\n",1,0.4029703140258789
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,40,564,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 565, in get_optimal_vector\nqiskit.aqua.aqua_error.AquaError: 'Cannot find optimal vector before running the algorithm to find optimal params.'\n",1,0.36995458602905273
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,41,568,COI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 305, in get_statevector\n    return postprocess.format_statevector(self.data(experiment)['statevector'],\nKeyError: 'statevector'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 345, in test_backend_change\n    result1 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 570, in get_optimal_vector\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/result/result.py"", line 308, in get_statevector\n    raise QiskitError(f'No statevector for experiment ""{repr(experiment)}""') from ex\nqiskit.exceptions.QiskitError: 'No statevector for experiment ""<qiskit.circuit.library.n_local.two_local.TwoLocal object at 0x7f69497ce780>""'\n",1,1.39198899269104
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,42,584,COI,timeout,,,,5604.528659582138
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1120.882241487503,0.0781242847442627,0.330385684967041,83250.59589457512,52.42867112159729,83303.43307566643,84427.85831642151,43,603,COI,survived,,,0,1.2278707027435303
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,1,98,CRP,timeout,,,,2890.63880944252
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,2,144,CRP,timeout,,,,2890.6411612033844
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,3,144,CRP,timeout,,,,2890.6257705688477
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,4,144,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 331, in test_backend_change\n    quantum_instance=BasicAer.get_backend('statevector_simulator'))\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 144, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 43, in validate_min\n    raise ValueError('{} must have value >= {}, was {}'.format(name, minimum, value))\nValueError: max_evals_grouped must have value >= 2, was 1\n",1,0.04423356056213379
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,5,152,CRP,timeout,,,,2890.6563477516174
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,6,152,CRP,timeout,,,,2890.7251315116882
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,7,178,CRP,timeout,,,,2890.724635362625
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,8,255,CRP,timeout,,,,2890.7255351543427
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,9,266,CRP,timeout,,,,2890.6726970672607
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,10,279,CRP,timeout,,,,2890.7253470420837
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,11,279,CRP,timeout,,,,2890.724928379059
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,12,293,CRP,timeout,,,,2890.724312543869
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,13,293,CRP,timeout,,,,2890.6417846679688
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,14,294,CRP,timeout,,,,2890.6400661468506
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,15,296,CRP,timeout,,,,2890.626788854599
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,16,296,CRP,timeout,,,,2890.724802017212
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,17,296,CRP,timeout,,,,2890.6577775478363
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,18,297,CRP,timeout,,,,2890.7261621952057
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,19,297,CRP,timeout,,,,2890.724365711212
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,20,298,CRP,timeout,,,,2890.7113914489746
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,21,298,CRP,timeout,,,,2890.722831964493
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,22,298,CRP,timeout,,,,2890.724046230316
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,23,298,CRP,timeout,,,,2890.722897529602
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,24,298,CRP,timeout,,,,2890.7256734371185
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,25,300,CRP,timeout,,,,2890.7275519371033
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,26,300,CRP,timeout,,,,2890.724860429764
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,27,300,CRP,timeout,,,,2890.724606990814
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,28,301,CRP,timeout,,,,2890.7249298095703
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,29,301,CRP,timeout,,,,2890.7259991168976
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,30,311,CRP,timeout,,,,2890.7256948947906
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,31,311,CRP,timeout,,,,2890.723528146744
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,32,312,CRP,timeout,,,,2890.7238907814026
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,33,312,CRP,timeout,,,,2890.7302656173706
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,34,314,CRP,timeout,,,,2890.725011110306
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,35,314,CRP,timeout,,,,2890.7250339984894
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,36,315,CRP,timeout,,,,2890.7250559329987
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,37,315,CRP,timeout,,,,2890.6802084445953
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,38,316,CRP,timeout,,,,2890.7249567508698
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,39,316,CRP,timeout,,,,2890.72469496727
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,40,317,CRP,timeout,,,,2890.719928264618
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,41,317,CRP,timeout,,,,2890.7256774902344
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,42,318,CRP,timeout,,,,2890.7251670360565
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,43,318,CRP,timeout,,,,2890.725396156311
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,44,319,CRP,timeout,,,,2890.725471496582
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,45,319,CRP,timeout,,,,2890.7248125076294
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,46,321,CRP,timeout,,,,2890.692958831787
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,47,321,CRP,timeout,,,,2890.725393295288
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,48,323,CRP,timeout,,,,2890.710876941681
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,49,323,CRP,timeout,,,,2890.7248327732086
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,50,324,CRP,timeout,,,,2890.7249784469604
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,51,324,CRP,timeout,,,,2890.7248334884644
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,52,325,CRP,timeout,,,,2890.725188732147
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,53,325,CRP,timeout,,,,2890.7245221138
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,54,326,CRP,timeout,,,,2890.7251813411713
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,55,326,CRP,timeout,,,,2890.724764108658
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,56,347,CRP,timeout,,,,2890.7249290943146
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,57,347,CRP,timeout,,,,2890.7249126434326
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,58,364,CRP,timeout,,,,2890.724862098694
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,59,364,CRP,timeout,,,,2890.7242171764374
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,60,413,CRP,timeout,,,,2890.7255482673645
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,61,413,CRP,timeout,,,,2890.725273132324
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,62,419,CRP,timeout,,,,2890.7256650924683
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,63,437,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 443, in _run\nKeyError: 'num_optimizer_evals'\n",1,0.6534328460693359
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,64,437,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 443, in _run\nKeyError: 'num_optimizer_evals'\n",1,0.3784294128417969
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,65,438,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 456, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 548, in get_optimal_cost\nKeyError: 'min_val'\n",1,0.39878010749816895
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,66,438,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 456, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 548, in get_optimal_cost\nKeyError: 'min_val'\n",1,0.38505125045776367
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,67,439,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 448, in _run\nKeyError: 'opt_params'\n",1,0.3802027702331543
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,68,439,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 448, in _run\nKeyError: 'opt_params'\n",1,0.3473982810974121
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,69,440,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 446, in _run\nKeyError: 'eval_time'\n",1,0.32747673988342285
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,70,440,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 446, in _run\nKeyError: 'eval_time'\n",1,0.33577871322631836
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,71,441,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 567, in get_optimal_vector\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 557, in get_optimal_circuit\nKeyError: 'opt_params_dict'\n",1,0.3553500175476074
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,72,441,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 567, in get_optimal_vector\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 557, in get_optimal_circuit\nKeyError: 'opt_params_dict'\n",1,0.3495659828186035
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,73,443,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 443, in _run\nKeyError: 'mutpy'\n",1,0.31729674339294434
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,74,443,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 443, in _run\nKeyError: ''\n",1,0.3278825283050537
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,75,444,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 444, in _run\nKeyError: 'mutpy'\n",1,0.34342336654663086
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,76,444,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 444, in _run\nKeyError: ''\n",1,0.5545988082885742
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,77,445,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 445, in _run\nKeyError: 'mutpy'\n",1,0.3255753517150879
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,78,445,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 445, in _run\nKeyError: ''\n",1,0.3520522117614746
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,79,446,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 446, in _run\nKeyError: 'mutpy'\n",1,0.3415234088897705
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,80,446,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 446, in _run\nKeyError: ''\n",1,0.3547649383544922
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,81,447,CRP,timeout,,,,2890.7256581783295
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,82,447,CRP,timeout,,,,2890.7292091846466
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,83,448,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 448, in _run\nKeyError: 'mutpy'\n",1,0.3919250965118408
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,84,448,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 448, in _run\nKeyError: ''\n",1,0.38414859771728516
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,85,449,CRP,timeout,,,,2890.7277953624725
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,86,449,CRP,timeout,,,,2890.7278752326965
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,87,453,CRP,killed,test_basic_aer_qasm (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqe.py"", line 148, in test_basic_aer_qasm\n    self.assertAlmostEqual(result.eigenvalue.real, -1.86823, places=2)\nAssertionError: -0.8658086799244691 != -1.86823 within 2 places (1.002421320075531 difference)\n",3,271.29176902770996
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,88,456,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 457, in _run\nKeyError: 'energy'\n",1,0.4232053756713867
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,89,456,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 457, in _run\nKeyError: 'energy'\n",1,0.5860030651092529
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,90,457,CRP,timeout,,,,2890.6797108650208
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,91,457,CRP,timeout,,,,2890.728768348694
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,92,457,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 457, in _run\nKeyError: 'mutpy'\n",1,0.38512349128723145
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,93,457,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 457, in _run\nKeyError: ''\n",1,0.3983578681945801
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,94,458,CRP,timeout,,,,2890.724156141281
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,95,458,CRP,timeout,,,,2890.724210500717
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,96,460,CRP,timeout,,,,2890.723783969879
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,97,463,CRP,timeout,,,,2890.724256515503
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,98,463,CRP,timeout,,,,2890.723958015442
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,99,463,CRP,timeout,,,,2890.7244675159454
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,100,403,CRP,timeout,,,,2890.7230529785156
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,101,403,CRP,timeout,,,,2890.724354982376
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,102,469,CRP,timeout,,,,2890.6929733753204
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,103,481,CRP,timeout,,,,2890.7236897945404
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,104,481,CRP,timeout,,,,2890.643044948578
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,105,485,CRP,timeout,,,,2890.723513364792
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,106,485,CRP,timeout,,,,2890.72402882576
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,107,485,CRP,timeout,,,,2890.7243428230286
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,108,485,CRP,timeout,,,,2890.7235312461853
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,109,516,CRP,killed,test_missing_varform_params (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqe.py"", line 124, in test_missing_varform_params\n    vqe.run(BasicAer.get_backend('statevector_simulator'))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 377, in _minimize_slsqp\n    bounds=new_bounds)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 519, in _energy_evaluation\n  File ""<__array_function__ internals>"", line 6, in reshape\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/core/fromnumeric.py"", line 299, in reshape\n    return _wrapfunc(a, 'reshape', newshape, order=order)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/core/fromnumeric.py"", line 58, in _wrapfunc\n    return bound(*args, **kwds)\nValueError: cannot reshape array of size 0 into shape (0)\n",12,364.99904012680054
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,110,517,CRP,timeout,,,,2890.692369222641
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,111,517,CRP,timeout,,,,2890.7269237041473
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,112,519,CRP,timeout,,,,2890.7257602214813
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,113,532,CRP,timeout,,,,2890.7275495529175
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,114,538,CRP,timeout,,,,2890.725908756256
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,115,538,CRP,timeout,,,,2890.7251772880554
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,116,539,CRP,timeout,,,,2890.72593998909
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,117,541,CRP,timeout,,,,2890.7253799438477
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,118,541,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 377, in _minimize_slsqp\n    bounds=new_bounds)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 541, in _energy_evaluation\nIndexError: index 1 is out of bounds for axis 0 with size 1\n",1,0.12096786499023438
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,119,545,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 456, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 546, in get_optimal_cost\nqiskit.aqua.aqua_error.AquaError: 'Cannot return optimal cost before running the algorithm to find optimal params.'\n",1,0.41671085357666016
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,120,545,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 456, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 546, in get_optimal_cost\nqiskit.aqua.aqua_error.AquaError: 'Cannot return optimal cost before running the algorithm to find optimal params.'\n",1,0.4108572006225586
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,121,546,CRP,timeout,,,,2890.7254989147186
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,122,546,CRP,timeout,,,,2890.725926399231
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,123,548,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 456, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 548, in get_optimal_cost\nKeyError: 'mutpy'\n",1,0.42072606086730957
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,124,548,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 456, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 548, in get_optimal_cost\nKeyError: ''\n",1,0.4304769039154053
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,125,552,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 567, in get_optimal_vector\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 553, in get_optimal_circuit\nqiskit.aqua.aqua_error.AquaError: 'Cannot find optimal circuit before running the algorithm to find optimal params.'\n",1,0.37693166732788086
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,126,552,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 567, in get_optimal_vector\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 553, in get_optimal_circuit\nqiskit.aqua.aqua_error.AquaError: 'Cannot find optimal circuit before running the algorithm to find optimal params.'\n",1,0.38127684593200684
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,127,553,CRP,timeout,,,,2890.728257894516
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,128,553,CRP,timeout,,,,2890.7286088466644
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,129,556,CRP,timeout,,,,2890.6550278663635
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,130,556,CRP,timeout,,,,2890.7294647693634
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,131,557,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 567, in get_optimal_vector\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 557, in get_optimal_circuit\nKeyError: 'mutpy'\n",1,0.3842463493347168
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,132,557,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 567, in get_optimal_vector\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 557, in get_optimal_circuit\nKeyError: ''\n",1,0.3906290531158447
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,133,564,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 565, in get_optimal_vector\nqiskit.aqua.aqua_error.AquaError: 'Cannot find optimal vector before running the algorithm to find optimal params.'\n",1,0.38144707679748535
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,134,564,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 565, in get_optimal_vector\nqiskit.aqua.aqua_error.AquaError: 'Cannot find optimal vector before running the algorithm to find optimal params.'\n",1,0.31704044342041016
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,135,565,CRP,timeout,,,,2890.7252497673035
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,136,565,CRP,timeout,,,,2890.7253997325897
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,137,570,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 579, in get_optimal_vector\nKeyError: 'min_vector'\n",1,0.4279294013977051
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,138,570,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 579, in get_optimal_vector\nKeyError: 'min_vector'\n",1,0.41149187088012695
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,139,572,CRP,timeout,,,,2890.7270584106445
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,140,572,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 345, in test_backend_change\n    result1 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 572, in get_optimal_vector\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",1,0.9722707271575928
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,141,573,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 345, in test_backend_change\n    result1 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 575, in get_optimal_vector\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2199, in barrier\n    return self.append(Barrier(len(qubits)), qubits, [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/blueprintcircuit.py"", line 116, in append\n    return super().append(instruction, qargs, cargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 940, in _bit_argument_conversion\n    type(bit_representation)))\nqiskit.circuit.exceptions.CircuitError: ""Not able to expand a None (<class 'NoneType'>)""\n",1,1.2833843231201172
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,142,573,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 345, in test_backend_change\n    result1 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 575, in get_optimal_vector\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 2199, in barrier\n    return self.append(Barrier(len(qubits)), qubits, [])\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/library/blueprintcircuit.py"", line 116, in append\n    return super().append(instruction, qargs, cargs)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in append\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 1008, in <listcomp>\n    expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 960, in qbit_argument_conversion\n    return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py"", line 940, in _bit_argument_conversion\n    type(bit_representation)))\nqiskit.circuit.exceptions.CircuitError: ""Not able to expand a None (<class 'NoneType'>)""\n",1,0.993304967880249
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,143,578,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 345, in test_backend_change\n    result1 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 579, in get_optimal_vector\nKeyError: 'min_vector'\n",1,1.126828908920288
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,144,578,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 345, in test_backend_change\n    result1 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 579, in get_optimal_vector\nKeyError: 'min_vector'\n",1,0.9816832542419434
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,145,579,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 579, in get_optimal_vector\nKeyError: 'mutpy'\n",1,0.39690566062927246
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,146,579,CRP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 579, in get_optimal_vector\nKeyError: ''\n",1,0.3488445281982422
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,147,584,CRP,timeout,,,,2890.7254106998444
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,148,584,CRP,timeout,,,,2890.72744679451
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,149,585,CRP,timeout,,,,2890.7254073619843
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,150,585,CRP,timeout,,,,2890.715695619583
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,151,586,CRP,timeout,,,,2890.631598711014
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,152,586,CRP,timeout,,,,2890.72607088089
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,153,595,CRP,survived,,,3,294.5690026283264
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,154,595,CRP,survived,,,3,289.50012850761414
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,155,600,CRP,survived,,,3,276.6896653175354
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,156,600,CRP,survived,,,3,293.93018412590027
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,157,603,CRP,timeout,,,,2890.7264540195465
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,158,603,CRP,timeout,,,,2890.7345638275146
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,159,604,CRP,timeout,,,,2890.7276542186737
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,160,604,CRP,timeout,,,,2890.7277805805206
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,161,606,CRP,timeout,,,,2890.727217435837
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,578.1224312782288,0.05266976356506348,0.7916731834411621,322680.91608834267,160.23767137527466,322841.99810266495,323421.8324985504,162,606,CRP,timeout,,,,2890.7271955013275
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,899.8807516098022,0.0568394660949707,0.10159826278686523,22499.334135055542,18.119693279266357,22517.61226606369,23419.87510085106,1,181,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,899.8807516098022,0.0568394660949707,0.10159826278686523,22499.334135055542,18.119693279266357,22517.61226606369,23419.87510085106,2,186,DDL,killed,test_backend_change_2_None (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 331, in test_backend_change\n    quantum_instance=BasicAer.get_backend('statevector_simulator'))\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 168, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 73, in __init__\n    super().__init__(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 41, in __init__\n    self.quantum_instance = quantum_instance\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 221, in quantum_instance\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 202, in _try_set_expectation_value_from_factory\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/expectations/expectation_factory.py"", line 68, in build\n    primitives = operator.primitive_strings()\nAttributeError: 'function' object has no attribute 'primitive_strings'\n",2,1.4672868251800537
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,899.8807516098022,0.0568394660949707,0.10159826278686523,22499.334135055542,18.119693279266357,22517.61226606369,23419.87510085106,3,209,DDL,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 417, in _run\nAttributeError: 'NoneType' object has no attribute 'circuit_summary'\n",1,0.06425142288208008
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,899.8807516098022,0.0568394660949707,0.10159826278686523,22499.334135055542,18.119693279266357,22517.61226606369,23419.87510085106,4,223,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,899.8807516098022,0.0568394660949707,0.10159826278686523,22499.334135055542,18.119693279266357,22517.61226606369,23419.87510085106,5,229,DDL,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 377, in _minimize_slsqp\n    bounds=new_bounds)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 513, in _energy_evaluation\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 368, in construct_expectation\nAttributeError: 'function' object has no attribute 'convert'\n",1,0.09972333908081055
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,899.8807516098022,0.0568394660949707,0.10159826278686523,22499.334135055542,18.119693279266357,22517.61226606369,23419.87510085106,6,234,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,899.8807516098022,0.0568394660949707,0.10159826278686523,22499.334135055542,18.119693279266357,22517.61226606369,23419.87510085106,7,239,DDL,timeout,,,,4499.523692846298
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,899.8807516098022,0.0568394660949707,0.10159826278686523,22499.334135055542,18.119693279266357,22517.61226606369,23419.87510085106,8,283,DDL,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 189, in find_minimum\n    if optimizer.is_bounds_required:\nAttributeError: 'function' object has no attribute 'is_bounds_required'\n",1,0.11807680130004883
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,899.8807516098022,0.0568394660949707,0.10159826278686523,22499.334135055542,18.119693279266357,22517.61226606369,23419.87510085106,9,290,DDL,timeout,,,,4499.465139627457
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,899.8807516098022,0.0568394660949707,0.10159826278686523,22499.334135055542,18.119693279266357,22517.61226606369,23419.87510085106,10,399,DDL,timeout,,,,4499.5223734378815
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,899.8807516098022,0.0568394660949707,0.10159826278686523,22499.334135055542,18.119693279266357,22517.61226606369,23419.87510085106,11,581,DDL,timeout,,,,4499.523142814636
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,899.8807516098022,0.0568394660949707,0.10159826278686523,22499.334135055542,18.119693279266357,22517.61226606369,23419.87510085106,12,592,DDL,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,899.8807516098022,0.0568394660949707,0.10159826278686523,22499.334135055542,18.119693279266357,22517.61226606369,23419.87510085106,13,597,DDL,timeout,,,,4499.532046318054
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1003.5702781677246,0.05455923080444336,0.006177663803100586,5017.933737039566,1.5419914722442627,5019.536465406418,6026.2997879981995,1,610,EHD,timeout,,,,5017.932230234146
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1034.4790844917297,0.07146120071411133,0.019008159637451172,10344.977732419968,3.353001594543457,10348.421203374863,11385.299316167831,1,278,EXS,timeout,,,,5172.513000965118
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1034.4790844917297,0.07146120071411133,0.019008159637451172,10344.977732419968,3.353001594543457,10348.421203374863,11385.299316167831,2,610,EXS,timeout,,,,5172.459236860275
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,975.0792455673218,0.06734800338745117,NA,NA,NA,0.2763400077819824,978.5555546283722,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,815.751238822937,0.08135390281677246,0.10923480987548828,40788.78108596802,19.1086585521698,40808.08033323288,41626.274159669876,1,90,IOD,timeout,,,,4078.8758893013
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,815.751238822937,0.08135390281677246,0.10923480987548828,40788.78108596802,19.1086585521698,40808.08033323288,41626.274159669876,2,181,IOD,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,815.751238822937,0.08135390281677246,0.10923480987548828,40788.78108596802,19.1086585521698,40808.08033323288,41626.274159669876,3,186,IOD,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 331, in test_backend_change\n    quantum_instance=BasicAer.get_backend('statevector_simulator'))\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 175, in __init__\nAttributeError: can't set attribute\n",1,0.05601811408996582
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,815.751238822937,0.08135390281677246,0.10923480987548828,40788.78108596802,19.1086585521698,40808.08033323288,41626.274159669876,4,209,IOD,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 377, in _minimize_slsqp\n    bounds=new_bounds)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 525, in _energy_evaluation\nAttributeError: 'NoneType' object has no attribute 'convert'\n",1,0.10174083709716797
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,815.751238822937,0.08135390281677246,0.10923480987548828,40788.78108596802,19.1086585521698,40808.08033323288,41626.274159669876,5,234,IOD,incompetent,,,0,0
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,815.751238822937,0.08135390281677246,0.10923480987548828,40788.78108596802,19.1086585521698,40808.08033323288,41626.274159669876,6,239,IOD,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 331, in test_backend_change\n    quantum_instance=BasicAer.get_backend('statevector_simulator'))\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 176, in __init__\nAttributeError: can't set attribute\n",1,0.06002688407897949
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,815.751238822937,0.08135390281677246,0.10923480987548828,40788.78108596802,19.1086585521698,40808.08033323288,41626.274159669876,7,283,IOD,timeout,,,,4078.7958166599274
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,815.751238822937,0.08135390281677246,0.10923480987548828,40788.78108596802,19.1086585521698,40808.08033323288,41626.274159669876,8,399,IOD,timeout,,,,4078.880166530609
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,815.751238822937,0.08135390281677246,0.10923480987548828,40788.78108596802,19.1086585521698,40808.08033323288,41626.274159669876,9,403,IOD,timeout,,,,4078.880759716034
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,815.751238822937,0.08135390281677246,0.10923480987548828,40788.78108596802,19.1086585521698,40808.08033323288,41626.274159669876,10,487,IOD,timeout,,,,4078.84792304039
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,815.751238822937,0.08135390281677246,0.10923480987548828,40788.78108596802,19.1086585521698,40808.08033323288,41626.274159669876,11,543,IOD,timeout,,,,4078.8436801433563
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,815.751238822937,0.08135390281677246,0.10923480987548828,40788.78108596802,19.1086585521698,40808.08033323288,41626.274159669876,12,550,IOD,timeout,,,,4078.8691642284393
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,815.751238822937,0.08135390281677246,0.10923480987548828,40788.78108596802,19.1086585521698,40808.08033323288,41626.274159669876,13,559,IOD,timeout,,,,4078.808907032013
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,815.751238822937,0.08135390281677246,0.10923480987548828,40788.78108596802,19.1086585521698,40808.08033323288,41626.274159669876,14,581,IOD,timeout,,,,4078.8679735660553
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,815.751238822937,0.08135390281677246,0.10923480987548828,40788.78108596802,19.1086585521698,40808.08033323288,41626.274159669876,15,602,IOD,timeout,,,,4078.866594552994
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,877.1905617713928,0.05618929862976074,0.018634557723999023,685.2170960903168,3.0065207481384277,688.298440694809,1567.7522239685059,1,90,IOP,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 331, in test_backend_change\n    quantum_instance=BasicAer.get_backend('statevector_simulator'))\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 143, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 73, in __init__\n    super().__init__(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 41, in __init__\n    self.quantum_instance = quantum_instance\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 220, in quantum_instance\nAttributeError: 'VQE' object has no attribute '_user_valid_expectation'\n",1,0.04832720756530762
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,877.1905617713928,0.05618929862976074,0.018634557723999023,685.2170960903168,3.0065207481384277,688.298440694809,1567.7522239685059,2,487,IOP,survived,,,12,685.1633260250092
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,988.8354094028473,0.07034635543823242,0.04730033874511719,15367.12378334999,6.832212209701538,15374.073642253876,16365.59941315651,1,152,LCR,killed,test_circuit_input (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""./test/aqua/test_vqe.py"", line 84, in test_circuit_input\n    vqe = VQE(self.h2_op, wavefunction, optimizer=optimizer)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 153, in __init__\nAttributeError: 'QuantumCircuit' object has no attribute 'preferred_init_points'\n",6,532.1146268844604
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,988.8354094028473,0.07034635543823242,0.04730033874511719,15367.12378334999,6.832212209701538,15374.073642253876,16365.59941315651,2,199,LCR,killed,test_backend_change_2_None (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 331, in test_backend_change\n    quantum_instance=BasicAer.get_backend('statevector_simulator'))\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 168, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 73, in __init__\n    super().__init__(quantum_instance)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 41, in __init__\n    self.quantum_instance = quantum_instance\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 221, in quantum_instance\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 202, in _try_set_expectation_value_from_factory\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/expectations/expectation_factory.py"", line 68, in build\n    primitives = operator.primitive_strings()\nAttributeError: 'NoneType' object has no attribute 'primitive_strings'\n",2,2.095109462738037
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,988.8354094028473,0.07034635543823242,0.04730033874511719,15367.12378334999,6.832212209701538,15374.073642253876,16365.59941315651,3,272,LCR,timeout,,,,4944.294306755066
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,988.8354094028473,0.07034635543823242,0.04730033874511719,15367.12378334999,6.832212209701538,15374.073642253876,16365.59941315651,4,297,LCR,timeout,,,,4944.3116364479065
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,988.8354094028473,0.07034635543823242,0.04730033874511719,15367.12378334999,6.832212209701538,15374.073642253876,16365.59941315651,5,443,LCR,timeout,,,,4944.297184705734
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,984.1764669418335,0.06548619270324707,0.009990215301513672,4921.007244110107,1.7505474090576172,4922.83326792717,5909.654422998428,1,426,LOD,timeout,,,,4921.00436258316
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,998.731770992279,0.07499289512634277,NA,NA,NA,0.28305482864379883,1001.7822771072388,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,916.3316240310669,0.07004690170288086,0.09142231941223145,36997.65452027321,16.15171241760254,37013.967701911926,37932.57376623154,1,266,ROR,timeout,,,,4581.7705318927765
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,916.3316240310669,0.07004690170288086,0.09142231941223145,36997.65452027321,16.15171241760254,37013.967701911926,37932.57376623154,2,273,ROR,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 377, in _minimize_slsqp\n    bounds=new_bounds)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 513, in _energy_evaluation\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 370, in construct_expectation\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/state_fn.py"", line 263, in compose\n    new_self, other = self._expand_shorter_operator_and_permute(other, permutation)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/state_fn.py"", line 220, in _expand_shorter_operator_and_permute\n    return super()._expand_shorter_operator_and_permute(other, permutation)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/operator_base.py"", line 552, in _expand_shorter_operator_and_permute\n    other = other._expand_dim(self.num_qubits - other.num_qubits)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/circuit_state_fn.py"", line 350, in _expand_dim\n    return self.permute(list(range(num_qubits, num_qubits + self.num_qubits)))\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/circuit_state_fn.py"", line 363, in permute\n    new_qc = QuantumCircuit(max(permutation) + 1).compose(self.primitive, qubits=permutation)\nValueError: max() arg is an empty sequence\n",1,0.12690997123718262
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,916.3316240310669,0.07004690170288086,0.09142231941223145,36997.65452027321,16.15171241760254,37013.967701911926,37932.57376623154,3,296,ROR,timeout,,,,4581.779014348984
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,916.3316240310669,0.07004690170288086,0.09142231941223145,36997.65452027321,16.15171241760254,37013.967701911926,37932.57376623154,4,444,ROR,timeout,,,,4581.777621269226
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,916.3316240310669,0.07004690170288086,0.09142231941223145,36997.65452027321,16.15171241760254,37013.967701911926,37932.57376623154,5,444,ROR,timeout,,,,4581.773728609085
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,916.3316240310669,0.07004690170288086,0.09142231941223145,36997.65452027321,16.15171241760254,37013.967701911926,37932.57376623154,6,460,ROR,timeout,,,,4581.770067453384
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,916.3316240310669,0.07004690170288086,0.09142231941223145,36997.65452027321,16.15171241760254,37013.967701911926,37932.57376623154,7,460,ROR,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 461, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 475, in _eval_aux_ops\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/state_fn.py"", line 263, in compose\n    new_self, other = self._expand_shorter_operator_and_permute(other, permutation)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/state_fn.py"", line 220, in _expand_shorter_operator_and_permute\n    return super()._expand_shorter_operator_and_permute(other, permutation)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/operator_base.py"", line 545, in _expand_shorter_operator_and_permute\n    if not self.num_qubits == other.num_qubits:\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/state_fns/operator_state_fn.py"", line 55, in num_qubits\n    return self.primitive.num_qubits\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/operators/list_ops/list_op.py"", line 155, in num_qubits\n    num_qubits0 = self.oplist[0].num_qubits\nIndexError: list index out of range\n",1,0.47520947456359863
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,916.3316240310669,0.07004690170288086,0.09142231941223145,36997.65452027321,16.15171241760254,37013.967701911926,37932.57376623154,8,479,ROR,timeout,,,,4581.773334741592
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,916.3316240310669,0.07004690170288086,0.09142231941223145,36997.65452027321,16.15171241760254,37013.967701911926,37932.57376623154,9,479,ROR,timeout,,,,4581.774904489517
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,916.3316240310669,0.07004690170288086,0.09142231941223145,36997.65452027321,16.15171241760254,37013.967701911926,37932.57376623154,10,516,ROR,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 377, in _minimize_slsqp\n    bounds=new_bounds)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/optimize.py"", line 262, in _prepare_scalar_function\n    finite_diff_rel_step, bounds, epsilon=epsilon)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 136, in __init__\n    self._update_fun()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 226, in _update_fun\n    self._update_fun_impl()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 133, in update_fun\n    self.f = fun_wrapped(self.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py"", line 130, in fun_wrapped\n    return fun(x, *args)\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 517, in _energy_evaluation\nRuntimeError: The var_form cannot have 0 parameters.\n",1,0.10015869140625
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,916.3316240310669,0.07004690170288086,0.09142231941223145,36997.65452027321,16.15171241760254,37013.967701911926,37932.57376623154,11,541,ROR,killed,test_max_evals_grouped_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 136, in test_max_evals_grouped\n    result = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 433, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 217, in find_minimum\n    gradient_function=gradient_fn)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/components/optimizers/slsqp.py"", line 85, in optimize\n    options=self._options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/_minimize.py"", line 628, in minimize\n    constraints, callback=callback, **options)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/scipy/optimize/slsqp.py"", line 430, in _minimize_slsqp\n    n1, n2, n3)\nValueError: 0-th dimension must be fixed to 17 but got 5\n\n",10,341.5678663253784
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,916.3316240310669,0.07004690170288086,0.09142231941223145,36997.65452027321,16.15171241760254,37013.967701911926,37932.57376623154,12,541,ROR,timeout,,,,4581.7427451610565
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,916.3316240310669,0.07004690170288086,0.09142231941223145,36997.65452027321,16.15171241760254,37013.967701911926,37932.57376623154,13,603,ROR,survived,,,0,1.198786735534668
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1099.7897939682007,0.06504964828491211,0.017092466354370117,884.7157852649689,3.288431167602539,888.0863585472107,1990.3748614788055,1,90,SCD,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 331, in test_backend_change\n    quantum_instance=BasicAer.get_backend('statevector_simulator'))\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 171, in __init__\nAttributeError: 'VQE' object has no attribute '_optimizer'\n",1,0.05178499221801758
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1099.7897939682007,0.06504964828491211,0.017092466354370117,884.7157852649689,3.288431167602539,888.0863585472107,1990.3748614788055,2,487,SCD,survived,,,12,884.6600584983826
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1136.5200154781342,0.14871788024902344,0.13470673561096191,23540.349234580994,18.91227912902832,23559.544938325882,24699.103175878525,1,181,SCI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 331, in test_backend_change\n    quantum_instance=BasicAer.get_backend('statevector_simulator'))\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 175, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 193, in operator\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 272, in _check_operator_varform\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 183, in operator\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/minimum_eigen_solvers/minimum_eigen_solver.py"", line 83, in operator\n    raise NotImplementedError\nNotImplementedError\n",1,0.1220099925994873
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1136.5200154781342,0.14871788024902344,0.13470673561096191,23540.349234580994,18.91227912902832,23559.544938325882,24699.103175878525,2,186,SCI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 331, in test_backend_change\n    quantum_instance=BasicAer.get_backend('statevector_simulator'))\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 175, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 188, in operator\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/minimum_eigen_solvers/minimum_eigen_solver.py"", line 83, in operator\n    raise NotImplementedError\nNotImplementedError\n",1,0.068511962890625
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1136.5200154781342,0.14871788024902344,0.13470673561096191,23540.349234580994,18.91227912902832,23559.544938325882,24699.103175878525,3,209,SCI,timeout,,,,5682.719118356705
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1136.5200154781342,0.14871788024902344,0.13470673561096191,23540.349234580994,18.91227912902832,23559.544938325882,24699.103175878525,4,234,SCI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 460, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 236, in aux_operators\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/minimum_eigen_solvers/minimum_eigen_solver.py"", line 95, in aux_operators\n    raise NotImplementedError\nNotImplementedError\n",1,0.7512845993041992
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1136.5200154781342,0.14871788024902344,0.13470673561096191,23540.349234580994,18.91227912902832,23559.544938325882,24699.103175878525,5,239,SCI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 331, in test_backend_change\n    quantum_instance=BasicAer.get_backend('statevector_simulator'))\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 176, in __init__\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 246, in aux_operators\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/minimum_eigen_solvers/minimum_eigen_solver.py"", line 95, in aux_operators\n    raise NotImplementedError\nNotImplementedError\n",1,0.07074356079101562
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1136.5200154781342,0.14871788024902344,0.13470673561096191,23540.349234580994,18.91227912902832,23559.544938325882,24699.103175878525,6,283,SCI,survived,,,14,807.0375349521637
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1136.5200154781342,0.14871788024902344,0.13470673561096191,23540.349234580994,18.91227912902832,23559.544938325882,24699.103175878525,7,399,SCI,timeout,,,,5682.722776651382
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1136.5200154781342,0.14871788024902344,0.13470673561096191,23540.349234580994,18.91227912902832,23559.544938325882,24699.103175878525,8,403,SCI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 411, in _run\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 75, in _run\n    raise NotImplementedError()\nNotImplementedError\n",1,0.07954263687133789
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1136.5200154781342,0.14871788024902344,0.13470673561096191,23540.349234580994,18.91227912902832,23559.544938325882,24699.103175878525,9,543,SCI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 456, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 544, in get_optimal_cost\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 261, in get_optimal_cost\n    raise NotImplementedError()\nNotImplementedError\n",1,0.46565937995910645
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1136.5200154781342,0.14871788024902344,0.13470673561096191,23540.349234580994,18.91227912902832,23559.544938325882,24699.103175878525,10,550,SCI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 567, in get_optimal_vector\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 551, in get_optimal_circuit\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 266, in get_optimal_circuit\n    raise NotImplementedError()\nNotImplementedError\n",1,0.40944981575012207
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1136.5200154781342,0.14871788024902344,0.13470673561096191,23540.349234580994,18.91227912902832,23559.544938325882,24699.103175878525,11,559,SCI,killed,test_backend_change_1 (test.aqua.test_vqe.TestVQE),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/aqua/test_vqe.py"", line 332, in test_backend_change\n    result0 = vqe.run()\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/quantum_algorithm.py"", line 71, in run\n    return self._run()\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 454, in _run\n  File ""qiskit.aqua.algorithms.minimum_eigen_solvers.vqe"", line 560, in get_optimal_vector\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/algorithms/vq_algorithm.py"", line 271, in get_optimal_vector\n    raise NotImplementedError()\nNotImplementedError\n",1,0.4365401268005371
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1136.5200154781342,0.14871788024902344,0.13470673561096191,23540.349234580994,18.91227912902832,23559.544938325882,24699.103175878525,12,581,SCI,timeout,,,,5682.717177867889
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1136.5200154781342,0.14871788024902344,0.13470673561096191,23540.349234580994,18.91227912902832,23559.544938325882,24699.103175878525,13,602,SCI,timeout,,,,5682.715960979462
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1186.5777006149292,0.10798907279968262,0.01639103889465332,11865.9390707016,3.2041845321655273,11869.267635345459,13059.470460653305,1,298,SIR,timeout,,,,5933.010198831558
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1186.5777006149292,0.10798907279968262,0.01639103889465332,11865.9390707016,3.2041845321655273,11869.267635345459,13059.470460653305,2,300,SIR,timeout,,,,5932.9251708984375
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1305.9897503852844,0.07303881645202637,NA,NA,NA,11.558703422546387,1321.1727657318115,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1023.9269666671753,0.07530689239501953,NA,NA,NA,848.2142128944397,1875.3527030944824,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1072.9893839359283,0.09424495697021484,NA,NA,NA,734.4314980506897,1809.745273590088,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1090.9658579826355,0.06835222244262695,0.016399145126342773,5454.961281299591,2.004110097885132,5457.050142765045,6551.006570339203,1,576,QMD,timeout,,,,5454.957402944565
qiskit.aqua.algorithms.minimum_eigen_solvers.vqe,test.aqua.test_vqe,19,1029.1186242103577,0.07219600677490234,NA,NA,NA,27.525604486465454,1059.6865105628967,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.31215071678162,0.030954360961914062,0.017906665802001953,1355.0884113311768,1.7697932720184326,1356.907065629959,1450.3617379665375,1,98,AOD,timeout,,,,451.6912078857422
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.31215071678162,0.030954360961914062,0.017906665802001953,1355.0884113311768,1.7697932720184326,1356.907065629959,1450.3617379665375,2,132,AOD,timeout,,,,451.69783997535706
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.31215071678162,0.030954360961914062,0.017906665802001953,1355.0884113311768,1.7697932720184326,1356.907065629959,1450.3617379665375,3,132,AOD,timeout,,,,451.6914565563202
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,97.32468390464783,0.0362703800201416,0.07391858100891113,5840.70125412941,6.687441825866699,5847.4988849163055,5948.873519420624,1,98,AOR,timeout,,,,486.70333313941956
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,97.32468390464783,0.0362703800201416,0.07391858100891113,5840.70125412941,6.687441825866699,5847.4988849163055,5948.873519420624,2,98,AOR,timeout,,,,486.74660778045654
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,97.32468390464783,0.0362703800201416,0.07391858100891113,5840.70125412941,6.687441825866699,5847.4988849163055,5948.873519420624,3,98,AOR,timeout,,,,486.7965326309204
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,97.32468390464783,0.0362703800201416,0.07391858100891113,5840.70125412941,6.687441825866699,5847.4988849163055,5948.873519420624,4,98,AOR,timeout,,,,486.75212955474854
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,97.32468390464783,0.0362703800201416,0.07391858100891113,5840.70125412941,6.687441825866699,5847.4988849163055,5948.873519420624,5,101,AOR,timeout,,,,486.752322435379
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,97.32468390464783,0.0362703800201416,0.07391858100891113,5840.70125412941,6.687441825866699,5847.4988849163055,5948.873519420624,6,101,AOR,timeout,,,,486.7428765296936
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,97.32468390464783,0.0362703800201416,0.07391858100891113,5840.70125412941,6.687441825866699,5847.4988849163055,5948.873519420624,7,101,AOR,timeout,,,,486.6846454143524
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,97.32468390464783,0.0362703800201416,0.07391858100891113,5840.70125412941,6.687441825866699,5847.4988849163055,5948.873519420624,8,101,AOR,timeout,,,,486.74769401550293
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,97.32468390464783,0.0362703800201416,0.07391858100891113,5840.70125412941,6.687441825866699,5847.4988849163055,5948.873519420624,9,101,AOR,timeout,,,,486.7509949207306
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,97.32468390464783,0.0362703800201416,0.07391858100891113,5840.70125412941,6.687441825866699,5847.4988849163055,5948.873519420624,10,101,AOR,timeout,,,,486.6582236289978
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,97.32468390464783,0.0362703800201416,0.07391858100891113,5840.70125412941,6.687441825866699,5847.4988849163055,5948.873519420624,11,132,AOR,timeout,,,,486.6593873500824
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,97.32468390464783,0.0362703800201416,0.07391858100891113,5840.70125412941,6.687441825866699,5847.4988849163055,5948.873519420624,12,132,AOR,timeout,,,,486.6695168018341
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,115.10583567619324,0.045011281967163086,0.028672456741333008,2302.581238269806,1.9441463947296143,2304.599068403244,2424.7016365528107,1,176,ASR,timeout,,,,575.5905110836029
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,115.10583567619324,0.045011281967163086,0.028672456741333008,2302.581238269806,1.9441463947296143,2304.599068403244,2424.7016365528107,2,189,ASR,timeout,,,,575.6661756038666
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,115.10583567619324,0.045011281967163086,0.028672456741333008,2302.581238269806,1.9441463947296143,2304.599068403244,2424.7016365528107,3,191,ASR,timeout,,,,575.6604506969452
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,115.10583567619324,0.045011281967163086,0.028672456741333008,2302.581238269806,1.9441463947296143,2304.599068403244,2424.7016365528107,4,193,ASR,timeout,,,,575.6505837440491
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,109.38395237922668,0.042063236236572266,0.020270109176635742,1094.1104865074158,1.1388022899627686,1095.3116221427917,1209.4984328746796,1,200,BCR,timeout,,,,547.0754661560059
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,109.38395237922668,0.042063236236572266,0.020270109176635742,1094.1104865074158,1.1388022899627686,1095.3116221427917,1209.4984328746796,2,206,BCR,timeout,,,,547.0205578804016
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,103.59312582015991,0.029529333114624023,0.008474349975585938,1036.0956943035126,0.9683430194854736,1037.1020410060883,1145.2395775318146,1,160,COD,timeout,,,,518.098819732666
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,103.59312582015991,0.029529333114624023,0.008474349975585938,1036.0956943035126,0.9683430194854736,1037.1020410060883,1145.2395775318146,2,162,COD,timeout,,,,517.9934973716736
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,78.08008098602295,0.025331735610961914,0.05806374549865723,4295.756886005402,5.738124370574951,4301.578405857086,4383.06302857399,1,160,COI,timeout,,,,390.52869033813477
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,78.08008098602295,0.025331735610961914,0.05806374549865723,4295.756886005402,5.738124370574951,4301.578405857086,4383.06302857399,2,162,COI,timeout,,,,390.602392911911
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,78.08008098602295,0.025331735610961914,0.05806374549865723,4295.756886005402,5.738124370574951,4301.578405857086,4383.06302857399,3,175,COI,timeout,,,,390.52079129219055
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,78.08008098602295,0.025331735610961914,0.05806374549865723,4295.756886005402,5.738124370574951,4301.578405857086,4383.06302857399,4,187,COI,timeout,,,,390.52478861808777
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,78.08008098602295,0.025331735610961914,0.05806374549865723,4295.756886005402,5.738124370574951,4301.578405857086,4383.06302857399,5,192,COI,timeout,,,,390.4558598995209
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,78.08008098602295,0.025331735610961914,0.05806374549865723,4295.756886005402,5.738124370574951,4301.578405857086,4383.06302857399,6,195,COI,timeout,,,,390.52181100845337
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,78.08008098602295,0.025331735610961914,0.05806374549865723,4295.756886005402,5.738124370574951,4301.578405857086,4383.06302857399,7,202,COI,timeout,,,,390.48408937454224
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,78.08008098602295,0.025331735610961914,0.05806374549865723,4295.756886005402,5.738124370574951,4301.578405857086,4383.06302857399,8,221,COI,timeout,,,,390.51820397377014
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,78.08008098602295,0.025331735610961914,0.05806374549865723,4295.756886005402,5.738124370574951,4301.578405857086,4383.06302857399,9,227,COI,timeout,,,,390.5245771408081
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,78.08008098602295,0.025331735610961914,0.05806374549865723,4295.756886005402,5.738124370574951,4301.578405857086,4383.06302857399,10,229,COI,timeout,,,,390.5287582874298
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,78.08008098602295,0.025331735610961914,0.05806374549865723,4295.756886005402,5.738124370574951,4301.578405857086,4383.06302857399,11,231,COI,timeout,,,,390.52072310447693
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,1,44,CRP,timeout,,,,453.3327887058258
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,2,45,CRP,timeout,,,,453.35925459861755
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,3,57,CRP,timeout,,,,453.3689670562744
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,4,57,CRP,timeout,,,,453.38874101638794
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,5,57,CRP,killed,test_aux_ops_reusability (test.chemistry.test_adapt_vqe.TestAdaptVQE),"Traceback (most recent call last):\n  File ""./test/chemistry/test_adapt_vqe.py"", line 62, in test_aux_ops_reusability\n    calc = AdaptVQE(self.transformation, solver)\n  File ""qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe"", line 57, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 43, in validate_min\n    raise ValueError('{} must have value >= {}, was {}'.format(name, minimum, value))\nValueError: threshold must have value >= 1.000000000000001, was 1e-05\n",1,0.1311943531036377
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,6,58,CRP,timeout,,,,453.3702826499939
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,7,58,CRP,timeout,,,,453.41824102401733
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,8,58,CRP,killed,test_aux_ops_reusability (test.chemistry.test_adapt_vqe.TestAdaptVQE),"Traceback (most recent call last):\n  File ""./test/chemistry/test_adapt_vqe.py"", line 62, in test_aux_ops_reusability\n    calc = AdaptVQE(self.transformation, solver)\n  File ""qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe"", line 58, in __init__\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/validation.py"", line 43, in validate_min\n    raise ValueError('{} must have value >= {}, was {}'.format(name, minimum, value))\nValueError: delta must have value >= 1.00001, was 1\n",1,0.09583568572998047
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,9,101,CRP,timeout,,,,453.44520139694214
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,10,101,CRP,timeout,,,,453.3150465488434
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,11,101,CRP,timeout,,,,453.4231197834015
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,12,118,CRP,timeout,,,,453.41588497161865
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,13,118,CRP,timeout,,,,453.4133622646332
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,14,126,CRP,timeout,,,,453.3525094985962
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,15,126,CRP,timeout,,,,453.41706109046936
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,16,127,CRP,timeout,,,,453.3825445175171
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,17,127,CRP,timeout,,,,453.3765654563904
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,18,132,CRP,timeout,,,,453.4161288738251
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,19,132,CRP,timeout,,,,453.32583141326904
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,20,132,CRP,timeout,,,,453.3187208175659
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,21,161,CRP,timeout,,,,453.42562770843506
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,22,161,CRP,timeout,,,,453.37757205963135
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,23,163,CRP,timeout,,,,453.3809702396393
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,24,163,CRP,timeout,,,,453.32558012008667
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,25,173,CRP,timeout,,,,453.42369961738586
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,26,174,CRP,timeout,,,,453.3724913597107
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,27,176,CRP,timeout,,,,453.33922719955444
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,28,177,CRP,timeout,,,,453.41684222221375
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,29,177,CRP,timeout,,,,453.34298396110535
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,30,183,CRP,timeout,,,,453.3547821044922
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,31,183,CRP,timeout,,,,453.42195677757263
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,32,188,CRP,timeout,,,,453.4210865497589
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,33,188,CRP,timeout,,,,453.4165301322937
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,34,189,CRP,timeout,,,,453.32950735092163
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,35,189,CRP,timeout,,,,453.40847659111023
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,36,191,CRP,timeout,,,,453.4179675579071
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,37,191,CRP,timeout,,,,453.4129192829132
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,38,191,CRP,timeout,,,,453.41425943374634
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,39,191,CRP,timeout,,,,453.3611385822296
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,40,192,CRP,timeout,,,,453.35651779174805
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,41,192,CRP,timeout,,,,453.3429877758026
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,42,193,CRP,timeout,,,,453.33177423477173
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,43,193,CRP,timeout,,,,453.3286988735199
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,44,195,CRP,timeout,,,,453.4124574661255
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,45,196,CRP,timeout,,,,453.3545997142792
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,46,196,CRP,timeout,,,,453.4211404323578
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,47,198,CRP,timeout,,,,453.5118339061737
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,48,203,CRP,timeout,,,,453.41718673706055
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,49,203,CRP,timeout,,,,453.41737270355225
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,50,204,CRP,timeout,,,,453.4302933216095
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,51,204,CRP,timeout,,,,453.4231734275818
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,52,204,CRP,timeout,,,,453.413361787796
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,53,208,CRP,timeout,,,,453.41722416877747
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,54,209,CRP,timeout,,,,453.37423634529114
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,55,217,CRP,timeout,,,,453.41559171676636
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,56,217,CRP,timeout,,,,453.43399930000305
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,57,218,CRP,timeout,,,,453.42105317115784
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,58,218,CRP,timeout,,,,453.39397978782654
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,59,218,CRP,timeout,,,,453.41801285743713
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,60,228,CRP,timeout,,,,453.41319704055786
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,61,228,CRP,timeout,,,,453.35160732269287
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,62,230,CRP,timeout,,,,453.3915514945984
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,63,230,CRP,timeout,,,,453.4243938922882
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,64,232,CRP,timeout,,,,453.4108245372772
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,65,232,CRP,timeout,,,,453.41511154174805
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,66,234,CRP,timeout,,,,453.3198826313019
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,67,234,CRP,timeout,,,,453.4122266769409
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,68,240,CRP,timeout,,,,453.4102509021759
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,69,243,CRP,timeout,,,,453.4092664718628
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,70,243,CRP,timeout,,,,453.4089677333832
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,71,243,CRP,timeout,,,,453.4111080169678
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,72,253,CRP,timeout,,,,453.32990026474
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,73,253,CRP,timeout,,,,453.40813660621643
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,74,258,CRP,timeout,,,,453.4091286659241
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,75,258,CRP,timeout,,,,453.40910482406616
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,76,263,CRP,timeout,,,,453.31566882133484
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,77,263,CRP,timeout,,,,453.408353805542
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,78,268,CRP,timeout,,,,453.3252444267273
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,79,268,CRP,timeout,,,,453.4072346687317
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,80,273,CRP,timeout,,,,453.4083878993988
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,81,273,CRP,timeout,,,,453.40744042396545
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,82,278,CRP,timeout,,,,453.3129165172577
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,90.65920233726501,0.032591819763183594,0.3618123531341553,36724.874839782715,36.11792755126953,36761.38717150688,36856.18050479889,83,278,CRP,timeout,,,,453.3308172225952
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,61.392284870147705,0.03032231330871582,0.024042129516601562,1228.3268253803253,2.8302786350250244,1231.2114684581757,1295.1331419944763,1,108,DDL,timeout,,,,307.0784978866577
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,61.392284870147705,0.03032231330871582,0.024042129516601562,1228.3268253803253,2.8302786350250244,1231.2114684581757,1295.1331419944763,2,250,DDL,incompetent,,,0,0
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,61.392284870147705,0.03032231330871582,0.024042129516601562,1228.3268253803253,2.8302786350250244,1231.2114684581757,1295.1331419944763,3,255,DDL,timeout,,,,307.0774939060211
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,61.392284870147705,0.03032231330871582,0.024042129516601562,1228.3268253803253,2.8302786350250244,1231.2114684581757,1295.1331419944763,4,260,DDL,incompetent,,,0,0
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,61.392284870147705,0.03032231330871582,0.024042129516601562,1228.3268253803253,2.8302786350250244,1231.2114684581757,1295.1331419944763,5,265,DDL,timeout,,,,307.07669162750244
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,61.392284870147705,0.03032231330871582,0.024042129516601562,1228.3268253803253,2.8302786350250244,1231.2114684581757,1295.1331419944763,6,270,DDL,incompetent,,,0,0
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,61.392284870147705,0.03032231330871582,0.024042129516601562,1228.3268253803253,2.8302786350250244,1231.2114684581757,1295.1331419944763,7,275,DDL,timeout,,,,307.0881028175354
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,68.70884966850281,0.026625633239746094,NA,NA,NA,0.1582777500152588,71.94647026062012,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,71.22143220901489,0.028740406036376953,NA,NA,NA,0.14871859550476074,74.35319828987122,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,81.8581817150116,0.027565956115722656,NA,NA,NA,0.11724591255187988,85.2183780670166,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,62.139946699142456,0.02621316909790039,0.009634256362915039,932.3807139396667,0.9654438495635986,933.3820052146912,998.0578815937042,1,41,IOD,timeout,,,,310.81984400749207
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,62.139946699142456,0.02621316909790039,0.009634256362915039,932.3807139396667,0.9654438495635986,933.3820052146912,998.0578815937042,2,66,IOD,timeout,,,,310.8165829181671
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,62.139946699142456,0.02621316909790039,0.009634256362915039,932.3807139396667,0.9654438495635986,933.3820052146912,998.0578815937042,3,134,IOD,timeout,,,,310.74002861976624
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,68.00510597229004,0.03792381286621094,0.003396749496459961,340.1350202560425,0.523871660232544,340.7002124786377,411.4358026981354,1,41,IOP,timeout,,,,340.13365626335144
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,73.81083226203918,0.0251162052154541,0.012954473495483398,1107.4157526493073,1.128507137298584,1108.5823304653168,1186.1651484966278,1,132,LCR,timeout,,,,369.1193118095398
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,73.81083226203918,0.0251162052154541,0.012954473495483398,1107.4157526493073,1.128507137298584,1108.5823304653168,1186.1651484966278,2,132,LCR,timeout,,,,369.1169455051422
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,73.81083226203918,0.0251162052154541,0.012954473495483398,1107.4157526493073,1.128507137298584,1108.5823304653168,1186.1651484966278,3,175,LCR,timeout,,,,369.1748158931732
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,72.77647376060486,0.024510860443115234,NA,NA,NA,0.12412333488464355,76.04425072669983,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,82.40951943397522,0.033684730529785156,NA,NA,NA,0.16316723823547363,85.95746278762817,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,66.04232621192932,0.023784160614013672,0.031584978103637695,2642.555675506592,3.0479423999786377,2645.658987045288,2715.3593940734863,1,132,ROR,timeout,,,,330.26028633117676
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,66.04232621192932,0.023784160614013672,0.031584978103637695,2642.555675506592,3.0479423999786377,2645.658987045288,2715.3593940734863,2,132,ROR,timeout,,,,330.3451476097107
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,66.04232621192932,0.023784160614013672,0.031584978103637695,2642.555675506592,3.0479423999786377,2645.658987045288,2715.3593940734863,3,132,ROR,timeout,,,,330.3255202770233
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,66.04232621192932,0.023784160614013672,0.031584978103637695,2642.555675506592,3.0479423999786377,2645.658987045288,2715.3593940734863,4,175,ROR,timeout,,,,330.3280920982361
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,66.04232621192932,0.023784160614013672,0.031584978103637695,2642.555675506592,3.0479423999786377,2645.658987045288,2715.3593940734863,5,175,ROR,timeout,,,,330.32618379592896
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,66.04232621192932,0.023784160614013672,0.031584978103637695,2642.555675506592,3.0479423999786377,2645.658987045288,2715.3593940734863,6,192,ROR,timeout,,,,330.33164525032043
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,66.04232621192932,0.023784160614013672,0.031584978103637695,2642.555675506592,3.0479423999786377,2645.658987045288,2715.3593940734863,7,195,ROR,timeout,,,,330.31371808052063
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,66.04232621192932,0.023784160614013672,0.031584978103637695,2642.555675506592,3.0479423999786377,2645.658987045288,2715.3593940734863,8,195,ROR,timeout,,,,330.3111023902893
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,65.91906929016113,0.0341341495513916,0.0033714771270751953,0.04610085487365723,0.5810539722442627,0.6646604537963867,69.66271758079529,1,41,SCD,killed,test_aux_ops_reusability (test.chemistry.test_adapt_vqe.TestAdaptVQE),"Traceback (most recent call last):\n  File ""./test/chemistry/test_adapt_vqe.py"", line 70, in test_aux_ops_reusability\n    _ = calc.solve(self.driver, aux_ops)\n  File ""qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe"", line 156, in solve\nAttributeError: 'AdaptVQE' object has no attribute '_transformation'\n",1,0.0447845458984375
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,76.08281993865967,0.026226520538330078,0.006850481033325195,761.0659973621368,1.1553268432617188,762.2544012069702,841.4362304210663,1,66,SCI,timeout,,,,380.5339539051056
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,76.08281993865967,0.026226520538330078,0.006850481033325195,761.0659973621368,1.1553268432617188,762.2544012069702,841.4362304210663,2,134,SCI,timeout,,,,380.52924966812134
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,87.462726354599,0.026760339736938477,NA,NA,NA,0.12399673461914062,90.93250298500061,NA,NA,SIR,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,95.85656952857971,0.04740095138549805,NA,NA,NA,8.70421576499939,108.12361884117126,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,83.07927417755127,0.03498578071594238,NA,NA,NA,242.9735128879547,329.6660327911377,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,72.10130381584167,0.021689414978027344,NA,NA,NA,204.01994442939758,278.740713596344,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,79.78224611282349,0.02850651741027832,NA,NA,NA,0.1384415626525879,83.11961913108826,NA,NA,QMD,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.ground_state_solvers.adapt_vqe,test.chemistry.test_adapt_vqe,5,80.29689407348633,0.03590989112854004,NA,NA,NA,14.354921817779541,98.20114946365356,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,330.15397357940674,0.01784825325012207,0.0028717517852783203,1650.8507406711578,0.35407090187072754,1651.225531578064,1984.6056067943573,1,174,AOD,timeout,,,,1650.8492076396942
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,351.07190918922424,0.01691150665283203,0.009909629821777344,7021.835230588913,0.8729948997497559,7022.735046625137,7378.330158233643,1,115,AOR,timeout,,,,1755.4824633598328
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,351.07190918922424,0.01691150665283203,0.009909629821777344,7021.835230588913,0.8729948997497559,7022.735046625137,7378.330158233643,2,139,AOR,timeout,,,,1755.4791374206543
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,351.07190918922424,0.01691150665283203,0.009909629821777344,7021.835230588913,0.8729948997497559,7022.735046625137,7378.330158233643,3,173,AOR,timeout,,,,1755.3920593261719
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,351.07190918922424,0.01691150665283203,0.009909629821777344,7021.835230588913,0.8729948997497559,7022.735046625137,7378.330158233643,4,174,AOR,timeout,,,,1755.4762225151062
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,361.590473651886,0.016758441925048828,NA,NA,NA,0.1023871898651123,367.0109965801239,NA,NA,ASR,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,396.11628699302673,0.038285017013549805,NA,NA,NA,0.14375090599060059,401.7128083705902,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,356.92760848999023,0.02022862434387207,0.0028982162475585938,1784.7422575950623,0.31000423431396484,1785.0753886699677,2146.6957314014435,1,74,COD,timeout,,,,1784.7406947612762
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,299.7633192539215,0.019080162048339844,0.030310392379760742,17987.0699634552,2.9804747104644775,17990.099828720093,18292.91891169548,1,69,COI,timeout,,,,1498.858009815216
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,299.7633192539215,0.019080162048339844,0.030310392379760742,17987.0699634552,2.9804747104644775,17990.099828720093,18292.91891169548,2,70,COI,timeout,,,,1498.9342193603516
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,299.7633192539215,0.019080162048339844,0.030310392379760742,17987.0699634552,2.9804747104644775,17990.099828720093,18292.91891169548,3,73,COI,timeout,,,,1498.9261138439178
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,299.7633192539215,0.019080162048339844,0.030310392379760742,17987.0699634552,2.9804747104644775,17990.099828720093,18292.91891169548,4,74,COI,timeout,,,,1498.9364883899689
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,299.7633192539215,0.019080162048339844,0.030310392379760742,17987.0699634552,2.9804747104644775,17990.099828720093,18292.91891169548,5,84,COI,timeout,,,,1498.8918991088867
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,299.7633192539215,0.019080162048339844,0.030310392379760742,17987.0699634552,2.9804747104644775,17990.099828720093,18292.91891169548,6,106,COI,timeout,,,,1498.9458467960358
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,299.7633192539215,0.019080162048339844,0.030310392379760742,17987.0699634552,2.9804747104644775,17990.099828720093,18292.91891169548,7,133,COI,timeout,,,,1498.9386720657349
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,299.7633192539215,0.019080162048339844,0.030310392379760742,17987.0699634552,2.9804747104644775,17990.099828720093,18292.91891169548,8,159,COI,timeout,,,,1498.9345231056213
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,299.7633192539215,0.019080162048339844,0.030310392379760742,17987.0699634552,2.9804747104644775,17990.099828720093,18292.91891169548,9,165,COI,timeout,,,,1498.852469921112
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,299.7633192539215,0.019080162048339844,0.030310392379760742,17987.0699634552,2.9804747104644775,17990.099828720093,18292.91891169548,10,171,COI,timeout,,,,1498.9406995773315
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,299.7633192539215,0.019080162048339844,0.030310392379760742,17987.0699634552,2.9804747104644775,17990.099828720093,18292.91891169548,11,172,COI,timeout,,,,1498.9573106765747
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,299.7633192539215,0.019080162048339844,0.030310392379760742,17987.0699634552,2.9804747104644775,17990.099828720093,18292.91891169548,12,190,COI,timeout,,,,1498.9374551773071
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,346.0999433994293,0.016197919845581055,0.03780484199523926,25959.166741847992,3.8345348834991455,25963.055279493332,26313.003537654877,1,35,CRP,timeout,,,,1730.6185319423676
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,346.0999433994293,0.016197919845581055,0.03780484199523926,25959.166741847992,3.8345348834991455,25963.055279493332,26313.003537654877,2,72,CRP,timeout,,,,1730.6189069747925
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,346.0999433994293,0.016197919845581055,0.03780484199523926,25959.166741847992,3.8345348834991455,25963.055279493332,26313.003537654877,3,73,CRP,timeout,,,,1730.588811635971
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,346.0999433994293,0.016197919845581055,0.03780484199523926,25959.166741847992,3.8345348834991455,25963.055279493332,26313.003537654877,4,76,CRP,timeout,,,,1730.6211647987366
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,346.0999433994293,0.016197919845581055,0.03780484199523926,25959.166741847992,3.8345348834991455,25963.055279493332,26313.003537654877,5,76,CRP,timeout,,,,1730.6188957691193
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,346.0999433994293,0.016197919845581055,0.03780484199523926,25959.166741847992,3.8345348834991455,25963.055279493332,26313.003537654877,6,82,CRP,timeout,,,,1730.6198880672455
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,346.0999433994293,0.016197919845581055,0.03780484199523926,25959.166741847992,3.8345348834991455,25963.055279493332,26313.003537654877,7,82,CRP,timeout,,,,1730.6241607666016
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,346.0999433994293,0.016197919845581055,0.03780484199523926,25959.166741847992,3.8345348834991455,25963.055279493332,26313.003537654877,8,107,CRP,timeout,,,,1730.6216311454773
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,346.0999433994293,0.016197919845581055,0.03780484199523926,25959.166741847992,3.8345348834991455,25963.055279493332,26313.003537654877,9,107,CRP,timeout,,,,1730.6218955516815
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,346.0999433994293,0.016197919845581055,0.03780484199523926,25959.166741847992,3.8345348834991455,25963.055279493332,26313.003537654877,10,115,CRP,timeout,,,,1730.5868003368378
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,346.0999433994293,0.016197919845581055,0.03780484199523926,25959.166741847992,3.8345348834991455,25963.055279493332,26313.003537654877,11,139,CRP,timeout,,,,1730.6187858581543
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,346.0999433994293,0.016197919845581055,0.03780484199523926,25959.166741847992,3.8345348834991455,25963.055279493332,26313.003537654877,12,139,CRP,timeout,,,,1730.6167078018188
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,346.0999433994293,0.016197919845581055,0.03780484199523926,25959.166741847992,3.8345348834991455,25963.055279493332,26313.003537654877,13,139,CRP,timeout,,,,1730.6226696968079
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,346.0999433994293,0.016197919845581055,0.03780484199523926,25959.166741847992,3.8345348834991455,25963.055279493332,26313.003537654877,14,174,CRP,timeout,,,,1730.5311725139618
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,346.0999433994293,0.016197919845581055,0.03780484199523926,25959.166741847992,3.8345348834991455,25963.055279493332,26313.003537654877,15,176,CRP,timeout,,,,1730.6164727210999
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,236.28126311302185,0.016170740127563477,NA,NA,NA,0.10661458969116211,238.88700127601624,NA,NA,DDL,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,269.18745470046997,0.015806913375854492,NA,NA,NA,0.08002233505249023,272.80177545547485,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,277.52531385421753,0.01614832878112793,NA,NA,NA,0.07911229133605957,280.46494913101196,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,260.49184131622314,0.01813364028930664,NA,NA,NA,0.08904194831848145,264.31838274002075,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,220.62727308273315,0.023529529571533203,NA,NA,NA,0.1191568374633789,223.0319309234619,NA,NA,IOD,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,240.48052501678467,0.016324758529663086,NA,NA,NA,0.11477017402648926,243.09600067138672,NA,NA,IOP,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,268.2737383842468,0.018578290939331055,0.002426624298095703,1341.4360332489014,0.26833367347717285,1341.725371837616,1613.1306793689728,1,159,LCR,timeout,,,,1341.4348554611206
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,261.60336208343506,0.01792001724243164,NA,NA,NA,0.09186244010925293,264.7132816314697,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,327.580016374588,0.01773548126220703,NA,NA,NA,0.08659601211547852,331.65929651260376,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,268.537668466568,0.021891117095947266,0.009907245635986328,5371.084794998169,0.8875813484191895,5372.00417470932,5643.894599914551,1,73,ROR,timeout,,,,1342.7471640110016
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,268.537668466568,0.021891117095947266,0.009907245635986328,5371.084794998169,0.8875813484191895,5372.00417470932,5643.894599914551,2,73,ROR,timeout,,,,1342.7160246372223
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,268.537668466568,0.021891117095947266,0.009907245635986328,5371.084794998169,0.8875813484191895,5372.00417470932,5643.894599914551,3,172,ROR,timeout,,,,1342.8080880641937
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,268.537668466568,0.021891117095947266,0.009907245635986328,5371.084794998169,0.8875813484191895,5372.00417470932,5643.894599914551,4,172,ROR,timeout,,,,1342.8072955608368
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,271.0021095275879,0.01753854751586914,NA,NA,NA,0.14658379554748535,274.39467692375183,NA,NA,SCD,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,319.00069999694824,0.018969058990478516,NA,NA,NA,0.13369178771972656,322.94897174835205,NA,NA,SCI,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,299.2364020347595,0.014196157455444336,NA,NA,NA,0.09070944786071777,303.0898406505585,NA,NA,SIR,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,358.36225390434265,0.0204775333404541,NA,NA,NA,2.096512794494629,364.3088004589081,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,290.52352714538574,0.026874065399169922,NA,NA,NA,28.04268765449524,322.3177659511566,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,259.77214908599854,0.027281761169433594,NA,NA,NA,26.016220331192017,288.8714232444763,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,316.2678642272949,0.017422914505004883,NA,NA,NA,0.08348560333251953,320.26981234550476,NA,NA,QMD,NA,NA,NA,NA,NA
qiskit.chemistry.algorithms.pes_samplers.bopes_sampler,test.chemistry.test_bopes_sampler,2,314.84484696388245,0.028748512268066406,NA,NA,NA,8.665595293045044,327.361599445343,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.85270094871521,0.025654315948486328,0.0031790733337402344,4.939882755279541,0.2980644702911377,5.266780614852905,13.855183124542236,1,124,AOD,killed,test_cobyla_optimizer_with_variable_bounds (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 85, in test_cobyla_optimizer_with_variable_bounds\n    self.assertAlmostEqual(result.x[0], -1.0, places=6)\nAssertionError: -704.9854608442481 != -1.0 within 6 places (703.9854608442481 difference)\n",4,4.93798041343689
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,2.167954444885254,0.05689811706542969,0.03607821464538574,31.593204021453857,3.3571321964263916,35.043312549591064,43.09405469894409,1,115,AOR,killed,test_cobyla_optimizer (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 43, in test_cobyla_optimizer\n    self.assertAlmostEqual(result.fval, 5.8750)\nAssertionError: 7.0 != 5.875 within 7 places (1.125 difference)\n",1,0.12560033798217773
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,2.167954444885254,0.05689811706542969,0.03607821464538574,31.593204021453857,3.3571321964263916,35.043312549591064,43.09405469894409,2,115,AOR,killed,test_cobyla_optimizer (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 43, in test_cobyla_optimizer\n    self.assertAlmostEqual(result.fval, 5.8750)\nAssertionError: 7.0 != 5.875 within 7 places (1.125 difference)\n",1,0.11655616760253906
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,2.167954444885254,0.05689811706542969,0.03607821464538574,31.593204021453857,3.3571321964263916,35.043312549591064,43.09405469894409,3,115,AOR,killed,test_cobyla_optimizer (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 43, in test_cobyla_optimizer\n    self.assertAlmostEqual(result.fval, 5.8750)\nAssertionError: 9.0 != 5.875 within 7 places (3.125 difference)\n",1,0.21633434295654297
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,2.167954444885254,0.05689811706542969,0.03607821464538574,31.593204021453857,3.3571321964263916,35.043312549591064,43.09405469894409,4,124,AOR,killed,test_cobyla_optimizer_with_variable_bounds (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 85, in test_cobyla_optimizer_with_variable_bounds\n    self.assertAlmostEqual(result.x[0], -1.0, places=6)\nAssertionError: -704.9854608442481 != -1.0 within 6 places (703.9854608442481 difference)\n",4,5.148150205612183
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,2.167954444885254,0.05689811706542969,0.03607821464538574,31.593204021453857,3.3571321964263916,35.043312549591064,43.09405469894409,5,126,AOR,killed,test_cobyla_optimizer_with_variable_bounds (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 85, in test_cobyla_optimizer_with_variable_bounds\n    self.assertAlmostEqual(result.x[0], -1.0, places=6)\nAssertionError: 1.0 != -1.0 within 6 places (2.0 difference)\n",4,2.022300958633423
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,2.167954444885254,0.05689811706542969,0.03607821464538574,31.593204021453857,3.3571321964263916,35.043312549591064,43.09405469894409,6,130,AOR,killed,test_cobyla_optimizer_with_variable_bounds (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 95, in test_cobyla_optimizer_with_variable_bounds\n    self.assertAlmostEqual(result.x[0], 1.0, places=6)\nAssertionError: 705.9854606043241 != 1.0 within 6 places (704.9854606043241 difference)\n",4,8.412159442901611
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,2.167954444885254,0.05689811706542969,0.03607821464538574,31.593204021453857,3.3571321964263916,35.043312549591064,43.09405469894409,7,135,AOR,timeout,,,,10.871930599212646
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,2.167954444885254,0.05689811706542969,0.03607821464538574,31.593204021453857,3.3571321964263916,35.043312549591064,43.09405469894409,8,142,AOR,survived,,,4,1.9378321170806885
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,2.167954444885254,0.05689811706542969,0.03607821464538574,31.593204021453857,3.3571321964263916,35.043312549591064,43.09405469894409,9,143,AOR,killed,test_cobyla_optimizer (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 43, in test_cobyla_optimizer\n    self.assertAlmostEqual(result.fval, 5.8750)\nAssertionError: 0.0 != 5.875 within 7 places (5.875 difference)\n",1,0.20775365829467773
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,2.167954444885254,0.05689811706542969,0.03607821464538574,31.593204021453857,3.3571321964263916,35.043312549591064,43.09405469894409,10,146,AOR,killed,test_cobyla_optimizer_with_quadratic_constraint (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 63, in test_cobyla_optimizer_with_quadratic_constraint\n    self.assertAlmostEqual(result.fval, 1.0, places=2)\nAssertionError: -0.3027720944909204 != 1.0 within 2 places (1.3027720944909205 difference)\n",2,0.5496923923492432
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,2.167954444885254,0.05689811706542969,0.03607821464538574,31.593204021453857,3.3571321964263916,35.043312549591064,43.09405469894409,11,148,AOR,survived,,,4,1.961395502090454
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.684532642364502,0.02713179588317871,0.013622760772705078,35.31744384765625,1.0973780155181885,36.45557641983032,45.285032510757446,1,127,ASR,timeout,,,,8.456678867340088
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.684532642364502,0.02713179588317871,0.013622760772705078,35.31744384765625,1.0973780155181885,36.45557641983032,45.285032510757446,2,131,ASR,timeout,,,,8.45335340499878
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.684532642364502,0.02713179588317871,0.013622760772705078,35.31744384765625,1.0973780155181885,36.45557641983032,45.285032510757446,3,141,ASR,timeout,,,,8.452154159545898
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.684532642364502,0.02713179588317871,0.013622760772705078,35.31744384765625,1.0973780155181885,36.45557641983032,45.285032510757446,4,146,ASR,timeout,,,,8.466761827468872
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.684532642364502,0.02713179588317871,0.013622760772705078,35.31744384765625,1.0973780155181885,36.45557641983032,45.285032510757446,5,148,ASR,survived,,,4,1.4805970191955566
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.7186808586120605,0.03890538215637207,NA,NA,NA,0.15671277046203613,9.411412954330444,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.8314025402069092,0.021060943603515625,NA,NA,NA,0.11604833602905273,7.751683235168457,NA,NA,COD,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.592027187347412,0.08037447929382324,0.014327526092529297,10.405791282653809,1.6032462120056152,12.103739500045776,18.169400930404663,1,92,COI,killed,test_cobyla_optimizer (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 40, in test_cobyla_optimizer\n    result = cobyla.solve(problem)\n  File ""qiskit.optimization.algorithms.cobyla_optimizer"", line 111, in solve\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/optimization/algorithms/optimization_algorithm.py"", line 310, in _verify_compatibility\n    raise QiskitOptimizationError('Incompatible problem: {}'.format(msg))\nqiskit.optimization.exceptions.QiskitOptimizationError: 'Incompatible problem: The COBYLA optimizer supports only continuous variables'\n",1,0.1145322322845459
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.592027187347412,0.08037447929382324,0.014327526092529297,10.405791282653809,1.6032462120056152,12.103739500045776,18.169400930404663,2,124,COI,killed,test_cobyla_optimizer_with_variable_bounds (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 85, in test_cobyla_optimizer_with_variable_bounds\n    self.assertAlmostEqual(result.x[0], -1.0, places=6)\nAssertionError: -704.9854608442481 != -1.0 within 6 places (703.9854608442481 difference)\n",4,3.9354496002197266
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.592027187347412,0.08037447929382324,0.014327526092529297,10.405791282653809,1.6032462120056152,12.103739500045776,18.169400930404663,3,128,COI,killed,test_cobyla_optimizer_with_variable_bounds (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 95, in test_cobyla_optimizer_with_variable_bounds\n    self.assertAlmostEqual(result.x[0], 1.0, places=6)\nAssertionError: 705.9854606043241 != 1.0 within 6 places (704.9854606043241 difference)\n",4,4.251402854919434
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.592027187347412,0.08037447929382324,0.014327526092529297,10.405791282653809,1.6032462120056152,12.103739500045776,18.169400930404663,4,140,COI,killed,test_cobyla_optimizer (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 40, in test_cobyla_optimizer\n    result = cobyla.solve(problem)\n  File ""qiskit.optimization.algorithms.cobyla_optimizer"", line 150, in solve\nqiskit.optimization.exceptions.QiskitOptimizationError: 'Unsupported constraint type!'\n",1,0.07212448120117188
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.592027187347412,0.08037447929382324,0.014327526092529297,10.405791282653809,1.6032462120056152,12.103739500045776,18.169400930404663,5,145,COI,killed,test_cobyla_optimizer_with_quadratic_constraint (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 60, in test_cobyla_optimizer_with_quadratic_constraint\n    result = cobyla.solve(problem)\n  File ""qiskit.optimization.algorithms.cobyla_optimizer"", line 150, in solve\nqiskit.optimization.exceptions.QiskitOptimizationError: 'Unsupported constraint type!'\n",2,0.4285144805908203
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.592027187347412,0.08037447929382324,0.014327526092529297,10.405791282653809,1.6032462120056152,12.103739500045776,18.169400930404663,6,147,COI,survived,,,4,1.5945954322814941
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.2249703407287598,0.015979290008544922,0.03552508354187012,13.835813283920288,2.3614661693573,16.248783826828003,21.870239973068237,1,45,CRP,survived,,,4,1.210015058517456
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.2249703407287598,0.015979290008544922,0.03552508354187012,13.835813283920288,2.3614661693573,16.248783826828003,21.870239973068237,2,45,CRP,killed,test_cobyla_optimizer (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 43, in test_cobyla_optimizer\n    self.assertAlmostEqual(result.fval, 5.8750)\nAssertionError: 6.292893218813454 != 5.875 within 7 places (0.41789321881345387 difference)\n",1,0.13070917129516602
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.2249703407287598,0.015979290008544922,0.03552508354187012,13.835813283920288,2.3614661693573,16.248783826828003,21.870239973068237,3,45,CRP,survived,,,4,1.372199535369873
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.2249703407287598,0.015979290008544922,0.03552508354187012,13.835813283920288,2.3614661693573,16.248783826828003,21.870239973068237,4,46,CRP,survived,,,4,1.4118807315826416
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.2249703407287598,0.015979290008544922,0.03552508354187012,13.835813283920288,2.3614661693573,16.248783826828003,21.870239973068237,5,46,CRP,survived,,,4,1.9684534072875977
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.2249703407287598,0.015979290008544922,0.03552508354187012,13.835813283920288,2.3614661693573,16.248783826828003,21.870239973068237,6,47,CRP,survived,,,4,1.3541476726531982
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.2249703407287598,0.015979290008544922,0.03552508354187012,13.835813283920288,2.3614661693573,16.248783826828003,21.870239973068237,7,93,CRP,survived,,,4,1.3457229137420654
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.2249703407287598,0.015979290008544922,0.03552508354187012,13.835813283920288,2.3614661693573,16.248783826828003,21.870239973068237,8,93,CRP,survived,,,4,1.6819195747375488
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.2249703407287598,0.015979290008544922,0.03552508354187012,13.835813283920288,2.3614661693573,16.248783826828003,21.870239973068237,9,95,CRP,killed,test_cobyla_optimizer (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 40, in test_cobyla_optimizer\n    result = cobyla.solve(problem)\n  File ""qiskit.optimization.algorithms.cobyla_optimizer"", line 111, in solve\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/optimization/algorithms/optimization_algorithm.py"", line 310, in _verify_compatibility\n    raise QiskitOptimizationError('Incompatible problem: {}'.format(msg))\nqiskit.optimization.exceptions.QiskitOptimizationError: 'Incompatible problem: mutpy'\n",1,0.058646202087402344
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.2249703407287598,0.015979290008544922,0.03552508354187012,13.835813283920288,2.3614661693573,16.248783826828003,21.870239973068237,10,150,CRP,survived,,,4,1.5199642181396484
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.2249703407287598,0.015979290008544922,0.03552508354187012,13.835813283920288,2.3614661693573,16.248783826828003,21.870239973068237,11,150,CRP,survived,,,4,1.7564799785614014
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.1426942348480225,0.015570878982543945,NA,NA,NA,0.11617445945739746,5.304572820663452,NA,NA,DDL,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.2717962265014648,0.01726365089416504,NA,NA,NA,0.09442687034606934,5.104602098464966,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.5571482181549072,0.019536495208740234,NA,NA,NA,0.10688543319702148,6.0856640338897705,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.2332854270935059,0.021005630493164062,NA,NA,NA,0.0868539810180664,5.653615474700928,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.1827051639556885,0.011626482009887695,0.005464315414428711,11.931566715240479,0.41957616806030273,12.368233680725098,17.549577713012695,1,45,IOD,killed,test_cobyla_optimizer (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 40, in test_cobyla_optimizer\n    result = cobyla.solve(problem)\n  File ""qiskit.optimization.algorithms.cobyla_optimizer"", line 159, in solve\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/optimization/algorithms/multistart_optimizer.py"", line 82, in multi_start_solve\n    x, rest = minimize(x_0)\n  File ""qiskit.optimization.algorithms.cobyla_optimizer"", line 154, in _minimize\nAttributeError: 'CobylaOptimizer' object has no attribute '_rhobeg'\n",1,0.047664642333984375
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.1827051639556885,0.011626482009887695,0.005464315414428711,11.931566715240479,0.41957616806030273,12.368233680725098,17.549577713012695,2,79,IOD,timeout,,,,5.936431884765625
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.1827051639556885,0.011626482009887695,0.005464315414428711,11.931566715240479,0.41957616806030273,12.368233680725098,17.549577713012695,3,97,IOD,timeout,,,,5.943286180496216
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.3285837173461914,0.014581918716430664,0.0017848014831542969,1.0655694007873535,0.22916460037231445,1.311100721359253,6.587240695953369,1,45,IOP,survived,,,4,1.0645060539245605
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.2445042133331299,0.018758058547973633,NA,NA,NA,0.0848088264465332,5.061528205871582,NA,NA,LCR,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.2368907928466797,0.015877485275268555,NA,NA,NA,0.0989542007446289,5.798642158508301,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.4739148616790771,0.01517629623413086,NA,NA,NA,0.10130023956298828,6.646665096282959,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.096672773361206,0.013890981674194336,0.01643085479736328,11.264844417572021,1.3480992317199707,12.64326548576355,17.15670657157898,1,92,ROR,survived,,,4,1.1390254497528076
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.096672773361206,0.013890981674194336,0.01643085479736328,11.264844417572021,1.3480992317199707,12.64326548576355,17.15670657157898,2,92,ROR,killed,test_cobyla_optimizer (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 40, in test_cobyla_optimizer\n    result = cobyla.solve(problem)\n  File ""qiskit.optimization.algorithms.cobyla_optimizer"", line 111, in solve\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/optimization/algorithms/optimization_algorithm.py"", line 310, in _verify_compatibility\n    raise QiskitOptimizationError('Incompatible problem: {}'.format(msg))\nqiskit.optimization.exceptions.QiskitOptimizationError: 'Incompatible problem: The COBYLA optimizer supports only continuous variables'\n",1,0.044832706451416016
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.096672773361206,0.013890981674194336,0.01643085479736328,11.264844417572021,1.3480992317199707,12.64326548576355,17.15670657157898,3,124,ROR,killed,test_cobyla_optimizer_with_variable_bounds (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 85, in test_cobyla_optimizer_with_variable_bounds\n    self.assertAlmostEqual(result.x[0], -1.0, places=6)\nAssertionError: -704.9854608442481 != -1.0 within 6 places (703.9854608442481 difference)\n",4,3.360959768295288
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.096672773361206,0.013890981674194336,0.01643085479736328,11.264844417572021,1.3480992317199707,12.64326548576355,17.15670657157898,4,124,ROR,survived,,,4,1.1706414222717285
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.096672773361206,0.013890981674194336,0.01643085479736328,11.264844417572021,1.3480992317199707,12.64326548576355,17.15670657157898,5,128,ROR,killed,test_cobyla_optimizer_with_variable_bounds (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 95, in test_cobyla_optimizer_with_variable_bounds\n    self.assertAlmostEqual(result.x[0], 1.0, places=6)\nAssertionError: 705.9854606043241 != 1.0 within 6 places (704.9854606043241 difference)\n",4,2.888913631439209
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.096672773361206,0.013890981674194336,0.01643085479736328,11.264844417572021,1.3480992317199707,12.64326548576355,17.15670657157898,6,128,ROR,survived,,,4,1.1116020679473877
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.096672773361206,0.013890981674194336,0.01643085479736328,11.264844417572021,1.3480992317199707,12.64326548576355,17.15670657157898,7,140,ROR,killed,test_cobyla_optimizer (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 40, in test_cobyla_optimizer\n    result = cobyla.solve(problem)\n  File ""qiskit.optimization.algorithms.cobyla_optimizer"", line 150, in solve\nqiskit.optimization.exceptions.QiskitOptimizationError: 'Unsupported constraint type!'\n",1,0.04517865180969238
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.096672773361206,0.013890981674194336,0.01643085479736328,11.264844417572021,1.3480992317199707,12.64326548576355,17.15670657157898,8,145,ROR,killed,test_cobyla_optimizer_with_quadratic_constraint (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 60, in test_cobyla_optimizer_with_quadratic_constraint\n    result = cobyla.solve(problem)\n  File ""qiskit.optimization.algorithms.cobyla_optimizer"", line 150, in solve\nqiskit.optimization.exceptions.QiskitOptimizationError: 'Unsupported constraint type!'\n",2,0.2742934226989746
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.096672773361206,0.013890981674194336,0.01643085479736328,11.264844417572021,1.3480992317199707,12.64326548576355,17.15670657157898,9,147,ROR,survived,,,4,1.2182188034057617
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.177241325378418,0.01969003677368164,0.0018687248229980469,0.04810690879821777,0.2757680416107178,0.34543371200561523,5.548895835876465,1,45,SCD,killed,test_cobyla_optimizer (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 40, in test_cobyla_optimizer\n    result = cobyla.solve(problem)\n  File ""qiskit.optimization.algorithms.cobyla_optimizer"", line 159, in solve\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/optimization/algorithms/multistart_optimizer.py"", line 73, in multi_start_solve\n    for trial in range(self._trials):\nAttributeError: 'CobylaOptimizer' object has no attribute '_trials'\n",1,0.04683399200439453
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.346834659576416,0.020849943161010742,0.0061528682708740234,1.4332380294799805,0.4909400939941406,1.9511809349060059,8.215056657791138,1,79,SCI,survived,,,4,1.3822495937347412
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.346834659576416,0.020849943161010742,0.0061528682708740234,1.4332380294799805,0.4909400939941406,1.9511809349060059,8.215056657791138,2,97,SCI,killed,test_cobyla_optimizer (test.optimization.test_cobyla_optimizer.TestCobylaOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cobyla_optimizer.py"", line 40, in test_cobyla_optimizer\n    result = cobyla.solve(problem)\n  File ""qiskit.optimization.algorithms.cobyla_optimizer"", line 110, in solve\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/optimization/algorithms/optimization_algorithm.py"", line 290, in solve\n    raise NotImplementedError\nNotImplementedError\n",1,0.0467529296875
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.7196376323699951,0.02392101287841797,NA,NA,NA,0.09164309501647949,6.986120939254761,NA,NA,SIR,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.31451416015625,0.015993118286132812,NA,NA,NA,1.5571486949920654,8.553349494934082,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.2692432403564453,0.02157139778137207,NA,NA,NA,6.783139705657959,12.676873922348022,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.1566157341003418,0.014008522033691406,NA,NA,NA,7.085927248001099,12.278207063674927,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.260221004486084,0.01424860954284668,NA,NA,NA,0.07280826568603516,6.066701173782349,NA,NA,QMD,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cobyla_optimizer,test.optimization.test_cobyla_optimizer,4,1.3677828311920166,0.022291183471679688,NA,NA,NA,3.6546072959899902,10.576898574829102,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0011372566223144531,0.008885383605957031,NA,NA,NA,0.06838750839233398,7.049818277359009,NA,NA,AOD,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0008184909820556641,0.026850461959838867,NA,NA,NA,0.10795307159423828,7.31256365776062,NA,NA,AOR,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0009636878967285156,0.007502555847167969,NA,NA,NA,0.0890960693359375,6.319957733154297,NA,NA,ASR,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0010416507720947266,0.0075511932373046875,NA,NA,NA,0.048802852630615234,6.073854923248291,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0008270740509033203,0.006716251373291016,0.015729427337646484,0.13553547859191895,0.288738489151001,0.4467196464538574,5.810887575149536,1,55,COD,killed,test_cplex_optimizer_1___op_ip1_lp____0__2___6_ (test.optimization.test_cplex_optimizer.TestCplexOptimizer),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/optimization/problems/quadratic_program.py"", line 1098, in read_from_lp_file\n    import cplex  # pylint: disable=unused-import\nModuleNotFoundError: No module named 'cplex'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/optimization/test_cplex_optimizer.py"", line 48, in test_cplex_optimizer\n    problem.read_from_lp_file(lp_file)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/optimization/problems/quadratic_program.py"", line 1103, in read_from_lp_file\n    pip_install=""pip install 'qiskit-aqua[cplex]'"") from ex\nqiskit.aqua.missing_optional_library_error.MissingOptionalLibraryError: ""The 'CPLEX' library is required to use 'QuadraticProgram.read_from_lp_file'. You can install it with 'pip install 'qiskit-aqua[cplex]''.""\n",1,0.07624244689941406
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0008270740509033203,0.006716251373291016,0.015729427337646484,0.13553547859191895,0.288738489151001,0.4467196464538574,5.810887575149536,2,121,COD,survived,,,-3,0.05505704879760742
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0006525516510009766,0.006415605545043945,0.011205673217773438,0.11977958679199219,0.20412373542785645,0.341524600982666,5.3683459758758545,1,55,COI,killed,test_cplex_optimizer_1___op_ip1_lp____0__2___6_ (test.optimization.test_cplex_optimizer.TestCplexOptimizer),"Traceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/optimization/problems/quadratic_program.py"", line 1098, in read_from_lp_file\n    import cplex  # pylint: disable=unused-import\nModuleNotFoundError: No module named 'cplex'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/ddt.py"", line 182, in wrapper\n    return func(self, *args, **kwargs)\n  File ""./test/optimization/test_cplex_optimizer.py"", line 48, in test_cplex_optimizer\n    problem.read_from_lp_file(lp_file)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/optimization/problems/quadratic_program.py"", line 1103, in read_from_lp_file\n    pip_install=""pip install 'qiskit-aqua[cplex]'"") from ex\nqiskit.aqua.missing_optional_library_error.MissingOptionalLibraryError: ""The 'CPLEX' library is required to use 'QuadraticProgram.read_from_lp_file'. You can install it with 'pip install 'qiskit-aqua[cplex]''.""\n",1,0.08028435707092285
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0006525516510009766,0.006415605545043945,0.011205673217773438,0.11977958679199219,0.20412373542785645,0.341524600982666,5.3683459758758545,2,121,COI,survived,,,-3,0.036134958267211914
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0007524490356445312,0.0063626766204833984,0.04062652587890625,0.29939961433410645,0.7183606624603271,1.0647494792938232,5.571994781494141,1,57,CRP,survived,,,-3,0.029607295989990234
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0007524490356445312,0.0063626766204833984,0.04062652587890625,0.29939961433410645,0.7183606624603271,1.0647494792938232,5.571994781494141,2,57,CRP,survived,,,-3,0.03399062156677246
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0007524490356445312,0.0063626766204833984,0.04062652587890625,0.29939961433410645,0.7183606624603271,1.0647494792938232,5.571994781494141,3,58,CRP,survived,,,-3,0.043439626693725586
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0007524490356445312,0.0063626766204833984,0.04062652587890625,0.29939961433410645,0.7183606624603271,1.0647494792938232,5.571994781494141,4,58,CRP,survived,,,-3,0.049315452575683594
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0007524490356445312,0.0063626766204833984,0.04062652587890625,0.29939961433410645,0.7183606624603271,1.0647494792938232,5.571994781494141,5,59,CRP,survived,,,-3,0.03985118865966797
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0007524490356445312,0.0063626766204833984,0.04062652587890625,0.29939961433410645,0.7183606624603271,1.0647494792938232,5.571994781494141,6,59,CRP,survived,,,-3,0.030297517776489258
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0007524490356445312,0.0063626766204833984,0.04062652587890625,0.29939961433410645,0.7183606624603271,1.0647494792938232,5.571994781494141,7,99,CRP,survived,,,-3,0.05987811088562012
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0007033348083496094,0.005460023880004883,0.024056434631347656,0.07420110702514648,0.33121323585510254,0.43493080139160156,4.722097396850586,1,63,DDL,survived,,,-3,0.03195476531982422
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0007033348083496094,0.005460023880004883,0.024056434631347656,0.07420110702514648,0.33121323585510254,0.43493080139160156,4.722097396850586,2,68,DDL,incompetent,,,0,0
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0007033348083496094,0.005460023880004883,0.024056434631347656,0.07420110702514648,0.33121323585510254,0.43493080139160156,4.722097396850586,3,77,DDL,survived,,,-3,0.0393977165222168
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0006794929504394531,0.0061876773834228516,0.006700038909912109,NA,NA,0.1459963321685791,4.238635778427124,1,27,EHD,incompetent,,,0,0
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0006098747253417969,0.0059812068939208984,0.011343240737915039,0.13367772102355957,0.21521782875061035,0.36621999740600586,4.718332529067993,1,27,EXS,killed,test_cplex_optimizer_1___op_ip1_lp____0__2___6_ (test.optimization.test_cplex_optimizer.TestCplexOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_cplex_optimizer.py"", line 31, in setUp\n    self.cplex_optimizer = CplexOptimizer(disp=False)\n  File ""qiskit.optimization.algorithms.cplex_optimizer"", line 55, in __init__\nNameError: name '_HAS_CPLEX' is not defined\n",1,0.03647041320800781
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0006098747253417969,0.0059812068939208984,0.011343240737915039,0.13367772102355957,0.21521782875061035,0.36621999740600586,4.718332529067993,2,130,EXS,survived,,,-3,0.0946195125579834
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0006148815155029297,0.005209922790527344,NA,NA,NA,0.03151702880859375,3.961601972579956,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0006763935089111328,0.006127595901489258,0.01925063133239746,15.10405421257019,0.29672670364379883,15.426159143447876,19.342674493789673,1,46,IOD,timeout,,,,5.021462678909302
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0006763935089111328,0.006127595901489258,0.01925063133239746,15.10405421257019,0.29672670364379883,15.426159143447876,19.342674493789673,2,86,IOD,timeout,,,,5.029497146606445
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0006763935089111328,0.006127595901489258,0.01925063133239746,15.10405421257019,0.29672670364379883,15.426159143447876,19.342674493789673,3,101,IOD,timeout,,,,5.048072576522827
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0005571842193603516,0.0052754878997802734,NA,NA,NA,0.04227757453918457,3.6864936351776123,NA,NA,IOP,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0008296966552734375,0.006597042083740234,NA,NA,NA,0.08730912208557129,3.8921120166778564,NA,NA,LCR,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0005743503570556641,0.005529642105102539,NA,NA,NA,0.031999826431274414,4.094628572463989,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0010380744934082031,0.009062051773071289,NA,NA,NA,0.04435396194458008,5.4970386028289795,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0005407333374023438,0.004859447479248047,NA,NA,NA,0.028970003128051758,3.3366847038269043,NA,NA,ROR,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0010552406311035156,0.0063762664794921875,NA,NA,NA,0.05001235008239746,3.7408790588378906,NA,NA,SCD,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0008301734924316406,0.006698131561279297,0.02464914321899414,5.336387634277344,0.5863313674926758,5.954066276550293,10.762845516204834,1,46,SCI,timeout,,,,5.071571588516235
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0008301734924316406,0.006698131561279297,0.02464914321899414,5.336387634277344,0.5863313674926758,5.954066276550293,10.762845516204834,2,86,SCI,survived,,,-3,0.11901521682739258
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0008301734924316406,0.006698131561279297,0.02464914321899414,5.336387634277344,0.5863313674926758,5.954066276550293,10.762845516204834,3,101,SCI,survived,,,-3,0.1387190818786621
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0007641315460205078,0.006544828414916992,NA,NA,NA,0.035198211669921875,5.726755142211914,NA,NA,SIR,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0009362697601318359,0.00659942626953125,NA,NA,NA,3.358203887939453,9.587584257125854,NA,NA,QGD,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0006556510925292969,0.005442142486572266,NA,NA,NA,67.14712977409363,73.3505756855011,NA,NA,QGI,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0008716583251953125,0.0068378448486328125,NA,NA,NA,58.29764938354492,62.81281352043152,NA,NA,QGR,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0011439323425292969,0.008859634399414062,NA,NA,NA,0.04652667045593262,5.045651912689209,NA,NA,QMD,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.cplex_optimizer,test.optimization.test_cplex_optimizer,0,0.0006208419799804688,0.005467414855957031,NA,NA,NA,3.490006685256958,7.920206546783447,NA,NA,QMI,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.381365060806274,0.06377387046813965,0.06120800971984863,959.1309030056,7.119234800338745,966.3751196861267,1000.6350741386414,1,164,AOD,timeout,,,,136.9733328819275
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.381365060806274,0.06377387046813965,0.06120800971984863,959.1309030056,7.119234800338745,966.3751196861267,1000.6350741386414,2,166,AOD,timeout,,,,137.0327422618866
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.381365060806274,0.06377387046813965,0.06120800971984863,959.1309030056,7.119234800338745,966.3751196861267,1000.6350741386414,3,168,AOD,timeout,,,,137.02861547470093
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.381365060806274,0.06377387046813965,0.06120800971984863,959.1309030056,7.119234800338745,966.3751196861267,1000.6350741386414,4,278,AOD,timeout,,,,136.9993085861206
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.381365060806274,0.06377387046813965,0.06120800971984863,959.1309030056,7.119234800338745,966.3751196861267,1000.6350741386414,5,278,AOD,timeout,,,,137.02849674224854
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.381365060806274,0.06377387046813965,0.06120800971984863,959.1309030056,7.119234800338745,966.3751196861267,1000.6350741386414,6,290,AOD,timeout,,,,137.0169985294342
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.381365060806274,0.06377387046813965,0.06120800971984863,959.1309030056,7.119234800338745,966.3751196861267,1000.6350741386414,7,299,AOD,timeout,,,,137.03116369247437
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,1,122,AOR,timeout,,,,139.85627436637878
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,2,130,AOR,timeout,,,,139.86545825004578
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,3,164,AOR,timeout,,,,139.8665108680725
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,4,166,AOR,timeout,,,,139.8561143875122
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,5,168,AOR,timeout,,,,139.82575392723083
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,6,180,AOR,timeout,,,,139.85402464866638
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,7,189,AOR,timeout,,,,139.86501240730286
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,8,189,AOR,timeout,,,,139.8820300102234
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,9,189,AOR,timeout,,,,139.91382813453674
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,10,189,AOR,timeout,,,,139.84947967529297
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,11,189,AOR,timeout,,,,139.8437259197235
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,12,192,AOR,killed,test_converter_list (test.optimization.test_grover_optimizer.TestGroverOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_grover_optimizer.py"", line 152, in test_converter_list\n    results = gmf.solve(op)\n  File ""qiskit.optimization.algorithms.grover_optimizer"", line 192, in solve\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 87, in __init__\n    % (type(size).__name__, size))\nqiskit.circuit.exceptions.CircuitError: ""Register size must be positive (int '-2' was provided)""\n",1,0.18540000915527344
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,13,202,AOR,timeout,,,,139.87369108200073
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,14,210,AOR,timeout,,,,139.8637933731079
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,15,222,AOR,timeout,,,,139.85859847068787
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,16,223,AOR,timeout,,,,139.87173056602478
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,17,237,AOR,timeout,,,,139.85936307907104
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,18,237,AOR,timeout,,,,139.75761032104492
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,19,237,AOR,timeout,,,,139.85269045829773
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,20,237,AOR,timeout,,,,139.8595426082611
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,21,237,AOR,timeout,,,,139.8439977169037
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,22,237,AOR,timeout,,,,139.78433990478516
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,23,237,AOR,timeout,,,,139.83222770690918
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,24,237,AOR,timeout,,,,139.78750705718994
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,25,260,AOR,timeout,,,,139.85442519187927
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,26,278,AOR,timeout,,,,139.86081075668335
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,27,278,AOR,timeout,,,,139.7536382675171
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,28,278,AOR,timeout,,,,139.816260099411
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,29,278,AOR,timeout,,,,139.82611393928528
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,30,290,AOR,timeout,,,,139.8018159866333
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,31,292,AOR,timeout,,,,139.8621027469635
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,32,292,AOR,timeout,,,,139.85856318473816
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,33,292,AOR,timeout,,,,139.86299467086792
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,34,299,AOR,timeout,,,,139.85456204414368
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,35,299,AOR,timeout,,,,139.86455726623535
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,36,299,AOR,timeout,,,,139.84990048408508
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,37,307,AOR,timeout,,,,139.79374647140503
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.946610927581787,0.05211210250854492,0.26864075660705566,5174.507391452789,36.702397108078,5211.530541419983,5246.519078969955,38,307,AOR,timeout,,,,139.8539159297943
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.914382696151733,0.05086350440979004,0.03508281707763672,419.1195344924927,2.803462505340576,422.0089433193207,457.77692890167236,1,209,ASR,timeout,,,,139.703782081604
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.914382696151733,0.05086350440979004,0.03508281707763672,419.1195344924927,2.803462505340576,422.0089433193207,457.77692890167236,2,211,ASR,timeout,,,,139.68340039253235
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.914382696151733,0.05086350440979004,0.03508281707763672,419.1195344924927,2.803462505340576,422.0089433193207,457.77692890167236,3,253,ASR,timeout,,,,139.72522830963135
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,27.284303903579712,0.04367494583129883,NA,NA,NA,0.26712465286254883,34.492783546447754,NA,NA,BCR,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,23.116727828979492,0.04793572425842285,0.025614500045776367,347.1985945701599,3.214294910430908,350.486439704895,380.33614206314087,1,194,COD,timeout,,,,115.7033703327179
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,23.116727828979492,0.04793572425842285,0.025614500045776367,347.1985945701599,3.214294910430908,350.486439704895,380.33614206314087,2,197,COD,killed,test_converter_list (test.optimization.test_grover_optimizer.TestGroverOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_grover_optimizer.py"", line 153, in test_converter_list\n    self.validate_results(op, results)\n  File ""./test/optimization/test_grover_optimizer.py"", line 52, in validate_results\n    np.testing.assert_array_almost_equal(comp_result.x, results.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 1046, in assert_array_almost_equal\n    precision=decimal)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 842, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not almost equal to 6 decimals\n\nMismatched elements: 1 / 2 (50%)\nMax absolute difference: 1.\nMax relative difference: inf\n x: array([0., 1.])\n y: array([0., 0.])\n",1,0.16875147819519043
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,23.116727828979492,0.04793572425842285,0.025614500045776367,347.1985945701599,3.214294910430908,350.486439704895,380.33614206314087,3,207,COD,timeout,,,,115.70297837257385
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,23.116727828979492,0.04793572425842285,0.025614500045776367,347.1985945701599,3.214294910430908,350.486439704895,380.33614206314087,4,241,COD,timeout,,,,115.61527395248413
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.84429621696472,0.0373842716217041,0.09151530265808105,984.3721590042114,10.891148805618286,995.3922073841095,1022.5184795856476,1,64,COI,killed,test_converter_list (test.optimization.test_grover_optimizer.TestGroverOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_grover_optimizer.py"", line 152, in test_converter_list\n    results = gmf.solve(op)\n  File ""qiskit.optimization.algorithms.grover_optimizer"", line 152, in solve\nAttributeError: The quantum instance or backend has not been set.\n",1,0.04786229133605957
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.84429621696472,0.0373842716217041,0.09151530265808105,984.3721590042114,10.891148805618286,995.3922073841095,1022.5184795856476,2,86,COI,killed,test_converter_list (test.optimization.test_grover_optimizer.TestGroverOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_grover_optimizer.py"", line 151, in test_converter_list\n    converters=qp2qubo)\n  File ""qiskit.optimization.algorithms.grover_optimizer"", line 65, in __init__\n  File ""qiskit.optimization.algorithms.grover_optimizer"", line 87, in quantum_instance\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 143, in __init__\n    if self.is_statevector and shots != 1:\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/quantum_instance.py"", line 548, in is_statevector\n    return is_statevector_backend(self._backend)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/aqua/utils/backend_utils.py"", line 138, in is_statevector_backend\n    return backend.name().startswith('statevector') if backend is not None else False\nAttributeError: 'QuantumInstance' object has no attribute 'name'\n",1,0.09724950790405273
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.84429621696472,0.0373842716217041,0.09151530265808105,984.3721590042114,10.891148805618286,995.3922073841095,1022.5184795856476,3,121,COI,timeout,,,,109.33784604072571
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.84429621696472,0.0373842716217041,0.09151530265808105,984.3721590042114,10.891148805618286,995.3922073841095,1022.5184795856476,4,151,COI,killed,test_converter_list (test.optimization.test_grover_optimizer.TestGroverOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_grover_optimizer.py"", line 152, in test_converter_list\n    results = gmf.solve(op)\n  File ""qiskit.optimization.algorithms.grover_optimizer"", line 152, in solve\nAttributeError: The quantum instance or backend has not been set.\n",1,0.07083487510681152
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.84429621696472,0.0373842716217041,0.09151530265808105,984.3721590042114,10.891148805618286,995.3922073841095,1022.5184795856476,5,162,COI,timeout,,,,109.35026574134827
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.84429621696472,0.0373842716217041,0.09151530265808105,984.3721590042114,10.891148805618286,995.3922073841095,1022.5184795856476,6,197,COI,killed,test_converter_list (test.optimization.test_grover_optimizer.TestGroverOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_grover_optimizer.py"", line 153, in test_converter_list\n    self.validate_results(op, results)\n  File ""./test/optimization/test_grover_optimizer.py"", line 52, in validate_results\n    np.testing.assert_array_almost_equal(comp_result.x, results.x)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 1046, in assert_array_almost_equal\n    precision=decimal)\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 842, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not almost equal to 6 decimals\n\nMismatched elements: 1 / 2 (50%)\nMax absolute difference: 1.\nMax relative difference: inf\n x: array([0., 1.])\n y: array([0., 0.])\n",1,0.13518428802490234
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.84429621696472,0.0373842716217041,0.09151530265808105,984.3721590042114,10.891148805618286,995.3922073841095,1022.5184795856476,7,207,COI,timeout,,,,109.25046873092651
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.84429621696472,0.0373842716217041,0.09151530265808105,984.3721590042114,10.891148805618286,995.3922073841095,1022.5184795856476,8,228,COI,timeout,,,,109.34114909172058
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.84429621696472,0.0373842716217041,0.09151530265808105,984.3721590042114,10.891148805618286,995.3922073841095,1022.5184795856476,9,241,COI,timeout,,,,109.34909343719482
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.84429621696472,0.0373842716217041,0.09151530265808105,984.3721590042114,10.891148805618286,995.3922073841095,1022.5184795856476,10,245,COI,timeout,,,,109.33847212791443
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.84429621696472,0.0373842716217041,0.09151530265808105,984.3721590042114,10.891148805618286,995.3922073841095,1022.5184795856476,11,257,COI,timeout,,,,109.34858632087708
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.84429621696472,0.0373842716217041,0.09151530265808105,984.3721590042114,10.891148805618286,995.3922073841095,1022.5184795856476,12,288,COI,timeout,,,,109.33754563331604
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.84429621696472,0.0373842716217041,0.09151530265808105,984.3721590042114,10.891148805618286,995.3922073841095,1022.5184795856476,13,306,COI,timeout,,,,109.33979845046997
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,1,39,CRP,timeout,,,,95.50650882720947
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,2,124,CRP,timeout,,,,95.42632794380188
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,3,124,CRP,timeout,,,,95.50379467010498
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,4,124,CRP,killed,test_converter_list (test.optimization.test_grover_optimizer.TestGroverOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_grover_optimizer.py"", line 152, in test_converter_list\n    results = gmf.solve(op)\n  File ""qiskit.optimization.algorithms.grover_optimizer"", line 195, in solve\n  File ""qiskit.optimization.algorithms.grover_optimizer"", line 124, in _get_oracle\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit/circuit/register.py"", line 100, in __init__\n    "" A of https://arxiv.org/pdf/1707.03429v2.pdf."" % name)\nqiskit.circuit.exceptions.CircuitError: ' is an invalid OPENQASM register name. See appendix A of https://arxiv.org/pdf/1707.03429v2.pdf.'\n",1,0.07486224174499512
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,5,131,CRP,timeout,,,,95.45013952255249
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,6,131,CRP,timeout,,,,95.50925755500793
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,7,131,CRP,timeout,,,,95.50422191619873
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,8,152,CRP,timeout,,,,95.49953079223633
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,9,152,CRP,timeout,,,,95.50511956214905
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,10,175,CRP,timeout,,,,95.43210649490356
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,11,180,CRP,timeout,,,,95.49972820281982
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,12,185,CRP,timeout,,,,95.50687527656555
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,13,188,CRP,timeout,,,,95.50783824920654
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,14,189,CRP,timeout,,,,95.47424554824829
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,15,189,CRP,timeout,,,,95.50991082191467
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,16,198,CRP,timeout,,,,95.47789025306702
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,17,206,CRP,timeout,,,,95.4360556602478
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,18,209,CRP,timeout,,,,95.43158745765686
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,19,210,CRP,timeout,,,,95.50419616699219
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,20,210,CRP,timeout,,,,95.50468897819519
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,21,221,CRP,timeout,,,,95.49702167510986
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,22,221,CRP,timeout,,,,95.50977110862732
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,23,224,CRP,timeout,,,,95.50532364845276
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,24,224,CRP,timeout,,,,95.50746083259583
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,25,225,CRP,timeout,,,,95.49973773956299
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,26,225,CRP,timeout,,,,95.46288871765137
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,27,231,CRP,timeout,,,,95.50700783729553
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,28,231,CRP,timeout,,,,95.50793766975403
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,29,232,CRP,timeout,,,,95.43000888824463
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,30,232,CRP,timeout,,,,95.49985647201538
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,31,237,CRP,timeout,,,,95.49878239631653
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,32,237,CRP,timeout,,,,95.50047707557678
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,33,237,CRP,timeout,,,,95.47358322143555
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,34,237,CRP,timeout,,,,95.41185688972473
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,35,238,CRP,timeout,,,,95.5040991306305
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,36,238,CRP,timeout,,,,95.5000855922699
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,37,253,CRP,timeout,,,,95.50517630577087
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,38,254,CRP,timeout,,,,95.50597429275513
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,39,254,CRP,timeout,,,,95.46205520629883
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,40,257,CRP,timeout,,,,95.41769361495972
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,41,257,CRP,timeout,,,,95.42779541015625
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,42,258,CRP,timeout,,,,95.50908756256104
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,43,260,CRP,timeout,,,,95.46421456336975
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,44,260,CRP,timeout,,,,95.45877885818481
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,45,260,CRP,timeout,,,,95.50047469139099
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,46,260,CRP,timeout,,,,95.52166771888733
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,47,260,CRP,timeout,,,,95.50702857971191
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,48,260,CRP,timeout,,,,95.51981449127197
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,49,276,CRP,timeout,,,,95.51210761070251
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,50,278,CRP,timeout,,,,95.50408244132996
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,51,278,CRP,timeout,,,,95.49977493286133
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,52,278,CRP,timeout,,,,95.51444029808044
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,53,278,CRP,timeout,,,,95.50174617767334
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,54,278,CRP,timeout,,,,95.48428750038147
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,55,278,CRP,timeout,,,,95.4796085357666
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,56,278,CRP,timeout,,,,95.475421667099
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,57,279,CRP,timeout,,,,95.43146681785583
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,58,279,CRP,timeout,,,,95.50175380706787
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,59,279,CRP,timeout,,,,95.49890542030334
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,60,280,CRP,timeout,,,,95.58277654647827
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,61,280,CRP,timeout,,,,95.50678849220276
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,62,282,CRP,timeout,,,,95.50160002708435
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,63,289,CRP,timeout,,,,95.50600266456604
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,64,290,CRP,timeout,,,,95.50520277023315
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,65,290,CRP,timeout,,,,95.47321081161499
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,66,290,CRP,timeout,,,,95.50109910964966
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,67,290,CRP,timeout,,,,95.51230359077454
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,68,291,CRP,timeout,,,,95.50473761558533
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,69,292,CRP,timeout,,,,95.49937224388123
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,70,299,CRP,timeout,,,,95.50412678718567
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,71,300,CRP,timeout,,,,95.51823019981384
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,72,300,CRP,timeout,,,,95.49788570404053
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,73,306,CRP,timeout,,,,95.51569509506226
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,74,306,CRP,timeout,,,,95.49845743179321
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,75,307,CRP,timeout,,,,95.48405647277832
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,76,307,CRP,timeout,,,,95.48952126502991
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.07744073867798,0.038407087326049805,0.47965288162231445,7257.534165620804,57.128422260284424,7315.180647850037,7339.002778530121,77,309,CRP,timeout,,,,95.50035190582275
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,18.989290237426758,0.04040813446044922,0.04580879211425781,665.2433702945709,5.9115400314331055,671.2411272525787,694.6793332099915,1,69,DDL,incompetent,,,0,0
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,18.989290237426758,0.04040813446044922,0.04580879211425781,665.2433702945709,5.9115400314331055,671.2411272525787,694.6793332099915,2,78,DDL,timeout,,,,95.01114153862
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,18.989290237426758,0.04040813446044922,0.04580879211425781,665.2433702945709,5.9115400314331055,671.2411272525787,694.6793332099915,3,303,DDL,timeout,,,,94.98789119720459
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,18.989290237426758,0.04040813446044922,0.04580879211425781,665.2433702945709,5.9115400314331055,671.2411272525787,694.6793332099915,4,343,DDL,timeout,,,,95.06605386734009
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,18.989290237426758,0.04040813446044922,0.04580879211425781,665.2433702945709,5.9115400314331055,671.2411272525787,694.6793332099915,5,352,DDL,timeout,,,,95.0611207485199
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,18.989290237426758,0.04040813446044922,0.04580879211425781,665.2433702945709,5.9115400314331055,671.2411272525787,694.6793332099915,6,361,DDL,timeout,,,,94.98271679878235
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,18.989290237426758,0.04040813446044922,0.04580879211425781,665.2433702945709,5.9115400314331055,671.2411272525787,694.6793332099915,7,370,DDL,timeout,,,,95.0739574432373
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,18.989290237426758,0.04040813446044922,0.04580879211425781,665.2433702945709,5.9115400314331055,671.2411272525787,694.6793332099915,8,379,DDL,timeout,,,,95.04669785499573
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,17.602311611175537,0.038698434829711914,NA,NA,NA,0.1861741542816162,21.709474086761475,NA,NA,EHD,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.27612590789795,0.03613901138305664,NA,NA,NA,0.19127726554870605,24.05811643600464,NA,NA,EXS,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,17.373722076416016,0.046186208724975586,NA,NA,NA,0.21108603477478027,21.87914514541626,NA,NA,IHD,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,15.940853834152222,0.03070831298828125,0.014246702194213867,319.18603348731995,2.3803205490112305,321.6113090515137,340.5990340709686,1,39,IOD,timeout,,,,79.8064558506012
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,15.940853834152222,0.03070831298828125,0.014246702194213867,319.18603348731995,2.3803205490112305,321.6113090515137,340.5990340709686,2,91,IOD,timeout,,,,79.80030417442322
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,15.940853834152222,0.03070831298828125,0.014246702194213867,319.18603348731995,2.3803205490112305,321.6113090515137,340.5990340709686,3,135,IOD,timeout,,,,79.78439569473267
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,15.940853834152222,0.03070831298828125,0.014246702194213867,319.18603348731995,2.3803205490112305,321.6113090515137,340.5990340709686,4,317,IOD,timeout,,,,79.79013466835022
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,18.55389142036438,0.035164833068847656,0.004686594009399414,92.87965607643127,0.7938206195831299,93.71332812309265,115.67071342468262,1,317,IOP,timeout,,,,92.87816333770752
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.5386905670166,0.08028554916381836,0.007715463638305664,165.52174186706543,1.4976134300231934,167.10735630989075,188.2919099330902,1,245,LCR,timeout,,,,82.79159259796143
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.5386905670166,0.08028554916381836,0.007715463638305664,165.52174186706543,1.4976134300231934,167.10735630989075,188.2919099330902,2,257,LCR,timeout,,,,82.72781181335449
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.764052629470825,0.03675580024719238,NA,NA,NA,0.18155217170715332,23.694271326065063,NA,NA,LOD,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.441965579986572,0.04349851608276367,NA,NA,NA,0.21841931343078613,27.10490655899048,NA,NA,LOR,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.96664810180664,0.03523540496826172,0.07859683036804199,1273.756118774414,10.050644874572754,1283.9205958843231,1304.346274614334,1,131,ROR,timeout,,,,84.91513061523438
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.96664810180664,0.03523540496826172,0.07859683036804199,1273.756118774414,10.050644874572754,1283.9205958843231,1304.346274614334,2,162,ROR,timeout,,,,84.86641097068787
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.96664810180664,0.03523540496826172,0.07859683036804199,1273.756118774414,10.050644874572754,1283.9205958843231,1304.346274614334,3,228,ROR,timeout,,,,84.87206792831421
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.96664810180664,0.03523540496826172,0.07859683036804199,1273.756118774414,10.050644874572754,1283.9205958843231,1304.346274614334,4,228,ROR,timeout,,,,84.90092611312866
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.96664810180664,0.03523540496826172,0.07859683036804199,1273.756118774414,10.050644874572754,1283.9205958843231,1304.346274614334,5,245,ROR,timeout,,,,84.91867470741272
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.96664810180664,0.03523540496826172,0.07859683036804199,1273.756118774414,10.050644874572754,1283.9205958843231,1304.346274614334,6,245,ROR,timeout,,,,84.93605542182922
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.96664810180664,0.03523540496826172,0.07859683036804199,1273.756118774414,10.050644874572754,1283.9205958843231,1304.346274614334,7,246,ROR,timeout,,,,84.93832993507385
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.96664810180664,0.03523540496826172,0.07859683036804199,1273.756118774414,10.050644874572754,1283.9205958843231,1304.346274614334,8,246,ROR,timeout,,,,84.9454836845398
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.96664810180664,0.03523540496826172,0.07859683036804199,1273.756118774414,10.050644874572754,1283.9205958843231,1304.346274614334,9,246,ROR,timeout,,,,84.90004205703735
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.96664810180664,0.03523540496826172,0.07859683036804199,1273.756118774414,10.050644874572754,1283.9205958843231,1304.346274614334,10,257,ROR,timeout,,,,84.93683552742004
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.96664810180664,0.03523540496826172,0.07859683036804199,1273.756118774414,10.050644874572754,1283.9205958843231,1304.346274614334,11,257,ROR,timeout,,,,84.85159993171692
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.96664810180664,0.03523540496826172,0.07859683036804199,1273.756118774414,10.050644874572754,1283.9205958843231,1304.346274614334,12,257,ROR,timeout,,,,84.93873572349548
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.96664810180664,0.03523540496826172,0.07859683036804199,1273.756118774414,10.050644874572754,1283.9205958843231,1304.346274614334,13,260,ROR,timeout,,,,84.94119095802307
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.96664810180664,0.03523540496826172,0.07859683036804199,1273.756118774414,10.050644874572754,1283.9205958843231,1304.346274614334,14,300,ROR,timeout,,,,84.9350802898407
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,16.96664810180664,0.03523540496826172,0.07859683036804199,1273.756118774414,10.050644874572754,1283.9205958843231,1304.346274614334,15,300,ROR,timeout,,,,84.93566179275513
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.27433753013611,0.039897918701171875,0.004113674163818359,96.48819994926453,0.8780102729797363,97.41022181510925,121.0680513381958,1,317,SCD,timeout,,,,96.486900806427
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.730083227157593,0.045752525329589844,0.016543865203857422,217.66511726379395,2.746514320373535,220.47392797470093,248.0287675857544,1,39,SCI,timeout,,,,108.77402091026306
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.730083227157593,0.045752525329589844,0.016543865203857422,217.66511726379395,2.746514320373535,220.47392797470093,248.0287675857544,2,91,SCI,timeout,,,,108.76794147491455
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.730083227157593,0.045752525329589844,0.016543865203857422,217.66511726379395,2.746514320373535,220.47392797470093,248.0287675857544,3,135,SCI,killed,test_converter_list (test.optimization.test_grover_optimizer.TestGroverOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_grover_optimizer.py"", line 152, in test_converter_list\n    results = gmf.solve(op)\n  File ""qiskit.optimization.algorithms.grover_optimizer"", line 150, in solve\n  File ""/home/swarm/qmutpy-experiments/tools/qiskit-aqua/env/lib/python3.7/site-packages/qiskit_aqua-0.9.2-py3.7.egg/qiskit/optimization/algorithms/optimization_algorithm.py"", line 290, in solve\n    raise NotImplementedError\nNotImplementedError\n",1,0.11873841285705566
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.968573570251465,0.03453707695007324,0.06485152244567871,1099.6945888996124,9.295817375183105,1109.0897948741913,1134.5966460704803,1,130,SIR,timeout,,,,99.96623373031616
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.968573570251465,0.03453707695007324,0.06485152244567871,1099.6945888996124,9.295817375183105,1109.0897948741913,1134.5966460704803,2,130,SIR,timeout,,,,99.98284840583801
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.968573570251465,0.03453707695007324,0.06485152244567871,1099.6945888996124,9.295817375183105,1109.0897948741913,1134.5966460704803,3,221,SIR,timeout,,,,99.96952247619629
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.968573570251465,0.03453707695007324,0.06485152244567871,1099.6945888996124,9.295817375183105,1109.0897948741913,1134.5966460704803,4,221,SIR,timeout,,,,99.96351289749146
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.968573570251465,0.03453707695007324,0.06485152244567871,1099.6945888996124,9.295817375183105,1109.0897948741913,1134.5966460704803,5,222,SIR,timeout,,,,99.96290993690491
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.968573570251465,0.03453707695007324,0.06485152244567871,1099.6945888996124,9.295817375183105,1109.0897948741913,1134.5966460704803,6,222,SIR,timeout,,,,99.96510553359985
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.968573570251465,0.03453707695007324,0.06485152244567871,1099.6945888996124,9.295817375183105,1109.0897948741913,1134.5966460704803,7,278,SIR,timeout,,,,99.97763872146606
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.968573570251465,0.03453707695007324,0.06485152244567871,1099.6945888996124,9.295817375183105,1109.0897948741913,1134.5966460704803,8,278,SIR,timeout,,,,99.96461343765259
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.968573570251465,0.03453707695007324,0.06485152244567871,1099.6945888996124,9.295817375183105,1109.0897948741913,1134.5966460704803,9,290,SIR,timeout,,,,99.96650314331055
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.968573570251465,0.03453707695007324,0.06485152244567871,1099.6945888996124,9.295817375183105,1109.0897948741913,1134.5966460704803,10,290,SIR,timeout,,,,99.9748809337616
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.968573570251465,0.03453707695007324,0.06485152244567871,1099.6945888996124,9.295817375183105,1109.0897948741913,1134.5966460704803,11,299,SIR,timeout,,,,99.9698736667633
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,25.838255882263184,0.12403416633605957,0.012954473495483398,258.59141874313354,11.062519311904907,269.79092669487,302.3360049724579,1,115,QGD,timeout,,,,129.2675290107727
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,25.838255882263184,0.12403416633605957,0.012954473495483398,258.59141874313354,11.062519311904907,269.79092669487,302.3360049724579,2,126,QGD,timeout,,,,129.31932091712952
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,1,115,QGI,timeout,,,,112.69827008247375
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,2,115,QGI,timeout,,,,112.69802832603455
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,3,115,QGI,timeout,,,,112.69724678993225
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,4,115,QGI,timeout,,,,112.6912956237793
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,5,115,QGI,timeout,,,,112.63821935653687
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,6,115,QGI,timeout,,,,112.66140651702881
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,7,115,QGI,timeout,,,,112.69168877601624
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,8,115,QGI,timeout,,,,112.6953911781311
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,9,115,QGI,timeout,,,,112.69414019584656
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,10,115,QGI,timeout,,,,112.6571717262268
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,11,115,QGI,timeout,,,,112.69116687774658
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,12,115,QGI,timeout,,,,112.63041806221008
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,13,115,QGI,timeout,,,,112.70232439041138
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,14,115,QGI,timeout,,,,112.63557600975037
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,15,126,QGI,timeout,,,,112.72239065170288
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,16,126,QGI,timeout,,,,112.69777989387512
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,17,126,QGI,timeout,,,,112.69854402542114
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,18,126,QGI,timeout,,,,112.70016145706177
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,19,126,QGI,timeout,,,,112.60986018180847
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,20,126,QGI,timeout,,,,112.6994309425354
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,21,126,QGI,timeout,,,,112.69540786743164
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,22,126,QGI,timeout,,,,112.72636246681213
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,23,126,QGI,timeout,,,,112.65431594848633
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,24,126,QGI,timeout,,,,112.68823480606079
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,22.514554023742676,0.04544544219970703,0.16377615928649902,2817.0855617523193,942.393604516983,3759.6883878707886,3787.7344737052917,25,126,QGI,timeout,,,,112.6582727432251
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,1,115,QGR,timeout,,,,97.39049458503723
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,2,115,QGR,timeout,,,,97.39136338233948
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,3,115,QGR,timeout,,,,97.38611698150635
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,4,115,QGR,timeout,,,,97.38858914375305
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,5,115,QGR,timeout,,,,97.33977794647217
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,6,115,QGR,timeout,,,,97.39656138420105
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,7,115,QGR,timeout,,,,97.38845610618591
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,8,115,QGR,timeout,,,,97.30828619003296
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,9,115,QGR,timeout,,,,97.38649606704712
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,10,115,QGR,timeout,,,,97.30171012878418
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,11,115,QGR,timeout,,,,97.35067629814148
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,12,115,QGR,timeout,,,,97.36900639533997
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,13,115,QGR,timeout,,,,97.32478594779968
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,14,126,QGR,timeout,,,,97.29670143127441
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,15,126,QGR,timeout,,,,97.35322904586792
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,16,126,QGR,timeout,,,,97.38985443115234
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,17,126,QGR,timeout,,,,97.3513343334198
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,18,126,QGR,timeout,,,,97.39717078208923
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,19,126,QGR,timeout,,,,97.39440155029297
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,20,126,QGR,timeout,,,,97.31516671180725
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,21,126,QGR,timeout,,,,97.38866567611694
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,22,126,QGR,timeout,,,,97.38686490058899
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.453706979751587,0.05013704299926758,0.1350245475769043,2239.4427411556244,685.8012363910675,2925.429139137268,2949.312568426132,23,126,QGR,timeout,,,,97.3929693698883
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,21.92023754119873,0.03974008560180664,NA,NA,NA,0.20105886459350586,26.757831811904907,NA,NA,QMD,NA,NA,NA,NA,NA
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.405574321746826,0.03516364097595215,0.0106353759765625,0.21084070205688477,22.724820852279663,22.981460571289062,47.42912769317627,1,115,QMI,killed,test_converter_list (test.optimization.test_grover_optimizer.TestGroverOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_grover_optimizer.py"", line 152, in test_converter_list\n    results = gmf.solve(op)\n  File ""qiskit.optimization.algorithms.grover_optimizer"", line 203, in solve\n  File ""qiskit.optimization.algorithms.grover_optimizer"", line 115, in _get_a_operator\n  File ""qiskit.optimization.algorithms.grover_optimizer"", line 1, in my_func\nNameError: name 'ClassicalRegister' is not defined\n",1,0.13817286491394043
qiskit.optimization.algorithms.grover_optimizer,test.optimization.test_grover_optimizer,6,19.405574321746826,0.03516364097595215,0.0106353759765625,0.21084070205688477,22.724820852279663,22.981460571289062,47.42912769317627,2,126,QMI,killed,test_converter_list (test.optimization.test_grover_optimizer.TestGroverOptimizer),"Traceback (most recent call last):\n  File ""./test/optimization/test_grover_optimizer.py"", line 152, in test_converter_list\n    results = gmf.solve(op)\n  File ""qiskit.optimization.algorithms.grover_optimizer"", line 195, in solve\n  File ""qiskit.optimization.algorithms.grover_optimizer"", line 126, in _get_oracle\n  File ""qiskit.optimization.algorithms.grover_optimizer"", line 1, in my_func\nNameError: name 'ClassicalRegister' is not defined\n",1,0.06897163391113281
